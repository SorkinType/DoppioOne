{
.appVersion = "1361";
DisplayStrings = (
"/horncomb",
"/horncomb.case",
"o/ohorn",
"u/uhorn",
"/jdotless",
"O/Ohorn",
"U/Uhorn",
"/Schwa",
O,
"/tildecomb.case/Ohorntilde",
J,
"/macroncomb.case/Emacron",
F,
S,
"Ø",
"æ",
"/tildecomb",
"/tilde",
"/tildecomb.case",
"Õ",
"Ñ"
);
classes = (
{
automatic = 1;
code = "A Aacute Abreve Abreveacute Abrevedotbelow Abrevegrave Abrevehookabove Abrevetilde Acaron Acircumflex Acircumflexacute Acircumflexdotbelow Acircumflexgrave Acircumflexhookabove Acircumflextilde Adblgrave Adieresis Adotbelow Agrave Ahookabove Ainvertedbreve Amacron Aogonek Aring Aringacute Atilde AE AEacute B Bdotaccent Bdotbelow C Cacute Ccaron Ccedilla Ccedillaacute Ccircumflex Cdotaccent D DZ DZcaron Eth Dcaron Dcircumflexbelow Dcroat Ddotaccent Ddotbelow Dlinebelow Dz Dzcaron E Eacute Ebreve Ecaron Ecedilla Ecedillabreve Ecircumflex Ecircumflexacute Ecircumflexdotbelow Ecircumflexgrave Ecircumflexhookabove Ecircumflextilde Edblgrave Edieresis Edotaccent Edotbelow Egrave Ehookabove Einvertedbreve Emacron Emacronacute Emacrongrave Eogonek Etilde F Fdotaccent G Gacute Gbreve Gcaron Gcircumflex Gcommaaccent Gdotaccent Gmacron H Hbar Hbrevebelow Hcaron Hcircumflex Hdotbelow I IJ IJ_acutecomb Iacute Ibreve Icaron Icircumflex Idblgrave Idieresis Idieresisacute Idotaccent Idotbelow Igrave Ihookabove Iinvertedbreve Imacron Iogonek Itilde J Jacute Jcircumflex K Kcommaaccent L LJ Lacute Lcaron Lcircumflexbelow Lcommaaccent Ldot Ldotbelow Lj Llinebelow Lslash M Macute Mdotaccent Mdotbelow N NJ Nacute Ncaron Ncircumflexbelow Ncommaaccent Ndotaccent Ndotbelow Ngrave Eng Nj Nlinebelow Ntilde O Oacute Obreve Ocaron Ocircumflex Ocircumflexacute Ocircumflexdotbelow Ocircumflexgrave Ocircumflexhookabove Ocircumflextilde Odblgrave Odieresis Odieresismacron Odotaccentmacron Odotbelow Ograve Ohookabove Ohorn Ohornacute Ohorndotbelow Ohorngrave Ohornhookabove Ohorntilde Ohungarumlaut Oinvertedbreve Omacron Omacronacute Omacrongrave Oogonek Oslash Oslashacute Otilde Otildeacute Otildedieresis Otildemacron OE P Pdotaccent Thorn Q R Racute Rcaron Rcommaaccent Rdblgrave Rdotbelow Rinvertedbreve Rlinebelow S Sacute Sacutedotaccent Saltillo Scaron Scarondotaccent Scedilla Scircumflex Scommaaccent Sdotaccent Sdotbelow Sdotbelowdotaccent Germandbls Schwa T Tbar Tcaron Tcedilla Tcircumflexbelow Tcommaaccent Tdotaccent Tdotbelow Tlinebelow U Uacute Ubreve Ucaron Ucircumflex Udblgrave Udieresis Udieresisacute Udieresiscaron Udieresisgrave Udieresismacron Udotbelow Ugrave Uhookabove Uhorn Uhornacute Uhorndotbelow Uhorngrave Uhornhookabove Uhorntilde Uhungarumlaut Uinvertedbreve Umacron Umacrondieresis Uogonek Uring Utilde Utildeacute V Vturned W Wacute Wcircumflex Wdieresis Wgrave X Xdieresis Y Yacute Ycircumflex Ydieresis Ydotaccent Ydotbelow Ygrave Yhookabove Ymacron Ytilde Z Zacute Zcaron Zdotaccent Zdotbelow Delta Omega";
name = Uppercase;
}
);
copyright = "Copyright 2022 The DoppioOne Project Authors (https://github.com/SorkinType/DoppioOne)";
customParameters = (
{
name = description;
value = "Doppio is a robust low contrast sans serif type with a contemporary feeling. Doppio will work from small text sizes through large display sizes. Doppio's boxy style makes it especially suitable for screen use.";
},
{
name = license;
value = "This Font Software is licensed under the SIL Open Font License, Version 1.1. This license is available with a FAQ at: http://scripts.sil.org/OFL";
},
{
name = licenseURL;
value = "http://scripts.sil.org/OFL";
},
{
name = trademark;
value = "DoppioOne is a trademark of Sorkin Type Co.";
},
{
name = vendorID;
value = "STC ";
},
{
name = fsType;
value = (
);
},
{
name = blueFuzz;
value = 1;
},
{
name = blueScale;
value = 0.03963;
},
{
name = blueShift;
value = 7;
},
{
name = Axes;
value = (
{
Name = Weight;
Tag = wght;
}
);
},
{
name = "Variable Font Origin";
value = master01;
},
{
name = "Use Typo Metrics";
value = 1;
},
{
name = "Use Extension Kerning";
value = 1;
},
{
name = "Use Line Breaks";
value = 1;
},
{
name = "Enforce Compatibility Check";
value = 1;
}
);
date = "2022-05-11 04:29:56 +0000";
designer = "Szymon Celej";
designerURL = www.hypnotype.com;
familyName = "Doppio One";
featurePrefixes = (
{
automatic = 1;
code = "languagesystem DFLT dflt;

languagesystem latn dflt;
languagesystem latn AZE;
languagesystem latn CRT;
languagesystem latn KAZ;
languagesystem latn TAT;
languagesystem latn TRK;
languagesystem latn ROM;
languagesystem latn MOL;
languagesystem latn CAT;
languagesystem latn NLD;
";
name = Languagesystems;
}
);
features = (
{
automatic = 1;
code = "feature locl;
feature sups;
feature frac;
feature ordn;
feature pnum;
feature tnum;
feature case;
feature zero;
";
name = aalt;
},
{
automatic = 1;
code = "lookup ccmp_Other_1 {
	@CombiningTopAccents = [acutecomb brevecomb breveinvertedcomb caroncomb circumflexcomb commaturnedabovecomb dblgravecomb dieresiscomb dotaccentcomb gravecomb hookabovecomb hungarumlautcomb macroncomb ringcomb tildecomb];
	@CombiningNonTopAccents = [brevebelowcomb cedillacomb circumflexbelowcomb dotbelowcomb macronbelowcomb ogonekcomb horncomb];
	sub [i j]' @CombiningTopAccents by [idotless jdotless];
	sub [i j]' @CombiningNonTopAccents @CombiningTopAccents by [idotless jdotless];
	@Markscomb = [dieresiscomb dotaccentcomb gravecomb acutecomb hungarumlautcomb circumflexcomb caroncomb brevecomb ringcomb tildecomb macroncomb hookabovecomb dblgravecomb breveinvertedcomb commaturnedabovecomb horncomb dotbelowcomb commaaccentcomb cedillacomb ogonekcomb brevebelowcomb macronbelowcomb brevecomb_acutecomb brevecomb_gravecomb brevecomb_hookabovecomb brevecomb_tildecomb circumflexcomb_acutecomb circumflexcomb_gravecomb circumflexcomb_hookabovecomb circumflexcomb_tildecomb];
	@MarkscombCase = [dieresiscomb.case dotaccentcomb.case gravecomb.case acutecomb.case hungarumlautcomb.case circumflexcomb.case caroncomb.case brevecomb.case ringcomb.case tildecomb.case macroncomb.case hookabovecomb.case dblgravecomb.case breveinvertedcomb.case commaturnedabovecomb.case horncomb.case dotbelowcomb.case commaaccentcomb.case cedillacomb.case ogonekcomb.case brevebelowcomb.case macronbelowcomb.case brevecomb_acutecomb.case brevecomb_gravecomb.case brevecomb_hookabovecomb.case brevecomb_tildecomb.case circumflexcomb_acutecomb.case circumflexcomb_gravecomb.case circumflexcomb_hookabovecomb.case circumflexcomb_tildecomb.case];
	sub @Markscomb @Markscomb' by @MarkscombCase;
	sub @Uppercase @Markscomb' by @MarkscombCase;
} ccmp_Other_1;

lookup ccmp_Other_2 {
	sub @Markscomb' @MarkscombCase by @MarkscombCase;
	sub @MarkscombCase @Markscomb' by @MarkscombCase;
} ccmp_Other_2;

lookup ccmp_latn_1 {
	lookupflag 0;
	sub brevecomb acutecomb by brevecomb_acutecomb;
	sub brevecomb.case acutecomb.case by brevecomb_acutecomb.case;
	sub brevecomb gravecomb by brevecomb_gravecomb;
	sub brevecomb.case gravecomb.case by brevecomb_gravecomb.case;
	sub brevecomb hookabovecomb by brevecomb_hookabovecomb;
	sub brevecomb.case hookabovecomb.case by brevecomb_hookabovecomb.case;
	sub brevecomb tildecomb by brevecomb_tildecomb;
	sub brevecomb.case tildecomb.case by brevecomb_tildecomb.case;
	sub circumflexcomb acutecomb by circumflexcomb_acutecomb;
	sub circumflexcomb.case acutecomb.case by circumflexcomb_acutecomb.case;
	sub circumflexcomb gravecomb by circumflexcomb_gravecomb;
	sub circumflexcomb.case gravecomb.case by circumflexcomb_gravecomb.case;
	sub circumflexcomb hookabovecomb by circumflexcomb_hookabovecomb;
	sub circumflexcomb.case hookabovecomb.case by circumflexcomb_hookabovecomb.case;
	sub circumflexcomb tildecomb by circumflexcomb_tildecomb;
	sub circumflexcomb.case tildecomb.case by circumflexcomb_tildecomb.case;
} ccmp_latn_1;

script latn;
lookup ccmp_latn_1;
";
name = ccmp;
},
{
automatic = 1;
code = "lookup locl_latn_0 {
	script latn;
	language AZE;
	sub i by idotaccent;
	language CRT;
	sub i by idotaccent;
	language KAZ;
	sub i by idotaccent;
	language TAT;
	sub i by idotaccent;
	language TRK;
	sub i by idotaccent;
} locl_latn_0;

lookup locl_latn_1 {
	script latn;
	language ROM;
	sub Scedilla by Scommaaccent;
	sub scedilla by scommaaccent;
	sub Tcedilla by Tcommaaccent;
	sub tcedilla by tcommaaccent;
	language MOL;
	sub Scedilla by Scommaaccent;
	sub scedilla by scommaaccent;
	sub Tcedilla by Tcommaaccent;
	sub tcedilla by tcommaaccent;
} locl_latn_1;

lookup locl_latn_2 {
	script latn;
	language CAT;
	sub  l' periodcentered' l by ldot;
	sub  L' periodcentered' L by Ldot;
} locl_latn_2;

lookup locl_latn_3 {
	script latn;
	language NLD;
	sub iacute j' by jacute;
	sub Iacute J' by Jacute;
} locl_latn_3;
";
name = locl;
},
{
automatic = 1;
code = "sub one by onesuperior;
sub two by twosuperior;
sub three by threesuperior;
sub four by foursuperior;
";
name = sups;
},
{
automatic = 1;
code = "sub one slash four by onequarter;
sub one slash two by onehalf;
sub three slash four by threequarters;
";
name = frac;
},
{
automatic = 1;
code = "sub [zero one two three four five six seven eight nine] [A a]' by ordfeminine;
sub [zero one two three four five six seven eight nine] [O o]' by ordmasculine;
";
name = ordn;
},
{
automatic = 1;
code = "sub zero.tf by zero;
sub one.tf by one;
sub two.tf by two;
sub three.tf by three;
sub four.tf by four;
sub five.tf by five;
sub six.tf by six;
sub seven.tf by seven;
sub eight.tf by eight;
sub nine.tf by nine;
";
name = pnum;
},
{
automatic = 1;
code = "sub zero by zero.tf;
sub one by one.tf;
sub two by two.tf;
sub three by three.tf;
sub four by four.tf;
sub five by five.tf;
sub six by six.tf;
sub seven by seven.tf;
sub eight by eight.tf;
sub nine by nine.tf;
";
name = tnum;
},
{
automatic = 1;
code = "sub dieresiscomb by dieresiscomb.case;
sub dotaccentcomb by dotaccentcomb.case;
sub gravecomb by gravecomb.case;
sub acutecomb by acutecomb.case;
sub hungarumlautcomb by hungarumlautcomb.case;
sub circumflexcomb by circumflexcomb.case;
sub caroncomb by caroncomb.case;
sub brevecomb by brevecomb.case;
sub ringcomb by ringcomb.case;
sub tildecomb by tildecomb.case;
sub macroncomb by macroncomb.case;
sub hookabovecomb by hookabovecomb.case;
sub dblgravecomb by dblgravecomb.case;
sub breveinvertedcomb by breveinvertedcomb.case;
sub commaturnedabovecomb by commaturnedabovecomb.case;
sub horncomb by horncomb.case;
sub dotbelowcomb by dotbelowcomb.case;
sub commaaccentcomb by commaaccentcomb.case;
sub cedillacomb by cedillacomb.case;
sub ogonekcomb by ogonekcomb.case;
sub brevebelowcomb by brevebelowcomb.case;
sub macronbelowcomb by macronbelowcomb.case;
sub brevecomb_acutecomb by brevecomb_acutecomb.case;
sub brevecomb_gravecomb by brevecomb_gravecomb.case;
sub brevecomb_hookabovecomb by brevecomb_hookabovecomb.case;
sub brevecomb_tildecomb by brevecomb_tildecomb.case;
sub circumflexcomb_acutecomb by circumflexcomb_acutecomb.case;
sub circumflexcomb_gravecomb by circumflexcomb_gravecomb.case;
sub circumflexcomb_hookabovecomb by circumflexcomb_hookabovecomb.case;
sub circumflexcomb_tildecomb by circumflexcomb_tildecomb.case;
sub zero.tf by zero.lf;
sub one.tf by one.lf;
sub two.tf by two.lf;
sub three.tf by three.lf;
sub four.tf by four.lf;
sub five.tf by five.lf;
sub six.tf by six.lf;
sub seven.tf by seven.lf;
sub eight.tf by eight.lf;
sub nine.tf by nine.lf;
";
name = case;
},
{
automatic = 1;
code = "lookupflag IgnoreMarks;
sub f f by f_f;
sub f i by fi;
sub f l by fl;
";
name = liga;
},
{
automatic = 1;
code = "sub zero by zero.zero;
sub zero.tf by zero.tf.zero;
";
name = zero;
}
);
fontMaster = (
{
alignmentZones = (
"{2060, 16}",
"{1427, 30}",
"{1055, 31}",
"{0, -32}",
"{-500, -31}"
);
ascender = 2060;
capHeight = 1427;
customParameters = (
{
name = typoAscender;
value = 2060;
},
{
name = typoDescender;
value = -500;
},
{
name = typoLineGap;
value = 0;
},
{
name = winAscent;
value = 2060;
},
{
name = winDescent;
value = 500;
},
{
name = hheaAscender;
value = 2060;
},
{
name = hheaDescender;
value = -500;
},
{
name = strikeoutPosition;
value = 512;
},
{
name = strikeoutSize;
value = 102;
}
);
descender = -500;
guideLines = (
{
position = "{-392, 1666}";
},
{
position = "{-392, 1531}";
},
{
position = "{-392, 1235}";
}
);
horizontalStems = (
223,
224
);
id = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
verticalStems = (
237,
238
);
weightValue = 237;
widthValue = 5;
xHeight = 1055;
}
);
glyphs = (
{
color = 4;
glyphname = A;
lastChange = "2022-05-11 04:45:39 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{638, 0}";
},
{
name = ogonek;
position = "{1148, 10}";
},
{
name = top;
position = "{638, 1427}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"276 0 LINE",
"391 387 LINE",
"877 387 LINE",
"997 0 LINE",
"1262 0 LINE",
"795 1427 LINE",
"477 1427 LINE",
"14 0 LINE"
);
},
{
closed = 1;
nodes = (
"631 1206 LINE",
"635 1206 LINE",
"811 602 LINE",
"455 602 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0122 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0126 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\0128 3 4 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0129 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1276;
}
);
leftKerningGroup = A;
note = A;
rightKerningGroup = A;
unicode = 0041;
},
{
glyphname = Aacute;
lastChange = "2022-05-11 04:55:43 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 303, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1276;
}
);
leftKerningGroup = A;
note = Aacute;
rightKerningGroup = A;
unicode = 00C1;
},
{
glyphname = Abreve;
lastChange = "2022-05-11 04:55:43 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = brevecomb.case;
transform = "{1, 0, 0, 1, 233, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1276;
}
);
leftKerningGroup = A;
note = Abreve;
rightKerningGroup = A;
unicode = 0102;
},
{
glyphname = Abreveacute;
lastChange = "2022-05-11 05:37:27 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = brevecomb.case;
transform = "{1, 0, 0, 1, 233, 0}";
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 303, 458}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1276;
}
);
leftKerningGroup = A;
rightKerningGroup = A;
unicode = 1EAE;
},
{
glyphname = Abrevedotbelow;
lastChange = "2022-05-11 05:37:27 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = dotbelowcomb.case;
transform = "{1, 0, 0, 1, 440, 0}";
},
{
name = brevecomb.case;
transform = "{1, 0, 0, 1, 233, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1276;
}
);
leftKerningGroup = A;
rightKerningGroup = A;
unicode = 1EB6;
},
{
glyphname = Abrevegrave;
lastChange = "2022-05-11 05:37:27 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = brevecomb.case;
transform = "{1, 0, 0, 1, 233, 0}";
},
{
name = gravecomb.case;
transform = "{1, 0, 0, 1, 311, 458}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1276;
}
);
leftKerningGroup = A;
rightKerningGroup = A;
unicode = 1EB0;
},
{
glyphname = Abrevehookabove;
lastChange = "2022-05-11 05:37:27 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = brevecomb.case;
transform = "{1, 0, 0, 1, 233, 0}";
},
{
name = hookabovecomb.case;
transform = "{1, 0, 0, 1, 332, 458}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1276;
}
);
leftKerningGroup = A;
rightKerningGroup = A;
unicode = 1EB2;
},
{
glyphname = Abrevetilde;
lastChange = "2022-05-11 06:14:00 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = brevecomb_tildecomb.case;
transform = "{1, 0, 0, 1, 233, 372}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1276;
}
);
leftKerningGroup = A;
rightKerningGroup = A;
unicode = 1EB4;
},
{
glyphname = Acaron;
lastChange = "2022-05-11 05:37:27 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = caroncomb.case;
transform = "{1, 0, 0, 1, 204, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1276;
}
);
leftKerningGroup = A;
rightKerningGroup = A;
unicode = 01CD;
},
{
glyphname = Acircumflex;
lastChange = "2022-05-11 04:55:43 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 204, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1276;
}
);
leftKerningGroup = A;
note = Acircumflex;
rightKerningGroup = A;
unicode = 00C2;
},
{
glyphname = Acircumflexacute;
lastChange = "2022-05-11 05:37:27 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 204, 0}";
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 303, 586}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1276;
}
);
leftKerningGroup = A;
rightKerningGroup = A;
unicode = 1EA4;
},
{
glyphname = Acircumflexdotbelow;
lastChange = "2022-05-11 05:37:27 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = dotbelowcomb.case;
transform = "{1, 0, 0, 1, 440, 0}";
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 204, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1276;
}
);
leftKerningGroup = A;
rightKerningGroup = A;
unicode = 1EAC;
},
{
glyphname = Acircumflexgrave;
lastChange = "2022-05-11 05:37:27 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 204, 0}";
},
{
name = gravecomb.case;
transform = "{1, 0, 0, 1, 311, 586}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1276;
}
);
leftKerningGroup = A;
rightKerningGroup = A;
unicode = 1EA6;
},
{
glyphname = Acircumflexhookabove;
lastChange = "2022-05-11 05:37:27 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 204, 0}";
},
{
name = hookabovecomb.case;
transform = "{1, 0, 0, 1, 332, 586}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1276;
}
);
leftKerningGroup = A;
rightKerningGroup = A;
unicode = 1EA8;
},
{
glyphname = Acircumflextilde;
lastChange = "2022-05-11 06:14:00 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = circumflexcomb_tildecomb.case;
transform = "{1, 0, 0, 1, 204, 372}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1276;
}
);
leftKerningGroup = A;
rightKerningGroup = A;
unicode = 1EAA;
},
{
glyphname = Adblgrave;
lastChange = "2022-05-11 05:37:27 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = dblgravecomb.case;
transform = "{1, 0, 0, 1, 118, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1276;
}
);
leftKerningGroup = A;
rightKerningGroup = A;
unicode = 0200;
},
{
glyphname = Adieresis;
lastChange = "2022-05-11 04:55:43 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = dieresiscomb.case;
transform = "{1, 0, 0, 1, 226, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1276;
}
);
leftKerningGroup = A;
note = Adieresis;
rightKerningGroup = A;
unicode = 00C4;
},
{
glyphname = Adotbelow;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = dotbelowcomb.case;
transform = "{1, 0, 0, 1, 440, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1276;
}
);
leftKerningGroup = A;
rightKerningGroup = A;
unicode = 1EA0;
},
{
glyphname = Agrave;
lastChange = "2022-05-11 04:55:43 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = gravecomb.case;
transform = "{1, 0, 0, 1, 311, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1276;
}
);
leftKerningGroup = A;
note = Agrave;
rightKerningGroup = A;
unicode = 00C0;
},
{
glyphname = Ahookabove;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = hookabovecomb.case;
transform = "{1, 0, 0, 1, 332, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1276;
}
);
leftKerningGroup = A;
rightKerningGroup = A;
unicode = 1EA2;
},
{
glyphname = Ainvertedbreve;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = breveinvertedcomb.case;
transform = "{1, 0, 0, 1, 233, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1276;
}
);
leftKerningGroup = A;
rightKerningGroup = A;
unicode = 0202;
},
{
glyphname = Amacron;
lastChange = "2022-05-11 04:55:43 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = macroncomb.case;
transform = "{1, 0, 0, 1, 224, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1276;
}
);
leftKerningGroup = A;
note = Amacron;
rightKerningGroup = A;
unicode = 0100;
},
{
glyphname = Aogonek;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"276 0 LINE",
"391 387 LINE",
"877 387 LINE",
"997 0 LINE",
"930.08 -66.92 OFFCURVE",
"864 -166.805 OFFCURVE",
"864 -279 CURVE SMOOTH",
"864 -423.272 OFFCURVE",
"972.244 -500 OFFCURVE",
"1116 -500 CURVE SMOOTH",
"1154.667 -500 OFFCURVE",
"1188.667 -495.333 OFFCURVE",
"1214 -490 CURVE SMOOTH",
"1228.667 -487.333 OFFCURVE",
"1242.333 -483.667 OFFCURVE",
"1255 -479 CURVE",
"1255 -311 LINE",
"1248.333 -312.333 OFFCURVE",
"1241.333 -313.333 OFFCURVE",
"1234 -314 CURVE SMOOTH",
"1220.667 -316 OFFCURVE",
"1204.667 -317 OFFCURVE",
"1186 -317 CURVE SMOOTH",
"1118 -317 OFFCURVE",
"1085 -281 OFFCURVE",
"1085 -225 CURVE SMOOTH",
"1085 -157 OFFCURVE",
"1136.667 -74.667 OFFCURVE",
"1262 0 CURVE",
"795 1427 LINE",
"477 1427 LINE",
"14 0 LINE"
);
},
{
closed = 1;
nodes = (
"631 1206 LINE",
"635 1206 LINE",
"811 602 LINE",
"455 602 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\0125 10 23 4 \012CALL[ ]	/* CallFunction */\012NPUSHB[ ]	/* 11 values pushed */\0129 23 25 23 41 23 57 23 73 23 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\0125 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01238 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0122 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01228 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01228 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01231 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01231 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01215 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01215 19 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01218 19 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\01233 3 29 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01215 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0128 4 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 8 23 8 39 8 55 8 71 8 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01234 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1276;
}
);
leftKerningGroup = A;
note = Aogonek;
rightKerningGroup = A;
unicode = 0104;
},
{
glyphname = Aring;
lastChange = "2022-05-11 04:55:43 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = ringcomb.case;
transform = "{1, 0, 0, 1, 325, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1276;
}
);
leftKerningGroup = A;
note = Aring;
rightKerningGroup = A;
unicode = 00C5;
},
{
glyphname = Aringacute;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = ringcomb.case;
transform = "{1, 0, 0, 1, 325, 0}";
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 303, 590}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1276;
}
);
leftKerningGroup = A;
rightKerningGroup = A;
unicode = 01FA;
},
{
glyphname = Atilde;
lastChange = "2022-05-11 06:14:00 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = tildecomb.case;
transform = "{1, 0, 0, 1, 169, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1276;
}
);
leftKerningGroup = A;
note = Atilde;
rightKerningGroup = A;
unicode = 00C3;
},
{
color = 4;
glyphname = AE;
lastChange = "2022-05-11 04:45:39 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{857, 0}";
},
{
name = top;
position = "{857, 1427}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"272 0 LINE",
"387 387 LINE",
"873 387 LINE",
"993 0 LINE",
"1643 0 LINE",
"1643 223 LINE",
"1184 223 LINE",
"1057 610 LINE",
"1583 610 LINE",
"1583 829 LINE",
"985 829 LINE",
"862 1204 LINE",
"1567 1204 LINE",
"1567 1427 LINE",
"473 1427 LINE",
"10 0 LINE"
);
},
{
closed = 1;
nodes = (
"629 1204 LINE",
"635 1204 LINE",
"807 602 LINE",
"451 602 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01210 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01214 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01214 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\01216 3 12 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0122 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01216 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0126 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\0125 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0128 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0122 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01217 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01218 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1713;
}
);
leftKerningGroup = A;
note = AE;
rightKerningGroup = E;
unicode = 00C6;
},
{
glyphname = AEacute;
lastChange = "2022-05-11 04:55:43 +0000";
layers = (
{
components = (
{
name = AE;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 522, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1713;
}
);
leftKerningGroup = A;
note = AEacute;
rightKerningGroup = E;
unicode = 01FC;
},
{
color = 4;
glyphname = B;
lastChange = "2022-05-11 04:45:39 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{656, 0}";
},
{
name = top;
position = "{656, 1427}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"770 0 LINE SMOOTH",
"914 0 OFFCURVE",
"1021.5 18.333 OFFCURVE",
"1091.5 81 CURVE SMOOTH",
"1161.5 143.667 OFFCURVE",
"1196 250 OFFCURVE",
"1196 426 CURVE SMOOTH",
"1196 514 OFFCURVE",
"1177 579.333 OFFCURVE",
"1149 626 CURVE SMOOTH",
"1135 649.333 OFFCURVE",
"1119.333 668.5 OFFCURVE",
"1102 683.5 CURVE SMOOTH",
"1054.75 724.39 OFFCURVE",
"996.852 743.239 OFFCURVE",
"954 748 CURVE",
"954 750 LINE",
"991.333 758 OFFCURVE",
"1037.333 772.667 OFFCURVE",
"1072 814 CURVE SMOOTH",
"1106.667 855.333 OFFCURVE",
"1133 922.667 OFFCURVE",
"1133 1036 CURVE SMOOTH",
"1133 1169.333 OFFCURVE",
"1104.833 1266.833 OFFCURVE",
"1041.5 1331.5 CURVE SMOOTH",
"978.167 1396.167 OFFCURVE",
"881 1427 OFFCURVE",
"741 1427 CURVE SMOOTH",
"182 1427 LINE",
"182 0 LINE"
);
},
{
closed = 1;
nodes = (
"422 1208 LINE",
"700 1208 LINE SMOOTH",
"828.699 1208 OFFCURVE",
"895 1161.165 OFFCURVE",
"895 1024 CURVE SMOOTH",
"895 859.109 OFFCURVE",
"844.479 825 OFFCURVE",
"694 825 CURVE SMOOTH",
"422 825 LINE"
);
},
{
closed = 1;
nodes = (
"422 621 LINE",
"729 621 LINE SMOOTH",
"885.359 621 OFFCURVE",
"944 590.401 OFFCURVE",
"944 422 CURVE SMOOTH",
"944 259.672 OFFCURVE",
"874.809 219 OFFCURVE",
"741 219 CURVE SMOOTH",
"422 219 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01237 12 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\0126 13 31 4 \012CALL[ ]	/* CallFunction */\012NPUSHB[ ]	/* 11 values pushed */\0129 31 25 31 41 31 57 31 73 31 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01212 31 6 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 3 values pushed */\01244 31 6 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01244 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHB[ ]	/* 11 values pushed */\0129 44 25 44 41 44 57 44 73 44 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 2 values pushed */\01219 11 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01237 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01250 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01219 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01253 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01224 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01224 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\01226 5 49 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\01212 49 26 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01236 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01224 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01239 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1312;
}
);
leftKerningGroup = H;
note = B;
rightKerningGroup = B;
unicode = 0042;
},
{
glyphname = Bdotaccent;
lastChange = "2022-05-11 04:55:43 +0000";
layers = (
{
components = (
{
name = B;
},
{
name = dotaccentcomb.case;
transform = "{1, 0, 0, 1, 458, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1312;
}
);
leftKerningGroup = H;
note = uni1E02;
rightKerningGroup = B;
unicode = 1E02;
},
{
glyphname = Bdotbelow;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = B;
},
{
name = dotbelowcomb.case;
transform = "{1, 0, 0, 1, 458, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1312;
}
);
leftKerningGroup = H;
rightKerningGroup = B;
unicode = 1E04;
},
{
color = 4;
glyphname = C;
lastChange = "2022-05-11 05:00:11 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{649, 0}";
},
{
name = top;
position = "{672, 1427}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"805.333 -25 OFFCURVE",
"905.667 -10 OFFCURVE",
"975 6 CURVE SMOOTH",
"1015 14.667 OFFCURVE",
"1049.667 25 OFFCURVE",
"1079 37 CURVE",
"1079 209 LINE",
"1055 207 OFFCURVE",
"1028 205 OFFCURVE",
"998 203 CURVE SMOOTH",
"947.333 200.333 OFFCURVE",
"874 197 OFFCURVE",
"786 197 CURVE SMOOTH",
"718 197 OFFCURVE",
"648.667 200.167 OFFCURVE",
"586 223.5 CURVE SMOOTH",
"554.667 235.167 OFFCURVE",
"525.667 252.333 OFFCURVE",
"499 275 CURVE SMOOTH",
"445.667 320.333 OFFCURVE",
"404.667 397.667 OFFCURVE",
"382 515 CURVE SMOOTH",
"370.667 573.667 OFFCURVE",
"365 644.333 OFFCURVE",
"365 727 CURVE SMOOTH",
"365 884.333 OFFCURVE",
"388.167 992.5 OFFCURVE",
"427.5 1066.5 CURVE SMOOTH",
"447.167 1103.5 OFFCURVE",
"470.333 1132.667 OFFCURVE",
"497 1154 CURVE SMOOTH",
"550.333 1196.667 OFFCURVE",
"613.167 1217.667 OFFCURVE",
"680.5 1223 CURVE SMOOTH",
"714.167 1225.667 OFFCURVE",
"748 1227 OFFCURVE",
"782 1227 CURVE SMOOTH",
"856.667 1227 OFFCURVE",
"927.667 1222.667 OFFCURVE",
"981 1220 CURVE SMOOTH",
"1012.333 1218 OFFCURVE",
"1041.667 1216 OFFCURVE",
"1069 1214 CURVE",
"1069 1386 LINE",
"1041.667 1398 OFFCURVE",
"1008.667 1408.667 OFFCURVE",
"970 1418 CURVE SMOOTH",
"903.333 1434 OFFCURVE",
"805.333 1450 OFFCURVE",
"672 1450 CURVE SMOOTH",
"593.333 1450 OFFCURVE",
"505.667 1435.333 OFFCURVE",
"423 1394 CURVE SMOOTH",
"381.667 1373.333 OFFCURVE",
"342.333 1345.5 OFFCURVE",
"305 1310.5 CURVE SMOOTH",
"230.333 1240.5 OFFCURVE",
"173.333 1133.167 OFFCURVE",
"140 984.5 CURVE SMOOTH",
"123.333 910.167 OFFCURVE",
"115 823.667 OFFCURVE",
"115 725 CURVE SMOOTH",
"115 519.667 OFFCURVE",
"146 368.833 OFFCURVE",
"198 257.5 CURVE SMOOTH",
"224 201.833 OFFCURVE",
"254.667 155.833 OFFCURVE",
"290 119.5 CURVE SMOOTH",
"360.667 46.833 OFFCURVE",
"443.167 5.333 OFFCURVE",
"534.5 -12 CURVE SMOOTH",
"580.167 -20.667 OFFCURVE",
"626 -25 OFFCURVE",
"672 -25 CURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01232 11 7 4 \012CALL[ ]	/* CallFunction */\012NPUSHB[ ]	/* 11 values pushed */\0126 32 22 32 38 32 54 32 70 32 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01214 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01214 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01214 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01220 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01222 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01225 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01239 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 39 23 39 39 39 55 39 71 39 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01242 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01242 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01244 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01244 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1179;
}
);
leftKerningGroup = O;
note = C;
rightKerningGroup = C;
unicode = 0043;
},
{
glyphname = Cacute;
lastChange = "2022-05-11 05:00:14 +0000";
layers = (
{
components = (
{
name = C;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 337, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1179;
}
);
leftKerningGroup = O;
note = Cacute;
rightKerningGroup = C;
unicode = 0106;
},
{
glyphname = Ccaron;
lastChange = "2022-05-11 05:16:03 +0000";
layers = (
{
components = (
{
name = C;
},
{
name = caroncomb.case;
transform = "{1, 0, 0, 1, 238, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1179;
}
);
leftKerningGroup = O;
note = Ccaron;
rightKerningGroup = C;
unicode = 010C;
},
{
glyphname = Ccedilla;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
components = (
{
name = C;
},
{
name = cedilla;
transform = "{1, 0, 0, 1, 380, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1179;
}
);
leftKerningGroup = O;
note = Ccedilla;
rightKerningGroup = C;
unicode = 00C7;
},
{
glyphname = Ccedillaacute;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = C;
},
{
name = cedillacomb.case;
transform = "{1, 0, 0, 1, 343, 0}";
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 337, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1179;
}
);
leftKerningGroup = O;
rightKerningGroup = C;
unicode = 1E08;
},
{
glyphname = Ccircumflex;
lastChange = "2022-05-11 05:00:14 +0000";
layers = (
{
components = (
{
name = C;
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 238, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1179;
}
);
leftKerningGroup = O;
note = Ccircumflex;
rightKerningGroup = C;
unicode = 0108;
},
{
glyphname = Cdotaccent;
lastChange = "2022-05-11 05:00:14 +0000";
layers = (
{
components = (
{
name = C;
},
{
name = dotaccentcomb.case;
transform = "{1, 0, 0, 1, 474, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1179;
}
);
leftKerningGroup = O;
note = Cdotaccent;
rightKerningGroup = C;
unicode = 010A;
},
{
color = 4;
glyphname = D;
lastChange = "2022-05-11 04:45:39 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{685, 0}";
},
{
name = center;
position = "{685, 714}";
},
{
name = top;
position = "{685, 1427}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"694 0 LINE SMOOTH",
"807.333 0 OFFCURVE",
"907.167 12.167 OFFCURVE",
"990.5 51.5 CURVE SMOOTH",
"1032.167 71.167 OFFCURVE",
"1069.333 98.167 OFFCURVE",
"1102 132.5 CURVE SMOOTH",
"1167.333 201.167 OFFCURVE",
"1213 307.167 OFFCURVE",
"1237 458.5 CURVE SMOOTH",
"1249 534.167 OFFCURVE",
"1255 623 OFFCURVE",
"1255 725 CURVE SMOOTH",
"1255 922.333 OFFCURVE",
"1228 1067 OFFCURVE",
"1180 1171 CURVE SMOOTH",
"1156 1223 OFFCURVE",
"1127 1265.667 OFFCURVE",
"1093 1299 CURVE SMOOTH",
"1025 1365.667 OFFCURVE",
"942.167 1401.333 OFFCURVE",
"845.5 1416 CURVE SMOOTH",
"797.167 1423.333 OFFCURVE",
"746.667 1427 OFFCURVE",
"694 1427 CURVE SMOOTH",
"182 1427 LINE",
"182 0 LINE"
);
},
{
closed = 1;
nodes = (
"422 1204 LINE",
"629 1204 LINE SMOOTH",
"699.667 1204 OFFCURVE",
"765 1202.833 OFFCURVE",
"821 1183.5 CURVE SMOOTH",
"849 1173.833 OFFCURVE",
"874.167 1159.167 OFFCURVE",
"896.5 1139.5 CURVE SMOOTH",
"941.167 1100.167 OFFCURVE",
"973.667 1030.833 OFFCURVE",
"991 923.5 CURVE SMOOTH",
"999.667 869.833 OFFCURVE",
"1004 804.333 OFFCURVE",
"1004 727 CURVE SMOOTH",
"1004 560.333 OFFCURVE",
"985.167 449.667 OFFCURVE",
"952.5 375 CURVE SMOOTH",
"936.167 337.667 OFFCURVE",
"916.5 308.833 OFFCURVE",
"893.5 288.5 CURVE SMOOTH",
"847.5 247.833 OFFCURVE",
"792 228.833 OFFCURVE",
"728 225.5 CURVE SMOOTH",
"696 223.833 OFFCURVE",
"663 223 OFFCURVE",
"629 223 CURVE SMOOTH",
"422 223 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01234 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01224 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01234 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHB[ ]	/* 11 values pushed */\0129 24 25 24 41 24 57 24 73 24 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01224 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0128 11 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01232 12 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0128 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01235 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01215 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01215 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 2 values pushed */\01217 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01231 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1370;
}
);
leftKerningGroup = H;
note = D;
rightKerningGroup = O;
unicode = 0044;
},
{
glyphname = DZ;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = D;
},
{
name = Z;
transform = "{1, 0, 0, 1, 1370, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 2646;
}
);
leftKerningGroup = H;
rightKerningGroup = Z;
unicode = 01F1;
},
{
glyphname = DZcaron;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = DZ;
},
{
name = caroncomb.case;
transform = "{1, 0, 0, 1, 1574, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 2646;
}
);
leftKerningGroup = H;
rightKerningGroup = Z;
unicode = 01C4;
},
{
glyphname = Eth;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"743 0 LINE SMOOTH",
"856.333 0 OFFCURVE",
"956.167 12.167 OFFCURVE",
"1039.5 51.5 CURVE SMOOTH",
"1081.167 71.167 OFFCURVE",
"1118.333 98.167 OFFCURVE",
"1151 132.5 CURVE SMOOTH",
"1216.333 201.167 OFFCURVE",
"1262 307.167 OFFCURVE",
"1286 458.5 CURVE SMOOTH",
"1298 534.167 OFFCURVE",
"1304 623 OFFCURVE",
"1304 725 CURVE SMOOTH",
"1304 922.333 OFFCURVE",
"1277 1067 OFFCURVE",
"1229 1171 CURVE SMOOTH",
"1205 1223 OFFCURVE",
"1176 1265.667 OFFCURVE",
"1142 1299 CURVE SMOOTH",
"1074 1365.667 OFFCURVE",
"991.167 1401.333 OFFCURVE",
"894.5 1416 CURVE SMOOTH",
"846.167 1423.333 OFFCURVE",
"795.667 1427 OFFCURVE",
"743 1427 CURVE SMOOTH",
"231 1427 LINE",
"231 823 LINE",
"60 823 LINE",
"60 605 LINE",
"231 605 LINE",
"231 0 LINE"
);
},
{
closed = 1;
nodes = (
"471 605 LINE",
"795 605 LINE",
"795 823 LINE",
"471 823 LINE",
"471 1204 LINE",
"678 1204 LINE SMOOTH",
"748.667 1204 OFFCURVE",
"814 1202.833 OFFCURVE",
"870 1183.5 CURVE SMOOTH",
"898 1173.833 OFFCURVE",
"923.167 1159.167 OFFCURVE",
"945.5 1139.5 CURVE SMOOTH",
"990.167 1100.167 OFFCURVE",
"1022.667 1030.833 OFFCURVE",
"1040 923.5 CURVE SMOOTH",
"1048.667 869.833 OFFCURVE",
"1053 804.333 OFFCURVE",
"1053 727 CURVE SMOOTH",
"1053 560.333 OFFCURVE",
"1034.167 449.667 OFFCURVE",
"1001.5 375 CURVE SMOOTH",
"985.167 337.667 OFFCURVE",
"965.5 308.833 OFFCURVE",
"942.5 288.5 CURVE SMOOTH",
"896.5 247.833 OFFCURVE",
"841 228.833 OFFCURVE",
"777 225.5 CURVE SMOOTH",
"745 223.833 OFFCURVE",
"712 223 OFFCURVE",
"678 223 CURVE SMOOTH",
"471 223 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01212 11 28 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\01239 1 3 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\0120 1 39 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MDRP[10000]	/* MoveDirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0129 28 25 28 41 28 57 28 73 28 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01240 12 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01236 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01243 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0124 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01219 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\0123 3 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01219 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01221 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0124 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01235 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0123 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01237 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01239 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1419;
}
);
leftKerningGroup = H;
note = Eth;
rightKerningGroup = O;
unicode = 00D0;
},
{
glyphname = Dcaron;
lastChange = "2022-05-11 04:55:43 +0000";
layers = (
{
components = (
{
name = D;
},
{
name = caroncomb.case;
transform = "{1, 0, 0, 1, 251, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1370;
}
);
leftKerningGroup = H;
note = Dcaron;
rightKerningGroup = O;
unicode = 010E;
},
{
color = 0;
glyphname = Dcircumflexbelow;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = D;
},
{
name = circumflexbelowcomb;
transform = "{1, 0, 0, 1, 256, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1370;
}
);
leftKerningGroup = H;
rightKerningGroup = O;
unicode = 1E12;
},
{
glyphname = Dcroat;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"743 0 LINE SMOOTH",
"856.333 0 OFFCURVE",
"956.167 12.167 OFFCURVE",
"1039.5 51.5 CURVE SMOOTH",
"1081.167 71.167 OFFCURVE",
"1118.333 98.167 OFFCURVE",
"1151 132.5 CURVE SMOOTH",
"1216.333 201.167 OFFCURVE",
"1262 307.167 OFFCURVE",
"1286 458.5 CURVE SMOOTH",
"1298 534.167 OFFCURVE",
"1304 623 OFFCURVE",
"1304 725 CURVE SMOOTH",
"1304 922.333 OFFCURVE",
"1277 1067 OFFCURVE",
"1229 1171 CURVE SMOOTH",
"1205 1223 OFFCURVE",
"1176 1265.667 OFFCURVE",
"1142 1299 CURVE SMOOTH",
"1074 1365.667 OFFCURVE",
"991.167 1401.333 OFFCURVE",
"894.5 1416 CURVE SMOOTH",
"846.167 1423.333 OFFCURVE",
"795.667 1427 OFFCURVE",
"743 1427 CURVE SMOOTH",
"231 1427 LINE",
"231 823 LINE",
"60 823 LINE",
"60 605 LINE",
"231 605 LINE",
"231 0 LINE"
);
},
{
closed = 1;
nodes = (
"471 605 LINE",
"795 605 LINE",
"795 823 LINE",
"471 823 LINE",
"471 1204 LINE",
"678 1204 LINE SMOOTH",
"748.667 1204 OFFCURVE",
"814 1202.833 OFFCURVE",
"870 1183.5 CURVE SMOOTH",
"898 1173.833 OFFCURVE",
"923.167 1159.167 OFFCURVE",
"945.5 1139.5 CURVE SMOOTH",
"990.167 1100.167 OFFCURVE",
"1022.667 1030.833 OFFCURVE",
"1040 923.5 CURVE SMOOTH",
"1048.667 869.833 OFFCURVE",
"1053 804.333 OFFCURVE",
"1053 727 CURVE SMOOTH",
"1053 560.333 OFFCURVE",
"1034.167 449.667 OFFCURVE",
"1001.5 375 CURVE SMOOTH",
"985.167 337.667 OFFCURVE",
"965.5 308.833 OFFCURVE",
"942.5 288.5 CURVE SMOOTH",
"896.5 247.833 OFFCURVE",
"841 228.833 OFFCURVE",
"777 225.5 CURVE SMOOTH",
"745 223.833 OFFCURVE",
"712 223 OFFCURVE",
"678 223 CURVE SMOOTH",
"471 223 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01212 11 28 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\01239 1 3 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\0120 1 39 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MDRP[10000]	/* MoveDirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0129 28 25 28 41 28 57 28 73 28 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01240 12 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01236 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01243 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0124 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01219 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\0123 3 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01219 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01221 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0124 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01235 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0123 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01237 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01239 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1419;
}
);
leftKerningGroup = D;
note = Dcroat;
rightKerningGroup = D;
unicode = 0110;
},
{
glyphname = Ddotaccent;
lastChange = "2022-05-11 04:55:43 +0000";
layers = (
{
components = (
{
name = D;
},
{
name = dotaccentcomb.case;
transform = "{1, 0, 0, 1, 487, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1370;
}
);
leftKerningGroup = H;
note = uni1E0A;
rightKerningGroup = O;
unicode = 1E0A;
},
{
glyphname = Ddotbelow;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = D;
},
{
name = dotbelowcomb.case;
transform = "{1, 0, 0, 1, 487, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1370;
}
);
leftKerningGroup = H;
rightKerningGroup = O;
unicode = 1E0C;
},
{
glyphname = Dlinebelow;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = D;
},
{
name = macronbelowcomb.case;
transform = "{1, 0, 0, 1, 271, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1370;
}
);
leftKerningGroup = H;
rightKerningGroup = O;
unicode = 1E0E;
},
{
glyphname = Dz;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = D;
},
{
name = z;
transform = "{1, 0, 0, 1, 1370, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 2462;
}
);
leftKerningGroup = H;
rightKerningGroup = z;
unicode = 01F2;
},
{
glyphname = Dzcaron;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = D;
},
{
name = zcaron;
transform = "{1, 0, 0, 1, 1370, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 2462;
}
);
leftKerningGroup = H;
rightKerningGroup = z;
unicode = 01C5;
},
{
color = 4;
glyphname = E;
lastChange = "2022-05-11 05:01:12 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{615, 0}";
},
{
name = ogonek;
position = "{1057, 0}";
},
{
name = top;
position = "{621, 1427}";
},
{
name = topleft;
position = "{20, 1427}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"1057 0 LINE",
"1057 223 LINE",
"422 223 LINE",
"422 610 LINE",
"940 610 LINE",
"940 829 LINE",
"422 829 LINE",
"422 1204 LINE",
"1040 1204 LINE",
"1040 1427 LINE",
"182 1427 LINE",
"182 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\0123 12 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0123 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0127 \012MDRP[10000]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01210 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\0125 3 6 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0122 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0128 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1149;
}
);
leftKerningGroup = H;
note = E;
rightKerningGroup = E;
unicode = 0045;
},
{
glyphname = Eacute;
lastChange = "2022-05-11 05:01:14 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 286, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1149;
}
);
leftKerningGroup = H;
note = Eacute;
rightKerningGroup = E;
unicode = 00C9;
},
{
glyphname = Ebreve;
lastChange = "2022-05-11 05:01:14 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = brevecomb.case;
transform = "{1, 0, 0, 1, 216, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1149;
}
);
leftKerningGroup = H;
note = Ebreve;
rightKerningGroup = E;
unicode = 0114;
},
{
glyphname = Ecaron;
lastChange = "2022-05-11 05:16:03 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = caroncomb.case;
transform = "{1, 0, 0, 1, 187, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1149;
}
);
leftKerningGroup = H;
note = Ecaron;
rightKerningGroup = E;
unicode = 011A;
},
{
glyphname = Ecedilla;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = cedillacomb.case;
transform = "{1, 0, 0, 1, 309, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1149;
}
);
leftKerningGroup = H;
rightKerningGroup = E;
unicode = 0228;
},
{
glyphname = Ecedillabreve;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = cedillacomb.case;
transform = "{1, 0, 0, 1, 309, 0}";
},
{
name = brevecomb.case;
transform = "{1, 0, 0, 1, 216, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1149;
}
);
leftKerningGroup = H;
rightKerningGroup = E;
unicode = 1E1C;
},
{
glyphname = Ecircumflex;
lastChange = "2022-05-11 05:01:14 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 187, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1149;
}
);
leftKerningGroup = H;
note = Ecircumflex;
rightKerningGroup = E;
unicode = 00CA;
},
{
glyphname = Ecircumflexacute;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 187, 0}";
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 286, 586}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1149;
}
);
leftKerningGroup = H;
rightKerningGroup = E;
unicode = 1EBE;
},
{
glyphname = Ecircumflexdotbelow;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = dotbelowcomb.case;
transform = "{1, 0, 0, 1, 417, 0}";
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 187, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1149;
}
);
leftKerningGroup = H;
rightKerningGroup = E;
unicode = 1EC6;
},
{
glyphname = Ecircumflexgrave;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 187, 0}";
},
{
name = gravecomb.case;
transform = "{1, 0, 0, 1, 294, 586}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1149;
}
);
leftKerningGroup = H;
rightKerningGroup = E;
unicode = 1EC0;
},
{
glyphname = Ecircumflexhookabove;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 187, 0}";
},
{
name = hookabovecomb.case;
transform = "{1, 0, 0, 1, 315, 586}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1149;
}
);
leftKerningGroup = H;
rightKerningGroup = E;
unicode = 1EC2;
},
{
glyphname = Ecircumflextilde;
lastChange = "2022-05-11 06:14:00 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = circumflexcomb_tildecomb.case;
transform = "{1, 0, 0, 1, 187, 372}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1149;
}
);
leftKerningGroup = H;
rightKerningGroup = E;
unicode = 1EC4;
},
{
glyphname = Edblgrave;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = dblgravecomb.case;
transform = "{1, 0, 0, 1, 101, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1149;
}
);
leftKerningGroup = H;
rightKerningGroup = E;
unicode = 0204;
},
{
glyphname = Edieresis;
lastChange = "2022-05-11 05:01:14 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = dieresiscomb.case;
transform = "{1, 0, 0, 1, 209, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1149;
}
);
leftKerningGroup = H;
note = Edieresis;
rightKerningGroup = E;
unicode = 00CB;
},
{
glyphname = Edotaccent;
lastChange = "2022-05-11 05:01:14 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = dotaccentcomb.case;
transform = "{1, 0, 0, 1, 423, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1149;
}
);
leftKerningGroup = H;
note = Edotaccent;
rightKerningGroup = E;
unicode = 0116;
},
{
glyphname = Edotbelow;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = dotbelowcomb.case;
transform = "{1, 0, 0, 1, 417, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1149;
}
);
leftKerningGroup = H;
rightKerningGroup = E;
unicode = 1EB8;
},
{
glyphname = Egrave;
lastChange = "2022-05-11 05:01:14 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = gravecomb.case;
transform = "{1, 0, 0, 1, 294, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1149;
}
);
leftKerningGroup = H;
note = Egrave;
rightKerningGroup = E;
unicode = 00C8;
},
{
glyphname = Ehookabove;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = hookabovecomb.case;
transform = "{1, 0, 0, 1, 315, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1149;
}
);
leftKerningGroup = H;
rightKerningGroup = E;
unicode = 1EBA;
},
{
glyphname = Einvertedbreve;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = breveinvertedcomb.case;
transform = "{1, 0, 0, 1, 216, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1149;
}
);
leftKerningGroup = H;
rightKerningGroup = E;
unicode = 0206;
},
{
glyphname = Emacron;
lastChange = "2022-05-11 05:01:14 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = macroncomb.case;
transform = "{1, 0, 0, 1, 207, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1149;
}
);
leftKerningGroup = H;
note = Emacron;
rightKerningGroup = E;
unicode = 0112;
},
{
glyphname = Emacronacute;
lastChange = "2022-05-11 05:38:04 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = macroncomb.case;
transform = "{1, 0, 0, 1, 207, 0}";
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 286, 340}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1149;
}
);
leftKerningGroup = H;
rightKerningGroup = E;
unicode = 1E16;
},
{
glyphname = Emacrongrave;
lastChange = "2022-05-11 05:38:04 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = macroncomb.case;
transform = "{1, 0, 0, 1, 207, 0}";
},
{
name = gravecomb.case;
transform = "{1, 0, 0, 1, 294, 340}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1149;
}
);
leftKerningGroup = H;
rightKerningGroup = E;
unicode = 1E14;
},
{
glyphname = Eogonek;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"795 0 LINE",
"729.685 -68.154 OFFCURVE",
"663 -166.939 OFFCURVE",
"663 -279 CURVE SMOOTH",
"663 -423.272 OFFCURVE",
"771.244 -500 OFFCURVE",
"915 -500 CURVE SMOOTH",
"953.667 -500 OFFCURVE",
"986.333 -495.333 OFFCURVE",
"1013 -490 CURVE SMOOTH",
"1027.667 -487.333 OFFCURVE",
"1041.667 -483.667 OFFCURVE",
"1055 -479 CURVE",
"1055 -311 LINE",
"1048.333 -312.333 OFFCURVE",
"1041.333 -313.333 OFFCURVE",
"1034 -314 CURVE SMOOTH",
"1020.667 -316 OFFCURVE",
"1004.333 -317 OFFCURVE",
"985 -317 CURVE SMOOTH",
"917 -317 OFFCURVE",
"885 -281 OFFCURVE",
"885 -225 CURVE SMOOTH",
"885 -157 OFFCURVE",
"931.667 -80 OFFCURVE",
"1057 0 CURVE",
"1057 223 LINE",
"422 223 LINE",
"422 610 LINE",
"940 610 LINE",
"940 829 LINE",
"422 829 LINE",
"422 1204 LINE",
"1040 1204 LINE",
"1040 1427 LINE",
"182 1427 LINE",
"182 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01238 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01231 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01238 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\0123 12 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0127 \012MDRP[10000]	/* MoveDirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0129 31 25 31 41 31 57 31 73 31 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01231 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01213 10 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 3 values pushed */\01236 31 13 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01239 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01210 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01236 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01236 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01223 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01223 19 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01226 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01226 19 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\0125 3 6 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0122 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01236 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0128 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0129 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01216 4 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 16 23 16 39 16 55 16 71 16 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1149;
}
);
leftKerningGroup = H;
note = Eogonek;
rightKerningGroup = E;
unicode = 0118;
},
{
glyphname = Etilde;
lastChange = "2022-05-11 06:14:00 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = tildecomb.case;
transform = "{1, 0, 0, 1, 152, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1149;
}
);
leftKerningGroup = H;
rightKerningGroup = E;
unicode = 1EBC;
},
{
color = 4;
glyphname = F;
lastChange = "2022-05-11 05:38:11 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{555, 0}";
},
{
name = top;
position = "{612, 1427}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"422 0 LINE",
"422 551 LINE",
"963 551 LINE",
"963 774 LINE",
"422 774 LINE",
"422 1204 LINE",
"1040 1204 LINE",
"1040 1427 LINE",
"182 1427 LINE",
"182 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\0123 12 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0123 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0127 \012MDRP[10000]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0128 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0128 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\0125 3 6 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0122 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1110;
}
);
leftKerningGroup = H;
note = F;
rightKerningGroup = F;
unicode = 0046;
},
{
glyphname = Fdotaccent;
lastChange = "2022-05-11 05:38:13 +0000";
layers = (
{
components = (
{
name = F;
},
{
name = dotaccentcomb.case;
transform = "{1, 0, 0, 1, 414, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1110;
}
);
leftKerningGroup = H;
note = uni1E1E;
rightKerningGroup = F;
unicode = 1E1E;
},
{
color = 4;
glyphname = G;
lastChange = "2022-05-11 04:45:39 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{675, 0}";
},
{
name = top;
position = "{675, 1427}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"115 431 OFFCURVE",
"176 242 OFFCURVE",
"288 126 CURVE SMOOTH",
"400 10 OFFCURVE",
"563.333 -31 OFFCURVE",
"770 -31 CURVE SMOOTH",
"896.667 -31 OFFCURVE",
"1008 -7.333 OFFCURVE",
"1088 18 CURVE SMOOTH",
"1134.667 32.667 OFFCURVE",
"1177.667 49.333 OFFCURVE",
"1217 68 CURVE",
"1217 799 LINE",
"719 799 LINE",
"719 580 LINE",
"979 580 LINE",
"979 213 LINE",
"962.333 208.333 OFFCURVE",
"943 204.333 OFFCURVE",
"921 201 CURVE SMOOTH",
"883.667 194.333 OFFCURVE",
"829.333 190 OFFCURVE",
"764 190 CURVE SMOOTH",
"613.333 190 OFFCURVE",
"512.667 229.333 OFFCURVE",
"450 316 CURVE SMOOTH",
"387.333 402.667 OFFCURVE",
"362 536.333 OFFCURVE",
"362 727 CURVE SMOOTH",
"362 913.667 OFFCURVE",
"385 1040 OFFCURVE",
"449 1120 CURVE SMOOTH",
"513 1200 OFFCURVE",
"619.333 1233 OFFCURVE",
"786 1233 CURVE SMOOTH",
"882 1233 OFFCURVE",
"976.333 1227.333 OFFCURVE",
"1047 1222 CURVE SMOOTH",
"1088.333 1219.333 OFFCURVE",
"1127 1216 OFFCURVE",
"1163 1212 CURVE",
"1163 1393 LINE",
"1129.667 1404.333 OFFCURVE",
"1092 1414.667 OFFCURVE",
"1050 1424 CURVE SMOOTH",
"976.667 1440 OFFCURVE",
"874.333 1456 OFFCURVE",
"745 1456 CURVE SMOOTH",
"553 1456 OFFCURVE",
"396.5 1410.5 OFFCURVE",
"286.5 1296.5 CURVE SMOOTH",
"176.5 1182.5 OFFCURVE",
"115 1000.333 OFFCURVE",
"115 727 CURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01246 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01231 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01246 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01221 12 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0126 21 22 21 38 21 54 21 70 21 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01231 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01236 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01247 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0125 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01241 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01241 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\01235 3 32 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0125 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01213 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0128 13 24 13 40 13 56 13 72 13 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01216 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01241 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01226 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 26 23 26 39 26 55 26 71 26 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1350;
}
);
leftKerningGroup = O;
note = G;
rightKerningGroup = G;
unicode = 0047;
},
{
glyphname = Gacute;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = G;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 340, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1350;
}
);
leftKerningGroup = O;
rightKerningGroup = G;
unicode = 01F4;
},
{
glyphname = Gbreve;
lastChange = "2022-05-11 04:55:43 +0000";
layers = (
{
components = (
{
name = G;
},
{
name = brevecomb.case;
transform = "{1, 0, 0, 1, 270, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1350;
}
);
leftKerningGroup = O;
note = Gbreve;
rightKerningGroup = G;
unicode = 011E;
},
{
glyphname = Gcaron;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = G;
},
{
name = caroncomb.case;
transform = "{1, 0, 0, 1, 241, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1350;
}
);
leftKerningGroup = O;
rightKerningGroup = G;
unicode = 01E6;
},
{
glyphname = Gcircumflex;
lastChange = "2022-05-11 04:55:43 +0000";
layers = (
{
components = (
{
name = G;
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 241, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1350;
}
);
leftKerningGroup = O;
note = Gcircumflex;
rightKerningGroup = G;
unicode = 011C;
},
{
glyphname = Gcommaaccent;
lastChange = "2022-05-11 04:55:43 +0000";
layers = (
{
components = (
{
name = G;
},
{
name = commaaccentcomb.case;
transform = "{1, 0, 0, 1, 443, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1350;
}
);
leftKerningGroup = O;
note = Gcommaaccent;
rightKerningGroup = G;
unicode = 0122;
},
{
glyphname = Gdotaccent;
lastChange = "2022-05-11 04:55:43 +0000";
layers = (
{
components = (
{
name = G;
},
{
name = dotaccentcomb.case;
transform = "{1, 0, 0, 1, 477, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1350;
}
);
leftKerningGroup = O;
note = Gdotaccent;
rightKerningGroup = G;
unicode = 0120;
},
{
glyphname = Gmacron;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = G;
},
{
name = macroncomb.case;
transform = "{1, 0, 0, 1, 261, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1350;
}
);
leftKerningGroup = O;
rightKerningGroup = G;
unicode = 1E20;
},
{
color = 4;
glyphname = H;
lastChange = "2022-05-11 04:45:39 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{728, 0}";
},
{
name = center;
position = "{728, 714}";
},
{
name = top;
position = "{728, 1427}";
},
{
name = topleft;
position = "{20, 1427}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"422 0 LINE",
"422 612 LINE",
"1034 612 LINE",
"1034 0 LINE",
"1274 0 LINE",
"1274 1427 LINE",
"1034 1427 LINE",
"1034 836 LINE",
"422 836 LINE",
"422 1427 LINE",
"182 1427 LINE",
"182 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\0121 12 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0124 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0125 12 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0124 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0127 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0129 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0125 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01213 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0124 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0126 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01210 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\0123 3 8 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1456;
}
);
leftKerningGroup = H;
note = H;
rightKerningGroup = H;
unicode = 0048;
},
{
glyphname = Hbar;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"455 0 LINE",
"455 612 LINE",
"1067 612 LINE",
"1067 0 LINE",
"1307 0 LINE",
"1307 1016 LINE",
"1491 1016 LINE",
"1491 1182 LINE",
"1307 1182 LINE",
"1307 1427 LINE",
"1067 1427 LINE",
"1067 1182 LINE",
"455 1182 LINE",
"455 1427 LINE",
"215 1427 LINE",
"215 1182 LINE",
"0 1182 LINE",
"0 1016 LINE",
"215 1016 LINE",
"215 0 LINE"
);
},
{
closed = 1;
nodes = (
"455 1016 LINE",
"1067 1016 LINE",
"1067 836 LINE",
"455 836 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01222 12 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01210 12 7 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01222 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01213 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0127 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01215 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01222 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01217 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0127 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01220 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01225 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0124 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0128 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0128 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01214 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01214 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01218 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\0123 7 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01220 3 16 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0123 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0126 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0123 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01210 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01212 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01221 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1491;
}
);
leftKerningGroup = H;
note = Hbar;
rightKerningGroup = H;
unicode = 0126;
},
{
glyphname = Hbrevebelow;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = H;
},
{
name = brevebelowcomb.case;
transform = "{1, 0, 0, 1, 323, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1456;
}
);
leftKerningGroup = H;
rightKerningGroup = H;
unicode = 1E2A;
},
{
glyphname = Hcaron;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = H;
},
{
name = caroncomb.case;
transform = "{1, 0, 0, 1, 294, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1456;
}
);
leftKerningGroup = H;
rightKerningGroup = H;
unicode = 021E;
},
{
glyphname = Hcircumflex;
lastChange = "2022-05-11 04:55:43 +0000";
layers = (
{
components = (
{
name = H;
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 294, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1456;
}
);
leftKerningGroup = H;
note = Hcircumflex;
rightKerningGroup = H;
unicode = 0124;
},
{
glyphname = Hdotbelow;
lastChange = "2022-05-11 05:37:04 +0000";
layers = (
{
components = (
{
name = H;
},
{
name = dotbelowcomb.case;
transform = "{1, 0, 0, 1, 530, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1456;
}
);
leftKerningGroup = H;
rightKerningGroup = H;
unicode = 1E24;
},
{
color = 4;
glyphname = I;
lastChange = "2022-05-11 04:45:39 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{302, 0}";
},
{
name = ogonek;
position = "{544, 10}";
},
{
name = top;
position = "{302, 1427}";
},
{
name = topleft;
position = "{20, 1427}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"422 0 LINE",
"422 1427 LINE",
"182 1427 LINE",
"182 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\0121 12 0 4 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0122 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 604;
}
);
leftKerningGroup = H;
note = I;
rightKerningGroup = H;
unicode = 0049;
},
{
glyphname = IJ;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = J;
transform = "{1, 0, 0, 1, 604, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1310;
}
);
leftKerningGroup = H;
note = IJ;
rightKerningGroup = J;
unicode = 0132;
},
{
glyphname = IJ_acutecomb;
lastChange = "2022-05-11 05:37:51 +0000";
layers = (
{
components = (
{
name = IJ;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 681, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1310;
}
);
leftKerningGroup = H;
rightKerningGroup = J;
},
{
glyphname = Iacute;
lastChange = "2022-05-11 04:55:43 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, -33, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 604;
}
);
leftKerningGroup = H;
note = Iacute;
rightKerningGroup = H;
unicode = 00CD;
},
{
glyphname = Ibreve;
lastChange = "2022-05-11 04:55:43 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = brevecomb.case;
transform = "{1, 0, 0, 1, -103, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 604;
}
);
leftKerningGroup = H;
note = Ibreve;
rightKerningGroup = H;
unicode = 012C;
},
{
glyphname = Icaron;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = caroncomb.case;
transform = "{1, 0, 0, 1, -132, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 604;
}
);
leftKerningGroup = H;
rightKerningGroup = H;
unicode = 01CF;
},
{
glyphname = Icircumflex;
lastChange = "2022-05-11 04:55:43 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, -132, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 604;
}
);
leftKerningGroup = H;
note = Icircumflex;
rightKerningGroup = H;
unicode = 00CE;
},
{
glyphname = Idblgrave;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = dblgravecomb.case;
transform = "{1, 0, 0, 1, -218, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 604;
}
);
leftKerningGroup = H;
rightKerningGroup = H;
unicode = 0208;
},
{
glyphname = Idieresis;
lastChange = "2022-05-11 04:55:43 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = dieresiscomb.case;
transform = "{1, 0, 0, 1, -110, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 604;
}
);
leftKerningGroup = H;
note = Idieresis;
rightKerningGroup = H;
unicode = 00CF;
},
{
glyphname = Idieresisacute;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = dieresiscomb.case;
transform = "{1, 0, 0, 1, -110, 0}";
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, -33, 376}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 604;
}
);
leftKerningGroup = H;
rightKerningGroup = H;
unicode = 1E2E;
},
{
glyphname = Idotaccent;
lastChange = "2022-05-11 04:55:43 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = dotaccentcomb.case;
transform = "{1, 0, 0, 1, 104, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 604;
}
);
leftKerningGroup = H;
note = Idotaccent;
rightKerningGroup = H;
unicode = 0130;
},
{
glyphname = Idotbelow;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = dotbelowcomb.case;
transform = "{1, 0, 0, 1, 104, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 604;
}
);
leftKerningGroup = H;
rightKerningGroup = H;
unicode = 1ECA;
},
{
glyphname = Igrave;
lastChange = "2022-05-11 04:55:43 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = gravecomb.case;
transform = "{1, 0, 0, 1, -25, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 604;
}
);
leftKerningGroup = H;
note = Igrave;
rightKerningGroup = H;
unicode = 00CC;
},
{
glyphname = Ihookabove;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = hookabovecomb.case;
transform = "{1, 0, 0, 1, -4, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 604;
}
);
leftKerningGroup = H;
rightKerningGroup = H;
unicode = 1EC8;
},
{
glyphname = Iinvertedbreve;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = breveinvertedcomb.case;
transform = "{1, 0, 0, 1, -103, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 604;
}
);
leftKerningGroup = H;
rightKerningGroup = H;
unicode = 020A;
},
{
glyphname = Imacron;
lastChange = "2022-05-11 04:55:43 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = macroncomb.case;
transform = "{1, 0, 0, 1, -112, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 604;
}
);
leftKerningGroup = H;
note = Imacron;
rightKerningGroup = H;
unicode = 012A;
},
{
glyphname = Iogonek;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"144.596 -47.452 OFFCURVE",
"65 -154.095 OFFCURVE",
"65 -279 CURVE SMOOTH",
"65 -423.272 OFFCURVE",
"173.244 -500 OFFCURVE",
"317 -500 CURVE SMOOTH",
"355.667 -500 OFFCURVE",
"388.333 -495.333 OFFCURVE",
"415 -490 CURVE SMOOTH",
"429.667 -487.333 OFFCURVE",
"443.667 -483.667 OFFCURVE",
"457 -479 CURVE",
"457 -311 LINE",
"450.333 -312.333 OFFCURVE",
"443.333 -313.333 OFFCURVE",
"436 -314 CURVE SMOOTH",
"422.667 -316 OFFCURVE",
"406.333 -317 OFFCURVE",
"387 -317 CURVE SMOOTH",
"319 -317 OFFCURVE",
"287 -281 OFFCURVE",
"287 -225 CURVE SMOOTH",
"287 -157 OFFCURVE",
"333.667 -80 OFFCURVE",
"459 0 CURVE",
"459 1427 LINE",
"219 1427 LINE",
"219 21 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\0121 12 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\0125 0 1 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01212 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0125 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01223 10 \012MIRP[10100]	/* MoveIndirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0122 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01215 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01215 19 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01218 19 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01215 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0128 4 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 8 23 8 39 8 55 8 71 8 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 641;
}
);
leftKerningGroup = H;
note = Iogonek;
rightKerningGroup = H;
unicode = 012E;
},
{
glyphname = Itilde;
lastChange = "2022-05-11 06:14:00 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = tildecomb.case;
transform = "{1, 0, 0, 1, -167, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 604;
}
);
leftKerningGroup = H;
note = Itilde;
rightKerningGroup = H;
unicode = 0128;
},
{
color = 4;
glyphname = J;
lastChange = "2022-05-11 05:37:49 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{353, 0}";
},
{
name = top;
position = "{412, 1427}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"36 3.333 OFFCURVE",
"60 -2.667 OFFCURVE",
"86 -8 CURVE SMOOTH",
"130 -17.333 OFFCURVE",
"189 -25 OFFCURVE",
"253 -25 CURVE SMOOTH",
"342.333 -25 OFFCURVE",
"410.5 -10.167 OFFCURVE",
"456.5 30.5 CURVE SMOOTH",
"502.5 71.167 OFFCURVE",
"526 137 OFFCURVE",
"526 238 CURVE SMOOTH",
"525 1427 LINE",
"284 1427 LINE",
"284 311 LINE SMOOTH",
"284 191.337 OFFCURVE",
"250.217 178 OFFCURVE",
"153 178 CURVE SMOOTH",
"123.667 178 OFFCURVE",
"90 178.667 OFFCURVE",
"62 180 CURVE SMOOTH",
"45.333 180.667 OFFCURVE",
"29.333 181.333 OFFCURVE",
"14 182 CURVE",
"14 10 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01213 12 10 4 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01211 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01211 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01218 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 2 values pushed */\0120 5 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0122 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 706;
}
);
leftKerningGroup = J;
note = J;
rightKerningGroup = J;
unicode = 004A;
},
{
glyphname = Jacute;
lastChange = "2022-05-11 05:37:51 +0000";
layers = (
{
components = (
{
name = J;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 77, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 706;
}
);
leftKerningGroup = J;
rightKerningGroup = J;
},
{
glyphname = Jcircumflex;
lastChange = "2022-05-11 05:37:51 +0000";
layers = (
{
components = (
{
name = J;
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, -22, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 706;
}
);
leftKerningGroup = J;
note = Jcircumflex;
rightKerningGroup = J;
unicode = 0134;
},
{
color = 4;
glyphname = K;
lastChange = "2022-05-11 04:45:39 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{657, 0}";
},
{
name = top;
position = "{657, 1427}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"422 0 LINE",
"422 621 LINE",
"642 621 LINE",
"994 0 LINE",
"1275 0 LINE",
"854 737 LINE",
"1252 1427 LINE",
"975 1427 LINE",
"642 844 LINE",
"422 844 LINE",
"422 1427 LINE",
"182 1427 LINE",
"182 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\0121 12 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01210 \012MDRP[10000]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0124 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0127 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0127 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01211 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01211 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\0123 3 9 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1313;
}
);
leftKerningGroup = H;
note = K;
rightKerningGroup = K;
unicode = 004B;
},
{
glyphname = Kcommaaccent;
lastChange = "2022-05-11 04:55:43 +0000";
layers = (
{
components = (
{
name = K;
},
{
name = commaaccentcomb.case;
transform = "{1, 0, 0, 1, 425, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1313;
}
);
leftKerningGroup = H;
note = Kcommaaccent;
rightKerningGroup = K;
unicode = 0136;
},
{
color = 4;
glyphname = L;
lastChange = "2022-05-11 04:45:39 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{528, 0}";
},
{
name = center;
position = "{528, 714}";
},
{
name = top;
position = "{528, 1427}";
},
{
name = topright;
position = "{1036, 1427}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"1012 0 LINE",
"1012 223 LINE",
"422 223 LINE",
"422 1427 LINE",
"182 1427 LINE",
"182 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\0121 12 0 4 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0124 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 2 values pushed */\0122 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1056;
}
);
leftKerningGroup = H;
note = L;
rightKerningGroup = L;
unicode = 004C;
},
{
glyphname = LJ;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = L;
},
{
name = J;
transform = "{1, 0, 0, 1, 1056, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1762;
}
);
leftKerningGroup = H;
rightKerningGroup = J;
unicode = 01C7;
},
{
glyphname = Lacute;
lastChange = "2022-05-11 04:55:43 +0000";
layers = (
{
components = (
{
name = L;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 193, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1056;
}
);
leftKerningGroup = H;
note = Lacute;
rightKerningGroup = L;
unicode = 0139;
},
{
glyphname = Lcaron;
lastChange = "2022-05-11 05:00:43 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"721 958 LINE",
"743 1003 OFFCURVE",
"764 1045 OFFCURVE",
"783 1085 CURVE SMOOTH",
"798 1116 OFFCURVE",
"862 1251 OFFCURVE",
"870 1270 CURVE SMOOTH",
"893 1319 OFFCURVE",
"905 1356 OFFCURVE",
"905 1382 CURVE SMOOTH",
"905 1422 OFFCURVE",
"878 1439 OFFCURVE",
"825 1458 CURVE SMOOTH",
"796 1467 OFFCURVE",
"765 1472 OFFCURVE",
"740 1476 CURVE SMOOTH",
"725 1478 OFFCURVE",
"711 1480 OFFCURVE",
"698 1481 CURVE",
"573 1007 LINE"
);
},
{
closed = 1;
nodes = (
"1012 0 LINE",
"1012 223 LINE",
"422 223 LINE",
"422 1427 LINE",
"182 1427 LINE",
"182 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\0128 15 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01225 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01219 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01220 12 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0128 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01226 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01219 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01223 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01223 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\0120 9 17 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01221 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1062;
}
);
leftKerningGroup = H;
note = Lcaron;
rightKerningGroup = L;
unicode = 013D;
},
{
color = 0;
glyphname = Lcircumflexbelow;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = L;
},
{
name = circumflexbelowcomb;
transform = "{1, 0, 0, 1, 99, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1056;
}
);
leftKerningGroup = H;
rightKerningGroup = L;
unicode = 1E3C;
},
{
glyphname = Lcommaaccent;
lastChange = "2022-05-11 04:55:43 +0000";
layers = (
{
components = (
{
name = L;
},
{
name = commaaccentcomb.case;
transform = "{1, 0, 0, 1, 296, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1056;
}
);
leftKerningGroup = H;
note = Lcommaaccent;
rightKerningGroup = L;
unicode = 013B;
},
{
glyphname = Ldot;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
components = (
{
name = L;
},
{
name = period;
transform = "{1, 0, 0, 1, 535, 662}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1087;
}
);
leftKerningGroup = H;
note = Ldot;
rightKerningGroup = L;
unicode = 013F;
},
{
glyphname = Ldotbelow;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = L;
},
{
name = dotbelowcomb.case;
transform = "{1, 0, 0, 1, 330, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1056;
}
);
leftKerningGroup = H;
rightKerningGroup = L;
unicode = 1E36;
},
{
glyphname = Lj;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = L;
},
{
name = j;
transform = "{1, 0, 0, 1, 1056, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1686;
}
);
leftKerningGroup = H;
rightKerningGroup = j;
unicode = 01C8;
},
{
glyphname = Llinebelow;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = L;
},
{
name = macronbelowcomb.case;
transform = "{1, 0, 0, 1, 114, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1056;
}
);
leftKerningGroup = H;
rightKerningGroup = L;
unicode = 1E3A;
},
{
glyphname = Lslash;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"1112 0 LINE",
"1112 229 LINE",
"520 229 LINE",
"520 578 LINE",
"850 793 LINE",
"850 1047 LINE",
"520 829 LINE",
"520 1427 LINE",
"283 1427 LINE",
"283 702 LINE",
"123 602 LINE",
"123 352 LINE",
"283 453 LINE",
"283 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\0129 13 3 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0123 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0129 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDRP[10000]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0124 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01212 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 3 values pushed */\0120 12 4 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 3 values pushed */\0121 12 4 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 3 values pushed */\0126 12 4 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 3 values pushed */\0127 12 4 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 2 values pushed */\01210 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1182;
}
);
leftKerningGroup = H;
note = Lslash;
rightKerningGroup = L;
unicode = 0141;
},
{
color = 4;
glyphname = M;
lastChange = "2022-05-11 04:45:39 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{867, 0}";
},
{
name = top;
position = "{867, 1427}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"422 0 LINE",
"422 1204 LINE",
"428 1204 LINE",
"437.333 1173.333 OFFCURVE",
"446.333 1143.667 OFFCURVE",
"455 1115 CURVE SMOOTH",
"469.667 1065.667 OFFCURVE",
"488.667 1007 OFFCURVE",
"502 967 CURVE SMOOTH",
"690 387 LINE",
"1049 387 LINE",
"1233 963 LINE SMOOTH",
"1246.333 1003 OFFCURVE",
"1265.333 1063.333 OFFCURVE",
"1280 1114 CURVE SMOOTH",
"1307 1204 LINE",
"1313 1204 LINE",
"1313 0 LINE",
"1552 0 LINE",
"1552 1427 LINE",
"1143 1427 LINE",
"870 567 LINE",
"862 567 LINE",
"598 1427 LINE",
"182 1427 LINE",
"182 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0127 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01225 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0127 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0126 12 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0127 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0129 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0129 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01222 12 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01226 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0124 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0126 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01223 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01223 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\0123 4 14 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0124 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0128 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01221 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01222 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1734;
}
);
leftKerningGroup = M;
note = M;
rightKerningGroup = M;
unicode = 004D;
},
{
glyphname = Macute;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = M;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 532, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1734;
}
);
leftKerningGroup = M;
rightKerningGroup = M;
unicode = 1E3E;
},
{
glyphname = Mdotaccent;
lastChange = "2022-05-11 04:55:43 +0000";
layers = (
{
components = (
{
name = M;
},
{
name = dotaccentcomb.case;
transform = "{1, 0, 0, 1, 669, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1734;
}
);
leftKerningGroup = M;
note = uni1E40;
rightKerningGroup = M;
unicode = 1E40;
},
{
glyphname = Mdotbelow;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = M;
},
{
name = dotbelowcomb.case;
transform = "{1, 0, 0, 1, 669, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1734;
}
);
leftKerningGroup = M;
rightKerningGroup = M;
unicode = 1E42;
},
{
color = 4;
glyphname = N;
lastChange = "2022-05-11 04:45:39 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{761, 0}";
},
{
name = top;
position = "{761, 1427}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"420 0 LINE",
"420 1204 LINE",
"424 1204 LINE",
"431.333 1186 OFFCURVE",
"439.667 1166.333 OFFCURVE",
"449 1145 CURVE SMOOTH",
"456.333 1127 OFFCURVE",
"465.333 1106 OFFCURVE",
"476 1082 CURVE SMOOTH",
"486.667 1058 OFFCURVE",
"498 1032 OFFCURVE",
"510 1004 CURVE SMOOTH",
"950 0 LINE",
"1339 0 LINE",
"1339 1427 LINE",
"1102 1427 LINE",
"1102 436 LINE SMOOTH",
"1102 413.333 OFFCURVE",
"1102 389.667 OFFCURVE",
"1102 365 CURVE SMOOTH",
"1102 340.333 OFFCURVE",
"1102.333 317.333 OFFCURVE",
"1103 296 CURVE SMOOTH",
"1103.667 271.333 OFFCURVE",
"1104.333 247 OFFCURVE",
"1105 223 CURVE",
"1100 223 LINE",
"580 1427 LINE",
"182 1427 LINE",
"182 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0128 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01222 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0128 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0122 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0128 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01211 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 3 values pushed */\0123 8 11 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\0128 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01219 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01211 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01223 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0129 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0129 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01211 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01211 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01220 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01220 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01211 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0122 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01218 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0128 18 24 18 40 18 56 18 72 18 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1521;
}
);
leftKerningGroup = H;
note = N;
rightKerningGroup = H;
unicode = 004E;
},
{
glyphname = NJ;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = N;
},
{
name = J;
transform = "{1, 0, 0, 1, 1521, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 2227;
}
);
leftKerningGroup = H;
rightKerningGroup = J;
unicode = 01CA;
},
{
glyphname = Nacute;
lastChange = "2022-05-11 04:55:43 +0000";
layers = (
{
components = (
{
name = N;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 426, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1521;
}
);
leftKerningGroup = H;
note = Nacute;
rightKerningGroup = H;
unicode = 0143;
},
{
glyphname = Ncaron;
lastChange = "2022-05-11 04:55:43 +0000";
layers = (
{
components = (
{
name = N;
},
{
name = caroncomb.case;
transform = "{1, 0, 0, 1, 327, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1521;
}
);
leftKerningGroup = H;
note = Ncaron;
rightKerningGroup = H;
unicode = 0147;
},
{
color = 0;
glyphname = Ncircumflexbelow;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = N;
},
{
name = circumflexbelowcomb;
transform = "{1, 0, 0, 1, 332, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1521;
}
);
leftKerningGroup = H;
rightKerningGroup = H;
unicode = 1E4A;
},
{
glyphname = Ncommaaccent;
lastChange = "2022-05-11 04:55:43 +0000";
layers = (
{
components = (
{
name = N;
},
{
name = commaaccentcomb.case;
transform = "{1, 0, 0, 1, 529, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1521;
}
);
leftKerningGroup = H;
note = Ncommaaccent;
rightKerningGroup = H;
unicode = 0145;
},
{
glyphname = Ndotaccent;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = N;
},
{
name = dotaccentcomb.case;
transform = "{1, 0, 0, 1, 563, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1521;
}
);
leftKerningGroup = H;
rightKerningGroup = H;
unicode = 1E44;
},
{
glyphname = Ndotbelow;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = N;
},
{
name = dotbelowcomb.case;
transform = "{1, 0, 0, 1, 563, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1521;
}
);
leftKerningGroup = H;
rightKerningGroup = H;
unicode = 1E46;
},
{
glyphname = Ngrave;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = N;
},
{
name = gravecomb.case;
transform = "{1, 0, 0, 1, 434, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1521;
}
);
leftKerningGroup = H;
rightKerningGroup = H;
unicode = 01F8;
},
{
color = 4;
glyphname = Eng;
lastChange = "2022-05-11 04:45:36 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"420 0 LINE",
"420 1204 LINE",
"424 1204 LINE",
"431.333 1186 OFFCURVE",
"439.667 1166.333 OFFCURVE",
"449 1145 CURVE SMOOTH",
"456.333 1127 OFFCURVE",
"465.333 1106 OFFCURVE",
"476 1082 CURVE SMOOTH",
"486.667 1058 OFFCURVE",
"498 1032 OFFCURVE",
"510 1004 CURVE SMOOTH",
"950 0 LINE",
"1098 0 LINE",
"1098 -164 LINE SMOOTH",
"1098 -283.663 OFFCURVE",
"1064.217 -297 OFFCURVE",
"967 -297 CURVE SMOOTH",
"937.667 -297 OFFCURVE",
"904 -296.333 OFFCURVE",
"876 -295 CURVE SMOOTH",
"859.333 -294.333 OFFCURVE",
"843.333 -293.667 OFFCURVE",
"828 -293 CURVE",
"828 -465 LINE",
"850 -471.667 OFFCURVE",
"874 -477.667 OFFCURVE",
"900 -483 CURVE SMOOTH",
"944 -492.333 OFFCURVE",
"1003 -500 OFFCURVE",
"1067 -500 CURVE SMOOTH",
"1156.333 -500 OFFCURVE",
"1224.5 -485.167 OFFCURVE",
"1270.5 -444.5 CURVE SMOOTH",
"1316.5 -403.833 OFFCURVE",
"1340 -338.333 OFFCURVE",
"1340 -237 CURVE SMOOTH",
"1339 77 LINE",
"1339 1427 LINE",
"1102 1427 LINE",
"1102 436 LINE SMOOTH",
"1102 413.333 OFFCURVE",
"1102 389.667 OFFCURVE",
"1102 365 CURVE SMOOTH",
"1102 340.333 OFFCURVE",
"1102.333 317.333 OFFCURVE",
"1103 296 CURVE SMOOTH",
"1103.667 271.333 OFFCURVE",
"1104.333 247 OFFCURVE",
"1105 223 CURVE",
"1100 223 LINE",
"580 1427 LINE",
"182 1427 LINE",
"182 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01212 12 33 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01242 13 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01233 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01233 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01233 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0128 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0128 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01210 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01246 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0129 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0129 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01234 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01234 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01243 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01243 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01217 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01217 19 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01234 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0122 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01217 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01223 5 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01225 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01228 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01241 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0128 41 24 41 40 41 56 41 72 41 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1521;
}
);
leftKerningGroup = Eng;
note = Eng;
rightKerningGroup = Eng;
unicode = 014A;
},
{
glyphname = Nj;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = N;
},
{
name = j;
transform = "{1, 0, 0, 1, 1521, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 2151;
}
);
leftKerningGroup = H;
rightKerningGroup = j;
unicode = 01CB;
},
{
glyphname = Nlinebelow;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = N;
},
{
name = macronbelowcomb.case;
transform = "{1, 0, 0, 1, 347, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1521;
}
);
leftKerningGroup = H;
rightKerningGroup = H;
unicode = 1E48;
},
{
glyphname = Ntilde;
lastChange = "2022-05-11 06:14:00 +0000";
layers = (
{
components = (
{
name = N;
},
{
name = tildecomb.case;
transform = "{1, 0, 0, 1, 292, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1521;
}
);
leftKerningGroup = H;
note = Ntilde;
rightKerningGroup = H;
unicode = 00D1;
},
{
glyphname = O;
lastChange = "2022-05-11 05:36:18 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{701, 0}";
},
{
name = center;
position = "{701, 714}";
},
{
name = ogonek;
position = "{1261, 10}";
},
{
name = top;
position = "{701, 1446}";
},
{
name = topleft;
position = "{20, 1427}";
},
{
name = topright;
position = "{1411, 1427}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"831.333 -31 OFFCURVE",
"936 -11.333 OFFCURVE",
"1016 28 CURVE SMOOTH",
"1059.333 49.333 OFFCURVE",
"1097.667 78.167 OFFCURVE",
"1131 114.5 CURVE SMOOTH",
"1199 188.167 OFFCURVE",
"1244.667 299 OFFCURVE",
"1268 447 CURVE SMOOTH",
"1280 522.333 OFFCURVE",
"1286 609.667 OFFCURVE",
"1286 709 CURVE SMOOTH",
"1286 901.667 OFFCURVE",
"1262.5 1054.667 OFFCURVE",
"1215.5 1168 CURVE SMOOTH",
"1192.5 1223.333 OFFCURVE",
"1164.333 1269.5 OFFCURVE",
"1131 1306.5 CURVE SMOOTH",
"1067 1377.5 OFFCURVE",
"980.667 1422.667 OFFCURVE",
"872 1442 CURVE SMOOTH",
"819.333 1451.333 OFFCURVE",
"762.667 1456 OFFCURVE",
"702 1456 CURVE SMOOTH",
"508.667 1456 OFFCURVE",
"368.333 1413.5 OFFCURVE",
"271 1307.5 CURVE SMOOTH",
"167 1193.5 OFFCURVE",
"115 1003.667 OFFCURVE",
"115 709 CURVE SMOOTH",
"115 515 OFFCURVE",
"138.667 362.167 OFFCURVE",
"186 250.5 CURVE SMOOTH",
"209.333 195.5 OFFCURVE",
"237.833 150 OFFCURVE",
"271.5 114 CURVE SMOOTH",
"337.167 43.333 OFFCURVE",
"423.667 -0.667 OFFCURVE",
"531 -18 CURVE SMOOTH",
"583.667 -26.667 OFFCURVE",
"640.667 -31 OFFCURVE",
"702 -31 CURVE"
);
},
{
closed = 1;
nodes = (
"567.333 190 OFFCURVE",
"485.333 219.167 OFFCURVE",
"436 294.5 CURVE SMOOTH",
"386.667 371.167 OFFCURVE",
"367 497 OFFCURVE",
"367 709 CURVE SMOOTH",
"367 922.333 OFFCURVE",
"386.667 1048.5 OFFCURVE",
"436 1126.5 CURVE SMOOTH",
"485.333 1203.167 OFFCURVE",
"567.333 1233 OFFCURVE",
"702 1233 CURVE SMOOTH",
"836.667 1233 OFFCURVE",
"917.667 1203.167 OFFCURVE",
"967 1126.5 CURVE SMOOTH",
"1016.333 1048.5 OFFCURVE",
"1036 922.333 OFFCURVE",
"1036 709 CURVE SMOOTH",
"1036 497 OFFCURVE",
"1016.333 371.167 OFFCURVE",
"967 294.5 CURVE SMOOTH",
"917.667 219.167 OFFCURVE",
"836.667 190 OFFCURVE",
"702 190 CURVE"
);
}
);
width = 1401;
}
);
leftKerningGroup = O;
note = O;
rightKerningGroup = O;
unicode = 004F;
},
{
glyphname = Oacute;
lastChange = "2022-05-11 05:36:19 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 366, 19}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1401;
}
);
leftKerningGroup = O;
note = Oacute;
rightKerningGroup = O;
unicode = 00D3;
},
{
glyphname = Obreve;
lastChange = "2022-05-11 05:36:19 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = brevecomb.case;
transform = "{1, 0, 0, 1, 296, 19}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1401;
}
);
leftKerningGroup = O;
note = Obreve;
rightKerningGroup = O;
unicode = 014E;
},
{
glyphname = Ocaron;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = caroncomb.case;
transform = "{1, 0, 0, 1, 267, 19}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1401;
}
);
leftKerningGroup = O;
rightKerningGroup = O;
unicode = 01D1;
},
{
glyphname = Ocircumflex;
lastChange = "2022-05-11 05:36:19 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 267, 19}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1401;
}
);
leftKerningGroup = O;
note = Ocircumflex;
rightKerningGroup = O;
unicode = 00D4;
},
{
glyphname = Ocircumflexacute;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 267, 19}";
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 366, 605}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1401;
}
);
leftKerningGroup = O;
rightKerningGroup = O;
unicode = 1ED0;
},
{
glyphname = Ocircumflexdotbelow;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = dotbelowcomb.case;
transform = "{1, 0, 0, 1, 503, 0}";
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 267, 19}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1401;
}
);
leftKerningGroup = O;
rightKerningGroup = O;
unicode = 1ED8;
},
{
glyphname = Ocircumflexgrave;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 267, 19}";
},
{
name = gravecomb.case;
transform = "{1, 0, 0, 1, 374, 605}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1401;
}
);
leftKerningGroup = O;
rightKerningGroup = O;
unicode = 1ED2;
},
{
glyphname = Ocircumflexhookabove;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 267, 19}";
},
{
name = hookabovecomb.case;
transform = "{1, 0, 0, 1, 395, 605}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1401;
}
);
leftKerningGroup = O;
rightKerningGroup = O;
unicode = 1ED4;
},
{
glyphname = Ocircumflextilde;
lastChange = "2022-05-11 06:14:00 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = circumflexcomb_tildecomb.case;
transform = "{1, 0, 0, 1, 267, 391}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1401;
}
);
leftKerningGroup = O;
rightKerningGroup = O;
unicode = 1ED6;
},
{
glyphname = Odblgrave;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = dblgravecomb.case;
transform = "{1, 0, 0, 1, 181, 19}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1401;
}
);
leftKerningGroup = O;
rightKerningGroup = O;
unicode = 020C;
},
{
glyphname = Odieresis;
lastChange = "2022-05-11 05:36:19 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = dieresiscomb.case;
transform = "{1, 0, 0, 1, 289, 19}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1401;
}
);
leftKerningGroup = O;
note = Odieresis;
rightKerningGroup = O;
unicode = 00D6;
},
{
glyphname = Odieresismacron;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = dieresiscomb.case;
transform = "{1, 0, 0, 1, 289, 19}";
},
{
name = macroncomb.case;
transform = "{1, 0, 0, 1, 287, 395}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1401;
}
);
leftKerningGroup = O;
rightKerningGroup = O;
unicode = 022A;
},
{
glyphname = Odotaccentmacron;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = dotaccentcomb.case;
transform = "{1, 0, 0, 1, 503, 19}";
},
{
name = macroncomb.case;
transform = "{1, 0, 0, 1, 287, 396}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1401;
}
);
leftKerningGroup = O;
rightKerningGroup = O;
unicode = 0230;
},
{
glyphname = Odotbelow;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = dotbelowcomb.case;
transform = "{1, 0, 0, 1, 503, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1401;
}
);
leftKerningGroup = O;
rightKerningGroup = O;
unicode = 1ECC;
},
{
glyphname = Ograve;
lastChange = "2022-05-11 05:36:19 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = gravecomb.case;
transform = "{1, 0, 0, 1, 374, 19}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1401;
}
);
leftKerningGroup = O;
note = Ograve;
rightKerningGroup = O;
unicode = 00D2;
},
{
glyphname = Ohookabove;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = hookabovecomb.case;
transform = "{1, 0, 0, 1, 395, 19}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1401;
}
);
leftKerningGroup = O;
rightKerningGroup = O;
unicode = 1ECE;
},
{
glyphname = Ohorn;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = horncomb.case;
transform = "{1, 0, 0, 1, 433, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1401;
}
);
leftKerningGroup = O;
rightKerningGroup = O;
unicode = 01A0;
},
{
glyphname = Ohornacute;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = Ohorn;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 366, 19}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1401;
}
);
leftKerningGroup = O;
rightKerningGroup = O;
unicode = 1EDA;
},
{
glyphname = Ohorndotbelow;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = Ohorn;
},
{
name = dotbelowcomb.case;
transform = "{1, 0, 0, 1, 503, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1401;
}
);
leftKerningGroup = O;
rightKerningGroup = O;
unicode = 1EE2;
},
{
glyphname = Ohorngrave;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = Ohorn;
},
{
name = gravecomb.case;
transform = "{1, 0, 0, 1, 374, 19}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1401;
}
);
leftKerningGroup = O;
rightKerningGroup = O;
unicode = 1EDC;
},
{
glyphname = Ohornhookabove;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = Ohorn;
},
{
name = hookabovecomb.case;
transform = "{1, 0, 0, 1, 395, 19}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1401;
}
);
leftKerningGroup = O;
rightKerningGroup = O;
unicode = 1EDE;
},
{
glyphname = Ohorntilde;
lastChange = "2022-05-11 06:14:00 +0000";
layers = (
{
components = (
{
name = Ohorn;
},
{
name = tildecomb.case;
transform = "{1, 0, 0, 1, 232, 19}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1401;
}
);
leftKerningGroup = O;
rightKerningGroup = O;
unicode = 1EE0;
},
{
glyphname = Ohungarumlaut;
lastChange = "2022-05-11 05:36:19 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = hungarumlautcomb.case;
transform = "{1, 0, 0, 1, 181, 19}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1401;
}
);
leftKerningGroup = O;
note = Ohungarumlaut;
rightKerningGroup = O;
unicode = 0150;
},
{
glyphname = Oinvertedbreve;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = breveinvertedcomb.case;
transform = "{1, 0, 0, 1, 296, 19}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1401;
}
);
leftKerningGroup = O;
rightKerningGroup = O;
unicode = 020E;
},
{
glyphname = Omacron;
lastChange = "2022-05-11 05:36:19 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = macroncomb.case;
transform = "{1, 0, 0, 1, 287, 19}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1401;
}
);
leftKerningGroup = O;
note = Omacron;
rightKerningGroup = O;
unicode = 014C;
},
{
glyphname = Omacronacute;
lastChange = "2022-05-11 05:38:04 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = macroncomb.case;
transform = "{1, 0, 0, 1, 287, 19}";
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 366, 359}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1401;
}
);
leftKerningGroup = O;
rightKerningGroup = O;
unicode = 1E52;
},
{
glyphname = Omacrongrave;
lastChange = "2022-05-11 05:38:04 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = macroncomb.case;
transform = "{1, 0, 0, 1, 287, 19}";
},
{
name = gravecomb.case;
transform = "{1, 0, 0, 1, 374, 359}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1401;
}
);
leftKerningGroup = O;
rightKerningGroup = O;
unicode = 1E50;
},
{
glyphname = Oogonek;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = ogonekcomb.case;
transform = "{1, 0, 0, 1, 808, 10}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1401;
}
);
leftKerningGroup = O;
rightKerningGroup = O;
unicode = 01EA;
},
{
glyphname = Oslash;
lastChange = "2022-05-11 05:39:01 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{726, 0}";
},
{
name = top;
position = "{726, 1427}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"429 -172 LINE",
"504 -6 LINE",
"570.667 -24.667 OFFCURVE",
"644.333 -31 OFFCURVE",
"727 -31 CURVE SMOOTH",
"848.333 -31 OFFCURVE",
"954.333 -14.667 OFFCURVE",
"1041 28 CURVE SMOOTH",
"1084.333 49.333 OFFCURVE",
"1122.667 78.167 OFFCURVE",
"1156 114.5 CURVE SMOOTH",
"1222.667 187.167 OFFCURVE",
"1269 296.333 OFFCURVE",
"1293 447 CURVE SMOOTH",
"1305 522.333 OFFCURVE",
"1311 609.667 OFFCURVE",
"1311 709 CURVE SMOOTH",
"1311 877 OFFCURVE",
"1294.333 1009.167 OFFCURVE",
"1261 1112.5 CURVE SMOOTH",
"1227.667 1215.833 OFFCURVE",
"1179.667 1290.667 OFFCURVE",
"1117 1344 CURVE",
"1231 1595 LINE",
"1012 1595 LINE",
"938 1433 LINE",
"874 1449 OFFCURVE",
"804.333 1456 OFFCURVE",
"727 1456 CURVE SMOOTH",
"544.333 1456 OFFCURVE",
"397.333 1418.833 OFFCURVE",
"296 1307.5 CURVE SMOOTH",
"194.667 1196.167 OFFCURVE",
"140 1009 OFFCURVE",
"140 709 CURVE SMOOTH",
"140 545 OFFCURVE",
"156 415.5 OFFCURVE",
"188 313.5 CURVE SMOOTH",
"220 211.5 OFFCURVE",
"266 137 OFFCURVE",
"326 85 CURVE",
"209 -172 LINE"
);
},
{
closed = 1;
nodes = (
"404.333 415 OFFCURVE",
"392 533 OFFCURVE",
"392 709 CURVE SMOOTH",
"392 917 OFFCURVE",
"410.333 1047.167 OFFCURVE",
"461 1126.5 CURVE SMOOTH",
"511.667 1205.833 OFFCURVE",
"596.333 1233 OFFCURVE",
"727 1233 CURVE SMOOTH",
"771.667 1233 OFFCURVE",
"810.333 1229.667 OFFCURVE",
"843 1223 CURVE",
"439 335 LINE"
);
},
{
closed = 1;
nodes = (
"1046 1018.667 OFFCURVE",
"1061 895.667 OFFCURVE",
"1061 709 CURVE SMOOTH",
"1061 502.333 OFFCURVE",
"1042.667 372.5 OFFCURVE",
"992 294.5 CURVE SMOOTH",
"941.333 216.5 OFFCURVE",
"857.667 190 OFFCURVE",
"727 190 CURVE SMOOTH",
"677.667 190 OFFCURVE",
"635 192.667 OFFCURVE",
"599 202 CURVE",
"1006 1100 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */\01215 33 3 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\01241 33 15 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01241 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\0125 11 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 3 values pushed */\01253 33 15 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01253 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHB[ ]	/* 11 values pushed */\0129 53 25 53 41 53 57 53 73 53 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 2 values pushed */\01221 11 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 3 values pushed */\01244 33 15 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 3 values pushed */\01256 33 15 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01258 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01210 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01228 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01228 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 3 values pushed */\01214 32 3 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01236 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0128 36 24 36 40 36 56 36 72 36 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01244 32 14 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01228 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01248 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 48 23 48 39 48 55 48 71 48 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01256 32 14 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1451;
}
);
leftKerningGroup = O;
note = Oslash;
rightKerningGroup = O;
unicode = 00D8;
},
{
glyphname = Oslashacute;
lastChange = "2022-05-11 05:39:02 +0000";
layers = (
{
components = (
{
name = Oslash;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 391, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1451;
}
);
leftKerningGroup = O;
rightKerningGroup = O;
unicode = 01FE;
},
{
glyphname = Otilde;
lastChange = "2022-05-11 06:14:00 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = tildecomb.case;
transform = "{1, 0, 0, 1, 232, 19}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1401;
}
);
leftKerningGroup = O;
note = Otilde;
rightKerningGroup = O;
unicode = 00D5;
},
{
glyphname = Otildeacute;
lastChange = "2022-05-11 06:14:00 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = tildecomb.case;
transform = "{1, 0, 0, 1, 232, 19}";
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 366, 428}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1401;
}
);
leftKerningGroup = O;
rightKerningGroup = O;
unicode = 1E4C;
},
{
glyphname = Otildedieresis;
lastChange = "2022-05-11 06:14:00 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = tildecomb.case;
transform = "{1, 0, 0, 1, 232, 19}";
},
{
name = dieresiscomb.case;
transform = "{1, 0, 0, 1, 289, 428}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1401;
}
);
leftKerningGroup = O;
rightKerningGroup = O;
unicode = 1E4E;
},
{
glyphname = Otildemacron;
lastChange = "2022-05-11 06:14:00 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = tildecomb.case;
transform = "{1, 0, 0, 1, 232, 19}";
},
{
name = macroncomb.case;
transform = "{1, 0, 0, 1, 287, 428}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1401;
}
);
leftKerningGroup = O;
rightKerningGroup = O;
unicode = 022C;
},
{
glyphname = OE;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"744 -16 OFFCURVE",
"827 -12 OFFCURVE",
"891 -8 CURVE SMOOTH",
"928.333 -5.333 OFFCURVE",
"965 -2.667 OFFCURVE",
"1001 0 CURVE",
"1876 0 LINE",
"1876 223 LINE",
"1241 223 LINE",
"1241 610 LINE",
"1759 610 LINE",
"1759 829 LINE",
"1241 829 LINE",
"1241 1204 LINE",
"1860 1204 LINE",
"1860 1427 LINE",
"1008 1427 LINE",
"970.667 1430.333 OFFCURVE",
"932.667 1433.333 OFFCURVE",
"894 1436 CURVE SMOOTH",
"827.333 1441.333 OFFCURVE",
"744 1446 OFFCURVE",
"672 1446 CURVE SMOOTH",
"589.333 1446 OFFCURVE",
"499.667 1432.333 OFFCURVE",
"417 1391 CURVE SMOOTH",
"375.667 1370.333 OFFCURVE",
"336.833 1342.667 OFFCURVE",
"300.5 1308 CURVE SMOOTH",
"227.833 1238.667 OFFCURVE",
"171 1133.167 OFFCURVE",
"139 984.5 CURVE SMOOTH",
"123 910.167 OFFCURVE",
"115 823.667 OFFCURVE",
"115 725 CURVE SMOOTH",
"115 519.667 OFFCURVE",
"147.833 369.333 OFFCURVE",
"200.5 260 CURVE SMOOTH",
"226.833 205.333 OFFCURVE",
"257.833 160.167 OFFCURVE",
"293.5 124.5 CURVE SMOOTH",
"364.833 53.167 OFFCURVE",
"448.5 12 OFFCURVE",
"538.5 -4 CURVE SMOOTH",
"583.5 -12 OFFCURVE",
"628 -16 OFFCURVE",
"672 -16 CURVE"
);
},
{
closed = 1;
nodes = (
"718 205 OFFCURVE",
"648.667 207.5 OFFCURVE",
"586 229.5 CURVE SMOOTH",
"554.667 240.5 OFFCURVE",
"525.667 257 OFFCURVE",
"499 279 CURVE SMOOTH",
"445.667 323 OFFCURVE",
"404.667 399 OFFCURVE",
"382 515 CURVE SMOOTH",
"370.667 573 OFFCURVE",
"365 643.667 OFFCURVE",
"365 727 CURVE SMOOTH",
"365 884.333 OFFCURVE",
"388.167 991.667 OFFCURVE",
"427.5 1065 CURVE SMOOTH",
"447.167 1101.667 OFFCURVE",
"470.333 1130.5 OFFCURVE",
"497 1151.5 CURVE SMOOTH",
"550.333 1193.5 OFFCURVE",
"613.167 1212.833 OFFCURVE",
"680.5 1217.5 CURVE SMOOTH",
"714.167 1219.833 OFFCURVE",
"748 1221 OFFCURVE",
"782 1221 CURVE SMOOTH",
"868.667 1221 OFFCURVE",
"945 1221 OFFCURVE",
"1001 1217 CURVE",
"1001 205 LINE",
"786 205 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01254 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01235 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01254 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0127 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0127 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01235 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01219 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01235 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01227 12 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01222 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01235 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01230 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0127 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01246 11 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0126 46 22 46 38 46 54 46 70 46 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01217 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01217 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01219 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01214 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01214 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01232 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01232 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01229 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01229 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\01224 3 25 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01219 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01221 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01232 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01227 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01228 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01232 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01235 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01219 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01236 5 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01239 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1968;
}
);
leftKerningGroup = O;
note = OE;
rightKerningGroup = E;
unicode = 0152;
},
{
color = 4;
glyphname = P;
lastChange = "2022-05-11 04:45:39 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{608, 0}";
},
{
name = top;
position = "{608, 1427}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"422 0 LINE",
"422 502 LINE",
"739 502 LINE SMOOTH",
"799 502 OFFCURVE",
"862.333 508.833 OFFCURVE",
"921 533.5 CURVE SMOOTH",
"950.333 545.833 OFFCURVE",
"978 562.667 OFFCURVE",
"1004 584 CURVE SMOOTH",
"1056 626.667 OFFCURVE",
"1095.333 693.833 OFFCURVE",
"1118 790.5 CURVE SMOOTH",
"1129.333 838.833 OFFCURVE",
"1135 895.667 OFFCURVE",
"1135 961 CURVE SMOOTH",
"1135 1091.667 OFFCURVE",
"1113.333 1187.833 OFFCURVE",
"1076 1256.5 CURVE SMOOTH",
"1057.333 1290.833 OFFCURVE",
"1035.667 1319 OFFCURVE",
"1011 1341 CURVE SMOOTH",
"961.667 1385 OFFCURVE",
"903.667 1410.667 OFFCURVE",
"841 1420 CURVE SMOOTH",
"809.667 1424.667 OFFCURVE",
"778.667 1427 OFFCURVE",
"748 1427 CURVE SMOOTH",
"182 1427 LINE",
"182 0 LINE"
);
},
{
closed = 1;
nodes = (
"422 1204 LINE",
"711 1204 LINE SMOOTH",
"850.265 1204 OFFCURVE",
"885 1097.442 OFFCURVE",
"885 961 CURVE SMOOTH",
"885 822.647 OFFCURVE",
"850.888 725 OFFCURVE",
"711 725 CURVE SMOOTH",
"422 725 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01232 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01224 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01232 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHB[ ]	/* 11 values pushed */\0129 24 25 24 41 24 57 24 73 24 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01224 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0128 11 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01230 12 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01216 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0128 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01233 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01217 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01217 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\01219 3 15 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01229 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1215;
}
);
leftKerningGroup = H;
note = P;
rightKerningGroup = P;
unicode = 0050;
},
{
glyphname = Pdotaccent;
lastChange = "2022-05-11 04:55:43 +0000";
layers = (
{
components = (
{
name = P;
},
{
name = dotaccentcomb.case;
transform = "{1, 0, 0, 1, 410, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1215;
}
);
leftKerningGroup = H;
note = uni1E56;
rightKerningGroup = P;
unicode = 1E56;
},
{
color = 4;
glyphname = Thorn;
lastChange = "2022-05-11 04:45:39 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{614, 0}";
},
{
name = top;
position = "{614, 1427}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"422 0 LINE",
"422 266 LINE",
"486.443 244.519 OFFCURVE",
"615.953 214 OFFCURVE",
"723 214 CURVE SMOOTH",
"852.333 214 OFFCURVE",
"966.667 237.5 OFFCURVE",
"1048 311.5 CURVE SMOOTH",
"1129.333 385.5 OFFCURVE",
"1178 509.667 OFFCURVE",
"1178 711 CURVE SMOOTH",
"1178 908.333 OFFCURVE",
"1128.167 1032.5 OFFCURVE",
"1047.5 1106.5 CURVE SMOOTH",
"966.833 1180.5 OFFCURVE",
"855 1205 OFFCURVE",
"731 1205 CURVE SMOOTH",
"614.813 1205 OFFCURVE",
"485.427 1174.029 OFFCURVE",
"422 1154 CURVE",
"422 1427 LINE",
"182 1427 LINE",
"182 0 LINE"
);
},
{
closed = 1;
nodes = (
"460.881 986.86 OFFCURVE",
"582.991 996 OFFCURVE",
"659 996 CURVE SMOOTH",
"752.333 996 OFFCURVE",
"821.667 984.333 OFFCURVE",
"867 943 CURVE SMOOTH",
"912.333 901.667 OFFCURVE",
"934 830.333 OFFCURVE",
"934 713 CURVE SMOOTH",
"934 594.333 OFFCURVE",
"906.833 522.5 OFFCURVE",
"855.5 480.5 CURVE SMOOTH",
"804.167 438.5 OFFCURVE",
"730.333 425 OFFCURVE",
"637 425 CURVE SMOOTH",
"583 425 OFFCURVE",
"537 427.167 OFFCURVE",
"499 431.5 CURVE SMOOTH",
"461 435.833 OFFCURVE",
"435.333 439.333 OFFCURVE",
"422 442 CURVE",
"422 982 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01244 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01233 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01244 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\0121 12 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0129 33 25 33 41 33 57 33 73 33 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01233 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01212 12 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01222 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01225 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01245 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01223 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01223 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\01228 5 17 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\0127 5 38 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\0122 38 7 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 3 values pushed */\01222 17 28 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01238 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01243 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01243 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1228;
}
);
leftKerningGroup = H;
note = Thorn;
rightKerningGroup = Thorn;
unicode = 00DE;
},
{
color = 4;
glyphname = Q;
lastChange = "2022-05-11 04:45:39 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{702, 0}";
},
{
name = top;
position = "{702, 1427}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"795.333 -31 OFFCURVE",
"877.667 -20.667 OFFCURVE",
"951 2 CURVE",
"1034 -115 LINE",
"1252 -115 LINE",
"1106 90 LINE",
"1163.333 143.333 OFFCURVE",
"1209.5 216.667 OFFCURVE",
"1239.5 318 CURVE SMOOTH",
"1269.5 419.333 OFFCURVE",
"1286 547.667 OFFCURVE",
"1286 709 CURVE SMOOTH",
"1286 907.667 OFFCURVE",
"1261.5 1057.333 OFFCURVE",
"1215.5 1168 CURVE SMOOTH",
"1192.5 1223.333 OFFCURVE",
"1164.333 1269.5 OFFCURVE",
"1131 1306.5 CURVE SMOOTH",
"1064.333 1380.5 OFFCURVE",
"977.333 1423.333 OFFCURVE",
"872 1442 CURVE SMOOTH",
"819.333 1451.333 OFFCURVE",
"762.667 1456 OFFCURVE",
"702 1456 CURVE SMOOTH",
"519.333 1456 OFFCURVE",
"372.333 1418.833 OFFCURVE",
"271 1307.5 CURVE SMOOTH",
"169.667 1196.167 OFFCURVE",
"115 1009 OFFCURVE",
"115 709 CURVE SMOOTH",
"115 509 OFFCURVE",
"139.333 360.5 OFFCURVE",
"186 250.5 CURVE SMOOTH",
"209.333 195.5 OFFCURVE",
"237.833 150 OFFCURVE",
"271.5 114 CURVE SMOOTH",
"338.833 42 OFFCURVE",
"425.667 -0.667 OFFCURVE",
"531 -18 CURVE SMOOTH",
"583.667 -26.667 OFFCURVE",
"640.667 -31 OFFCURVE",
"702 -31 CURVE"
);
},
{
closed = 1;
nodes = (
"571.333 190 OFFCURVE",
"486.667 216.5 OFFCURVE",
"436 294.5 CURVE SMOOTH",
"385.333 372.5 OFFCURVE",
"367 502.333 OFFCURVE",
"367 709 CURVE SMOOTH",
"367 917 OFFCURVE",
"385.333 1047.167 OFFCURVE",
"436 1126.5 CURVE SMOOTH",
"486.667 1205.833 OFFCURVE",
"571.333 1233 OFFCURVE",
"702 1233 CURVE SMOOTH",
"832.667 1233 OFFCURVE",
"916.333 1205.833 OFFCURVE",
"967 1126.5 CURVE SMOOTH",
"1017.667 1047.167 OFFCURVE",
"1036 917 OFFCURVE",
"1036 709 CURVE SMOOTH",
"1036 494.333 OFFCURVE",
"1017 363.333 OFFCURVE",
"961 286 CURVE",
"862 430 LINE",
"647 430 LINE",
"809 198 LINE",
"778.333 192.667 OFFCURVE",
"742 190 OFFCURVE",
"702 190 CURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01254 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01239 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01254 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0127 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0127 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHB[ ]	/* 11 values pushed */\0129 39 25 39 41 39 57 39 73 39 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01239 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01219 11 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 3 values pushed */\01225 39 19 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01239 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01226 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01226 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 3 values pushed */\01233 7 19 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 3 values pushed */\01234 7 19 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 3 values pushed */\01236 7 19 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\0127 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01249 11 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0126 49 22 49 38 49 54 49 70 49 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01219 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01255 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01212 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 2 values pushed */\01230 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 30 23 30 39 30 55 30 71 30 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01233 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01233 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 3 values pushed */\01236 0 12 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01244 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0128 44 24 44 40 44 56 44 72 44 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1403;
}
);
leftKerningGroup = O;
note = Q;
rightKerningGroup = O;
unicode = 0051;
},
{
color = 4;
glyphname = R;
lastChange = "2022-05-11 04:45:39 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{643, 0}";
},
{
name = top;
position = "{643, 1427}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"422 0 LINE",
"422 524 LINE",
"659 524 LINE",
"926 0 LINE",
"1200 0 LINE",
"899 578 LINE",
"899 580 LINE",
"945 592.667 OFFCURVE",
"986.333 615 OFFCURVE",
"1023 647 CURVE SMOOTH",
"1096.285 713.912 OFFCURVE",
"1147 814.614 OFFCURVE",
"1147 969 CURVE SMOOTH",
"1147 1097 OFFCURVE",
"1124.833 1190 OFFCURVE",
"1085.5 1258 CURVE SMOOTH",
"1065.833 1292 OFFCURVE",
"1042.667 1319.833 OFFCURVE",
"1016 1341.5 CURVE SMOOTH",
"962.667 1384.833 OFFCURVE",
"897.167 1409.5 OFFCURVE",
"824.5 1419.5 CURVE SMOOTH",
"788.167 1424.5 OFFCURVE",
"751 1427 OFFCURVE",
"713 1427 CURVE SMOOTH",
"182 1427 LINE",
"182 0 LINE"
);
},
{
closed = 1;
nodes = (
"422 1204 LINE",
"705 1204 LINE SMOOTH",
"832.561 1204 OFFCURVE",
"899 1137.377 OFFCURVE",
"899 983 CURVE SMOOTH",
"899 827.667 OFFCURVE",
"836.333 750 OFFCURVE",
"711 750 CURVE SMOOTH",
"422 750 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01233 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01233 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHB[ ]	/* 11 values pushed */\0129 25 25 25 41 25 57 25 73 25 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01225 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0128 12 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01225 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01215 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01231 12 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01220 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0128 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01234 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01217 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01217 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01221 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\01223 3 19 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01230 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1285;
}
);
leftKerningGroup = H;
note = R;
rightKerningGroup = R;
unicode = 0052;
},
{
glyphname = Racute;
lastChange = "2022-05-11 04:55:43 +0000";
layers = (
{
components = (
{
name = R;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 308, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1285;
}
);
leftKerningGroup = H;
note = Racute;
rightKerningGroup = R;
unicode = 0154;
},
{
glyphname = Rcaron;
lastChange = "2022-05-11 04:55:43 +0000";
layers = (
{
components = (
{
name = R;
},
{
name = caroncomb.case;
transform = "{1, 0, 0, 1, 209, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1285;
}
);
leftKerningGroup = H;
note = Rcaron;
rightKerningGroup = R;
unicode = 0158;
},
{
glyphname = Rcommaaccent;
lastChange = "2022-05-11 04:55:43 +0000";
layers = (
{
components = (
{
name = R;
},
{
name = commaaccentcomb.case;
transform = "{1, 0, 0, 1, 411, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1285;
}
);
leftKerningGroup = H;
note = Rcommaaccent;
rightKerningGroup = R;
unicode = 0156;
},
{
glyphname = Rdblgrave;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = R;
},
{
name = dblgravecomb.case;
transform = "{1, 0, 0, 1, 123, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1285;
}
);
leftKerningGroup = H;
rightKerningGroup = R;
unicode = 0210;
},
{
glyphname = Rdotbelow;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = R;
},
{
name = dotbelowcomb.case;
transform = "{1, 0, 0, 1, 445, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1285;
}
);
leftKerningGroup = H;
rightKerningGroup = R;
unicode = 1E5A;
},
{
glyphname = Rinvertedbreve;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = R;
},
{
name = breveinvertedcomb.case;
transform = "{1, 0, 0, 1, 238, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1285;
}
);
leftKerningGroup = H;
rightKerningGroup = R;
unicode = 0212;
},
{
glyphname = Rlinebelow;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = R;
},
{
name = macronbelowcomb.case;
transform = "{1, 0, 0, 1, 229, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1285;
}
);
leftKerningGroup = H;
rightKerningGroup = R;
unicode = 1E5E;
},
{
color = 4;
glyphname = S;
lastChange = "2022-05-11 05:38:50 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{555, 0}";
},
{
name = top;
position = "{555, 1427}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"141.333 24.333 OFFCURVE",
"170.333 13 OFFCURVE",
"207 3 CURVE SMOOTH",
"271 -14.333 OFFCURVE",
"369.333 -31 OFFCURVE",
"524 -31 CURVE SMOOTH",
"724 -31 OFFCURVE",
"845 0.833 OFFCURVE",
"917 69.5 CURVE SMOOTH",
"989 138.167 OFFCURVE",
"1010 246 OFFCURVE",
"1010 398 CURVE SMOOTH",
"1010 475 OFFCURVE",
"1002 549 OFFCURVE",
"985 605 CURVE SMOOTH",
"976 632 OFFCURVE",
"965 656 OFFCURVE",
"951 676 CURVE SMOOTH",
"922 716 OFFCURVE",
"883 746 OFFCURVE",
"829 768 CURVE SMOOTH",
"802 779 OFFCURVE",
"771 789 OFFCURVE",
"736 799 CURVE SMOOTH",
"465 877 LINE SMOOTH",
"363 906 OFFCURVE",
"346 945 OFFCURVE",
"346 1057 CURVE SMOOTH",
"346 1134 OFFCURVE",
"361 1178.667 OFFCURVE",
"405 1204 CURVE SMOOTH",
"449 1229.333 OFFCURVE",
"522.333 1235 OFFCURVE",
"641 1235 CURVE SMOOTH",
"717 1235 OFFCURVE",
"790.667 1229.667 OFFCURVE",
"848 1223 CURVE SMOOTH",
"881.333 1219.667 OFFCURVE",
"913 1216 OFFCURVE",
"943 1212 CURVE",
"943 1397 LINE",
"910.333 1407.667 OFFCURVE",
"874 1417.333 OFFCURVE",
"834 1426 CURVE SMOOTH",
"766 1440.667 OFFCURVE",
"670.333 1456 OFFCURVE",
"557 1456 CURVE SMOOTH",
"421 1456 OFFCURVE",
"308.5 1424.667 OFFCURVE",
"230.5 1358 CURVE SMOOTH",
"152.5 1291.333 OFFCURVE",
"108 1188.333 OFFCURVE",
"108 1047 CURVE SMOOTH",
"108 935 OFFCURVE",
"125 848 OFFCURVE",
"165 785 CURVE SMOOTH",
"204 722 OFFCURVE",
"267 683 OFFCURVE",
"359 659 CURVE SMOOTH",
"650 583 LINE SMOOTH",
"758 555 OFFCURVE",
"773 493 OFFCURVE",
"773 383 CURVE SMOOTH",
"773 320.333 OFFCURVE",
"766 272.167 OFFCURVE",
"726 239.5 CURVE SMOOTH",
"686 206.833 OFFCURVE",
"614.333 190 OFFCURVE",
"485 190 CURVE SMOOTH",
"387.667 190 OFFCURVE",
"298 194.333 OFFCURVE",
"230 201 CURVE SMOOTH",
"190.667 204.333 OFFCURVE",
"154 208.333 OFFCURVE",
"120 213 CURVE",
"120 37 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01266 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01266 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01221 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHB[ ]	/* 11 values pushed */\0129 10 25 10 41 10 57 10 73 10 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01221 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01242 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 7 values pushed */\0126 42 22 42 38 42 3 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 5 values pushed */\01254 42 70 42 2 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01216 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01216 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01255 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01267 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01226 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01226 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01260 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01260 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 2 values pushed */\0122 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 2 23 2 39 2 55 2 71 2 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01226 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01234 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0128 34 24 34 40 34 56 34 72 34 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01237 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1110;
}
);
leftKerningGroup = S;
note = S;
rightKerningGroup = S;
unicode = 0053;
},
{
glyphname = Sacute;
lastChange = "2022-05-11 04:55:43 +0000";
layers = (
{
components = (
{
name = S;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 220, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1110;
}
);
leftKerningGroup = S;
note = Sacute;
rightKerningGroup = S;
unicode = 015A;
},
{
glyphname = Sacutedotaccent;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = S;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 220, 0}";
},
{
name = dotaccentcomb.case;
transform = "{1, 0, 0, 1, 357, 614}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1110;
}
);
leftKerningGroup = S;
rightKerningGroup = S;
unicode = 1E64;
},
{
glyphname = Saltillo;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"422 438 LINE",
"422 1427 LINE",
"182 1427 LINE",
"182 438 LINE"
);
}
);
width = 604;
}
);
leftKerningGroup = Saltillo;
rightKerningGroup = Saltillo;
unicode = A78B;
},
{
glyphname = Scaron;
lastChange = "2022-05-11 04:55:43 +0000";
layers = (
{
components = (
{
name = S;
},
{
name = caroncomb.case;
transform = "{1, 0, 0, 1, 121, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1110;
}
);
leftKerningGroup = S;
note = Scaron;
rightKerningGroup = S;
unicode = 0160;
},
{
glyphname = Scarondotaccent;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = S;
},
{
name = caroncomb.case;
transform = "{1, 0, 0, 1, 121, 0}";
},
{
name = dotaccentcomb.case;
transform = "{1, 0, 0, 1, 357, 589}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1110;
}
);
leftKerningGroup = S;
rightKerningGroup = S;
unicode = 1E66;
},
{
glyphname = Scedilla;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
components = (
{
name = S;
},
{
name = cedilla;
transform = "{1, 0, 0, 1, 338, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1110;
}
);
leftKerningGroup = S;
note = Scedilla;
rightKerningGroup = S;
unicode = 015E;
},
{
glyphname = Scircumflex;
lastChange = "2022-05-11 04:55:43 +0000";
layers = (
{
components = (
{
name = S;
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 121, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1110;
}
);
leftKerningGroup = S;
note = Scircumflex;
rightKerningGroup = S;
unicode = 015C;
},
{
glyphname = Scommaaccent;
lastChange = "2022-05-11 04:55:43 +0000";
layers = (
{
components = (
{
name = S;
},
{
name = commaaccentcomb.case;
transform = "{1, 0, 0, 1, 323, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1110;
}
);
leftKerningGroup = S;
note = Scommaaccent;
rightKerningGroup = S;
unicode = 0218;
},
{
glyphname = Sdotaccent;
lastChange = "2022-05-11 04:55:43 +0000";
layers = (
{
components = (
{
name = S;
},
{
name = dotaccentcomb.case;
transform = "{1, 0, 0, 1, 357, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1110;
}
);
leftKerningGroup = S;
note = uni1E60;
rightKerningGroup = S;
unicode = 1E60;
},
{
glyphname = Sdotbelow;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = S;
},
{
name = dotbelowcomb.case;
transform = "{1, 0, 0, 1, 357, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1110;
}
);
leftKerningGroup = S;
rightKerningGroup = S;
unicode = 1E62;
},
{
glyphname = Sdotbelowdotaccent;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = S;
},
{
name = dotbelowcomb.case;
transform = "{1, 0, 0, 1, 357, 0}";
},
{
name = dotaccentcomb.case;
transform = "{1, 0, 0, 1, 357, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1110;
}
);
leftKerningGroup = S;
rightKerningGroup = S;
unicode = 1E68;
},
{
color = 4;
glyphname = Germandbls;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
background = {
components = (
{
name = H;
transform = "{1, 0, 0, 1, -1, 0}";
}
);
};
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"1278 652 OFFCURVE",
"1267 676 OFFCURVE",
"1253 696 CURVE SMOOTH",
"1224 736 OFFCURVE",
"1185 766 OFFCURVE",
"1131 788 CURVE SMOOTH",
"1104 799 OFFCURVE",
"1073 809 OFFCURVE",
"1038 819 CURVE SMOOTH",
"940 847 LINE",
"1239 1268 LINE",
"1239 1427 LINE",
"182 1427 LINE",
"182 0 LINE",
"421 0 LINE",
"421 1214 LINE",
"915 1214 LINE",
"915 1212 LINE",
"619 726 LINE",
"952 605 LINE SMOOTH",
"1060 566 OFFCURVE",
"1075 515 OFFCURVE",
"1075 383 CURVE SMOOTH",
"1075 320 OFFCURVE",
"1068 272 OFFCURVE",
"1028 240 CURVE SMOOTH",
"988 207 OFFCURVE",
"916 190 OFFCURVE",
"837 190 CURVE SMOOTH",
"790 190 OFFCURVE",
"740 194 OFFCURVE",
"672 200 CURVE SMOOTH",
"633 204 OFFCURVE",
"596 208 OFFCURVE",
"562 213 CURVE",
"562 37 LINE",
"583 24 OFFCURVE",
"612 13 OFFCURVE",
"649 3 CURVE SMOOTH",
"713 -14 OFFCURVE",
"771 -31 OFFCURVE",
"876 -31 CURVE SMOOTH",
"1026 -31 OFFCURVE",
"1147 1 OFFCURVE",
"1219 70 CURVE SMOOTH",
"1291 138 OFFCURVE",
"1312 246 OFFCURVE",
"1312 398 CURVE SMOOTH",
"1312 495 OFFCURVE",
"1304 569 OFFCURVE",
"1287 625 CURVE SMOOTH"
);
}
);
width = 1412;
}
);
leftKerningGroup = Germandbls;
leftMetricsKey = H;
rightKerningGroup = Germandbls;
rightMetricsKey = S;
unicode = 1E9E;
},
{
glyphname = Schwa;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"1308 996 OFFCURVE",
"1247 1185 OFFCURVE",
"1135 1301 CURVE SMOOTH",
"1023 1417 OFFCURVE",
"860 1458 OFFCURVE",
"683 1458 CURVE SMOOTH",
"291 1458 OFFCURVE",
"57 1170 OFFCURVE",
"127 627 CURVE",
"1156 628 LINE",
"1156 847 LINE",
"389 849 LINE",
"347 1139 OFFCURVE",
"502 1237 OFFCURVE",
"699 1237 CURVE SMOOTH",
"810 1237 OFFCURVE",
"910 1198 OFFCURVE",
"973 1111 CURVE SMOOTH",
"1036 1024 OFFCURVE",
"1061 891 OFFCURVE",
"1061 700 CURVE SMOOTH",
"1061 513 OFFCURVE",
"1038 387 OFFCURVE",
"974 307 CURVE SMOOTH",
"910 227 OFFCURVE",
"804 194 OFFCURVE",
"637 194 CURVE SMOOTH",
"541 194 OFFCURVE",
"447 200 OFFCURVE",
"376 205 CURVE SMOOTH",
"335 208 OFFCURVE",
"296 211 OFFCURVE",
"260 215 CURVE",
"260 34 LINE",
"293 23 OFFCURVE",
"331 12 OFFCURVE",
"373 3 CURVE SMOOTH",
"446 -13 OFFCURVE",
"549 -29 OFFCURVE",
"678 -29 CURVE SMOOTH",
"870 -29 OFFCURVE",
"1026 16 OFFCURVE",
"1136 130 CURVE SMOOTH",
"1246 244 OFFCURVE",
"1308 427 OFFCURVE",
"1308 700 CURVE"
);
}
);
width = 1423;
}
);
leftKerningGroup = O;
leftMetricsKey = O;
rightKerningGroup = O;
rightMetricsKey = O;
unicode = 018F;
},
{
color = 4;
glyphname = T;
lastChange = "2022-05-11 04:45:39 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{561, 0}";
},
{
name = center;
position = "{561, 714}";
},
{
name = top;
position = "{561, 1427}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"678 0 LINE",
"678 1206 LINE",
"1110 1206 LINE",
"1110 1427 LINE",
"12 1427 LINE",
"12 1206 LINE",
"440 1206 LINE",
"440 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\0125 13 0 4 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0122 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0126 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0122 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0120 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1122;
}
);
leftKerningGroup = T;
note = T;
rightKerningGroup = T;
unicode = 0054;
},
{
glyphname = Tbar;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"707 0 LINE",
"707 603 LINE",
"996 603 LINE",
"996 797 LINE",
"707 797 LINE",
"707 1206 LINE",
"1139 1206 LINE",
"1139 1427 LINE",
"41 1427 LINE",
"41 1206 LINE",
"469 1206 LINE",
"469 797 LINE",
"185 797 LINE",
"185 603 LINE",
"469 603 LINE",
"469 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */\01212 1 3 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\0120 1 12 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01213 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0129 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01217 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0126 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01214 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01214 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\0123 8 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0124 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0128 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0129 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0123 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01210 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01212 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1180;
}
);
leftKerningGroup = T;
note = Tbar;
rightKerningGroup = T;
unicode = 0166;
},
{
glyphname = Tcaron;
lastChange = "2022-05-11 04:55:43 +0000";
layers = (
{
components = (
{
name = T;
},
{
name = caroncomb.case;
transform = "{1, 0, 0, 1, 127, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1122;
}
);
leftKerningGroup = T;
note = Tcaron;
rightKerningGroup = T;
unicode = 0164;
},
{
glyphname = Tcedilla;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = T;
},
{
name = cedillacomb.case;
transform = "{1, 0, 0, 1, 255, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1122;
}
);
leftKerningGroup = T;
rightKerningGroup = T;
unicode = 0162;
},
{
color = 0;
glyphname = Tcircumflexbelow;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = T;
},
{
name = circumflexbelowcomb;
transform = "{1, 0, 0, 1, 132, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1122;
}
);
leftKerningGroup = T;
rightKerningGroup = T;
unicode = 1E70;
},
{
glyphname = Tcommaaccent;
lastChange = "2022-05-11 04:55:43 +0000";
layers = (
{
components = (
{
name = T;
},
{
name = commaaccentcomb.case;
transform = "{1, 0, 0, 1, 329, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1122;
}
);
leftKerningGroup = T;
note = Tcommaaccent;
rightKerningGroup = T;
unicode = 021A;
},
{
glyphname = Tdotaccent;
lastChange = "2022-05-11 04:55:43 +0000";
layers = (
{
components = (
{
name = T;
},
{
name = dotaccentcomb.case;
transform = "{1, 0, 0, 1, 363, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1122;
}
);
leftKerningGroup = T;
note = uni1E6A;
rightKerningGroup = T;
unicode = 1E6A;
},
{
glyphname = Tdotbelow;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = T;
},
{
name = dotbelowcomb.case;
transform = "{1, 0, 0, 1, 363, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1122;
}
);
leftKerningGroup = T;
rightKerningGroup = T;
unicode = 1E6C;
},
{
glyphname = Tlinebelow;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = T;
},
{
name = macronbelowcomb.case;
transform = "{1, 0, 0, 1, 147, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1122;
}
);
leftKerningGroup = T;
rightKerningGroup = T;
unicode = 1E6E;
},
{
color = 4;
glyphname = U;
lastChange = "2022-05-11 05:34:24 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{703, 0}";
},
{
name = ogonek;
position = "{1265, 10}";
},
{
name = top;
position = "{703, 1427}";
},
{
name = topright;
position = "{1570, 1427}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"177 289.667 OFFCURVE",
"213.833 168 OFFCURVE",
"298.5 88 CURVE SMOOTH",
"383.167 8 OFFCURVE",
"514.667 -31 OFFCURVE",
"704 -31 CURVE SMOOTH",
"893.333 -31 OFFCURVE",
"1024 8.833 OFFCURVE",
"1108 89.5 CURVE SMOOTH",
"1192 170.167 OFFCURVE",
"1228 292.333 OFFCURVE",
"1228 459 CURVE SMOOTH",
"1228 1427 LINE",
"990 1427 LINE",
"990 473 LINE SMOOTH",
"990 359.667 OFFCURVE",
"967 288.5 OFFCURVE",
"919 246.5 CURVE SMOOTH",
"871 204.5 OFFCURVE",
"800 190 OFFCURVE",
"704 190 CURVE SMOOTH",
"597.333 190 OFFCURVE",
"525.5 204.5 OFFCURVE",
"479.5 246.5 CURVE SMOOTH",
"433.5 288.5 OFFCURVE",
"415 359.667 OFFCURVE",
"415 473 CURVE SMOOTH",
"415 1427 LINE",
"177 1427 LINE",
"177 455 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01226 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01226 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01215 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01227 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01213 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01213 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01220 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01220 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 2 values pushed */\0127 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 7 23 7 39 7 55 7 71 7 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1405;
}
);
leftKerningGroup = U;
note = U;
rightKerningGroup = U;
unicode = 0055;
},
{
glyphname = Uacute;
lastChange = "2022-05-11 04:55:43 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 368, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1405;
}
);
leftKerningGroup = U;
note = Uacute;
rightKerningGroup = U;
unicode = 00DA;
},
{
glyphname = Ubreve;
lastChange = "2022-05-11 04:55:43 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = brevecomb.case;
transform = "{1, 0, 0, 1, 298, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1405;
}
);
leftKerningGroup = U;
note = Ubreve;
rightKerningGroup = U;
unicode = 016C;
},
{
glyphname = Ucaron;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = caroncomb.case;
transform = "{1, 0, 0, 1, 269, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1405;
}
);
leftKerningGroup = U;
rightKerningGroup = U;
unicode = 01D3;
},
{
glyphname = Ucircumflex;
lastChange = "2022-05-11 04:55:43 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 269, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1405;
}
);
leftKerningGroup = U;
note = Ucircumflex;
rightKerningGroup = U;
unicode = 00DB;
},
{
glyphname = Udblgrave;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = dblgravecomb.case;
transform = "{1, 0, 0, 1, 183, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1405;
}
);
leftKerningGroup = U;
rightKerningGroup = U;
unicode = 0214;
},
{
glyphname = Udieresis;
lastChange = "2022-05-11 04:55:43 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = dieresiscomb.case;
transform = "{1, 0, 0, 1, 291, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1405;
}
);
leftKerningGroup = U;
note = Udieresis;
rightKerningGroup = U;
unicode = 00DC;
},
{
glyphname = Udieresisacute;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = dieresiscomb.case;
transform = "{1, 0, 0, 1, 291, 0}";
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 368, 376}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1405;
}
);
leftKerningGroup = U;
rightKerningGroup = U;
unicode = 01D7;
},
{
glyphname = Udieresiscaron;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = dieresiscomb.case;
transform = "{1, 0, 0, 1, 291, 0}";
},
{
name = caroncomb.case;
transform = "{1, 0, 0, 1, 269, 376}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1405;
}
);
leftKerningGroup = U;
rightKerningGroup = U;
unicode = 01D9;
},
{
glyphname = Udieresisgrave;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = dieresiscomb.case;
transform = "{1, 0, 0, 1, 291, 0}";
},
{
name = gravecomb.case;
transform = "{1, 0, 0, 1, 376, 376}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1405;
}
);
leftKerningGroup = U;
rightKerningGroup = U;
unicode = 01DB;
},
{
glyphname = Udieresismacron;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = dieresiscomb.case;
transform = "{1, 0, 0, 1, 291, 0}";
},
{
name = macroncomb.case;
transform = "{1, 0, 0, 1, 289, 376}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1405;
}
);
leftKerningGroup = U;
rightKerningGroup = U;
unicode = 01D5;
},
{
glyphname = Udotbelow;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = dotbelowcomb.case;
transform = "{1, 0, 0, 1, 505, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1405;
}
);
leftKerningGroup = U;
rightKerningGroup = U;
unicode = 1EE4;
},
{
glyphname = Ugrave;
lastChange = "2022-05-11 04:55:43 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = gravecomb.case;
transform = "{1, 0, 0, 1, 376, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1405;
}
);
leftKerningGroup = U;
note = Ugrave;
rightKerningGroup = U;
unicode = 00D9;
},
{
glyphname = Uhookabove;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = hookabovecomb.case;
transform = "{1, 0, 0, 1, 397, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1405;
}
);
leftKerningGroup = U;
rightKerningGroup = U;
unicode = 1EE6;
},
{
glyphname = Uhorn;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = horncomb.case;
transform = "{1, 0, 0, 1, 592, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1405;
}
);
leftKerningGroup = U;
rightKerningGroup = U;
unicode = 01AF;
},
{
glyphname = Uhornacute;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = Uhorn;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 368, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1405;
}
);
leftKerningGroup = U;
rightKerningGroup = U;
unicode = 1EE8;
},
{
glyphname = Uhorndotbelow;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = Uhorn;
},
{
name = dotbelowcomb.case;
transform = "{1, 0, 0, 1, 505, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1405;
}
);
leftKerningGroup = U;
rightKerningGroup = U;
unicode = 1EF0;
},
{
glyphname = Uhorngrave;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = Uhorn;
},
{
name = gravecomb.case;
transform = "{1, 0, 0, 1, 376, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1405;
}
);
leftKerningGroup = U;
rightKerningGroup = U;
unicode = 1EEA;
},
{
glyphname = Uhornhookabove;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = Uhorn;
},
{
name = hookabovecomb.case;
transform = "{1, 0, 0, 1, 397, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1405;
}
);
leftKerningGroup = U;
rightKerningGroup = U;
unicode = 1EEC;
},
{
glyphname = Uhorntilde;
lastChange = "2022-05-11 06:14:00 +0000";
layers = (
{
components = (
{
name = Uhorn;
},
{
name = tildecomb.case;
transform = "{1, 0, 0, 1, 234, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1405;
}
);
leftKerningGroup = U;
rightKerningGroup = U;
unicode = 1EEE;
},
{
glyphname = Uhungarumlaut;
lastChange = "2022-05-11 04:55:43 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = hungarumlautcomb.case;
transform = "{1, 0, 0, 1, 183, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1405;
}
);
leftKerningGroup = U;
note = Uhungarumlaut;
rightKerningGroup = U;
unicode = 0170;
},
{
glyphname = Uinvertedbreve;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = breveinvertedcomb.case;
transform = "{1, 0, 0, 1, 298, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1405;
}
);
leftKerningGroup = U;
rightKerningGroup = U;
unicode = 0216;
},
{
glyphname = Umacron;
lastChange = "2022-05-11 04:55:43 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = macroncomb.case;
transform = "{1, 0, 0, 1, 289, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1405;
}
);
leftKerningGroup = U;
note = Umacron;
rightKerningGroup = U;
unicode = 016A;
},
{
glyphname = Umacrondieresis;
lastChange = "2022-05-11 05:38:04 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = macroncomb.case;
transform = "{1, 0, 0, 1, 289, 0}";
},
{
name = dieresiscomb.case;
transform = "{1, 0, 0, 1, 291, 340}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1405;
}
);
leftKerningGroup = U;
rightKerningGroup = U;
unicode = 1E7A;
},
{
glyphname = Uogonek;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"177 296.333 OFFCURVE",
"210.667 178 OFFCURVE",
"288 98 CURVE SMOOTH",
"365.333 18 OFFCURVE",
"485.667 -24.667 OFFCURVE",
"659 -30 CURVE",
"603.896 -96.125 OFFCURVE",
"554 -181.475 OFFCURVE",
"554 -279 CURVE SMOOTH",
"554 -423.272 OFFCURVE",
"662.244 -500 OFFCURVE",
"806 -500 CURVE SMOOTH",
"844.667 -500 OFFCURVE",
"877.333 -495.333 OFFCURVE",
"904 -490 CURVE SMOOTH",
"918.667 -487.333 OFFCURVE",
"932.667 -483.667 OFFCURVE",
"946 -479 CURVE",
"946 -311 LINE",
"939.333 -312.333 OFFCURVE",
"932.333 -313.333 OFFCURVE",
"925 -314 CURVE SMOOTH",
"911.667 -316 OFFCURVE",
"895.333 -317 OFFCURVE",
"876 -317 CURVE SMOOTH",
"808 -317 OFFCURVE",
"776 -281 OFFCURVE",
"776 -225 CURVE SMOOTH",
"776 -158.333 OFFCURVE",
"823 -80 OFFCURVE",
"947 0 CURVE",
"1145.667 60 OFFCURVE",
"1228 211 OFFCURVE",
"1228 459 CURVE SMOOTH",
"1228 1427 LINE",
"990 1427 LINE",
"990 473 LINE SMOOTH",
"990 359.667 OFFCURVE",
"967 288.5 OFFCURVE",
"919 246.5 CURVE SMOOTH",
"871 204.5 OFFCURVE",
"800 190 OFFCURVE",
"704 190 CURVE SMOOTH",
"597.333 190 OFFCURVE",
"525.5 204.5 OFFCURVE",
"479.5 246.5 CURVE SMOOTH",
"433.5 288.5 OFFCURVE",
"415 359.667 OFFCURVE",
"415 473 CURVE SMOOTH",
"415 1427 LINE",
"177 1427 LINE",
"177 455 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\0121 13 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01215 13 12 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01221 10 39 4 \012CALL[ ]	/* CallFunction */\012NPUSHB[ ]	/* 11 values pushed */\0126 21 22 21 38 21 54 21 70 21 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01244 39 21 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01215 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01251 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01213 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01213 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01218 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01231 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01231 19 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01234 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01234 19 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01244 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01244 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 2 values pushed */\0127 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 7 23 7 39 7 55 7 71 7 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01231 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01224 4 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 24 23 24 39 24 55 24 71 24 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1405;
}
);
leftKerningGroup = U;
note = Uogonek;
rightKerningGroup = U;
unicode = 0172;
},
{
glyphname = Uring;
lastChange = "2022-05-11 04:55:43 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = ringcomb.case;
transform = "{1, 0, 0, 1, 390, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1405;
}
);
leftKerningGroup = U;
note = Uring;
rightKerningGroup = U;
unicode = 016E;
},
{
glyphname = Utilde;
lastChange = "2022-05-11 06:14:00 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = tildecomb.case;
transform = "{1, 0, 0, 1, 234, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1405;
}
);
leftKerningGroup = U;
note = Utilde;
rightKerningGroup = U;
unicode = 0168;
},
{
glyphname = Utildeacute;
lastChange = "2022-05-11 06:14:00 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = tildecomb.case;
transform = "{1, 0, 0, 1, 234, 0}";
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 368, 409}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1405;
}
);
leftKerningGroup = U;
rightKerningGroup = U;
unicode = 1E78;
},
{
color = 4;
glyphname = V;
lastChange = "2022-05-11 04:45:39 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{672, 0}";
},
{
name = top;
position = "{672, 1427}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"1343 1427 LINE",
"1069 1427 LINE",
"680 223 LINE",
"664 223 LINE",
"274 1427 LINE",
"0 1427 LINE",
"483 0 LINE",
"860 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0126 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1343;
}
);
leftKerningGroup = V;
note = V;
rightKerningGroup = V;
unicode = 0056;
},
{
glyphname = Vturned;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"0 0 LINE",
"274 0 LINE",
"663 1204 LINE",
"679 1204 LINE",
"1069 0 LINE",
"1343 0 LINE",
"860 1427 LINE",
"483 1427 LINE"
);
}
);
width = 1343;
}
);
leftKerningGroup = Vturned;
rightKerningGroup = Vturned;
unicode = 0245;
},
{
color = 4;
glyphname = W;
lastChange = "2022-05-11 04:45:39 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{971, 0}";
},
{
name = top;
position = "{971, 1427}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"736 0 LINE",
"973 1225 LINE",
"976 1225 LINE",
"1229 0 LINE",
"1604 0 LINE",
"1907 1427 LINE",
"1664 1427 LINE",
"1430 223 LINE",
"1426 223 LINE",
"1176 1427 LINE",
"777 1427 LINE",
"541 223 LINE",
"537 223 LINE",
"289 1427 LINE",
"35 1427 LINE",
"357 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0124 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0128 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0128 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01210 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01214 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01214 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 2 values pushed */\0122 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0126 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0127 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1942;
}
);
leftKerningGroup = W;
note = W;
rightKerningGroup = W;
unicode = 0057;
},
{
glyphname = Wacute;
lastChange = "2022-05-11 04:55:43 +0000";
layers = (
{
components = (
{
name = W;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 636, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1942;
}
);
leftKerningGroup = W;
note = Wacute;
rightKerningGroup = W;
unicode = 1E82;
},
{
glyphname = Wcircumflex;
lastChange = "2022-05-11 04:55:43 +0000";
layers = (
{
components = (
{
name = W;
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 537, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1942;
}
);
leftKerningGroup = W;
note = Wcircumflex;
rightKerningGroup = W;
unicode = 0174;
},
{
glyphname = Wdieresis;
lastChange = "2022-05-11 04:55:43 +0000";
layers = (
{
components = (
{
name = W;
},
{
name = dieresiscomb.case;
transform = "{1, 0, 0, 1, 559, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1942;
}
);
leftKerningGroup = W;
note = Wdieresis;
rightKerningGroup = W;
unicode = 1E84;
},
{
glyphname = Wgrave;
lastChange = "2022-05-11 04:55:43 +0000";
layers = (
{
components = (
{
name = W;
},
{
name = gravecomb.case;
transform = "{1, 0, 0, 1, 644, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1942;
}
);
leftKerningGroup = W;
note = Wgrave;
rightKerningGroup = W;
unicode = 1E80;
},
{
color = 4;
glyphname = X;
lastChange = "2022-05-11 04:45:39 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{633, 0}";
},
{
name = top;
position = "{633, 1427}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"296 0 LINE",
"625 518 LINE",
"961 0 LINE",
"1250 0 LINE",
"773 739 LINE",
"1211 1427 LINE",
"930 1427 LINE",
"636 951 LINE",
"330 1427 LINE",
"38 1427 LINE",
"486 734 LINE",
"15 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0121 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0124 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0127 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0127 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01210 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 3 values pushed */\0123 7 1 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 3 values pushed */\0129 7 1 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1265;
}
);
leftKerningGroup = X;
note = X;
rightKerningGroup = X;
unicode = 0058;
},
{
glyphname = Xdieresis;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = X;
},
{
name = dieresiscomb.case;
transform = "{1, 0, 0, 1, 221, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1265;
}
);
leftKerningGroup = X;
rightKerningGroup = X;
unicode = 1E8C;
},
{
color = 4;
glyphname = Y;
lastChange = "2022-05-11 04:45:39 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{611, 0}";
},
{
name = top;
position = "{611, 1427}";
},
{
name = topleft;
position = "{20, 1427}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"729 0 LINE",
"729 551 LINE",
"1221 1427 LINE",
"940 1427 LINE",
"612 805 LINE",
"608 805 LINE",
"281 1427 LINE",
"0 1427 LINE",
"492 551 LINE",
"492 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\0127 13 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\0124 0 7 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0121 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0125 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0128 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0128 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 3 values pushed */\0124 8 1 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1221;
}
);
leftKerningGroup = Y;
note = Y;
rightKerningGroup = Y;
unicode = 0059;
},
{
glyphname = Yacute;
lastChange = "2022-05-11 04:55:43 +0000";
layers = (
{
components = (
{
name = Y;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 276, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1221;
}
);
leftKerningGroup = Y;
note = Yacute;
rightKerningGroup = Y;
unicode = 00DD;
},
{
glyphname = Ycircumflex;
lastChange = "2022-05-11 04:55:43 +0000";
layers = (
{
components = (
{
name = Y;
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 177, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1221;
}
);
leftKerningGroup = Y;
note = Ycircumflex;
rightKerningGroup = Y;
unicode = 0176;
},
{
glyphname = Ydieresis;
lastChange = "2022-05-11 04:55:43 +0000";
layers = (
{
components = (
{
name = Y;
},
{
name = dieresiscomb.case;
transform = "{1, 0, 0, 1, 199, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1221;
}
);
leftKerningGroup = Y;
note = Ydieresis;
rightKerningGroup = Y;
unicode = 0178;
},
{
glyphname = Ydotaccent;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = Y;
},
{
name = dotaccentcomb.case;
transform = "{1, 0, 0, 1, 413, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1221;
}
);
leftKerningGroup = Y;
rightKerningGroup = Y;
unicode = 1E8E;
},
{
glyphname = Ydotbelow;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = Y;
},
{
name = dotbelowcomb.case;
transform = "{1, 0, 0, 1, 413, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1221;
}
);
leftKerningGroup = Y;
rightKerningGroup = Y;
unicode = 1EF4;
},
{
glyphname = Ygrave;
lastChange = "2022-05-11 04:55:43 +0000";
layers = (
{
components = (
{
name = Y;
},
{
name = gravecomb.case;
transform = "{1, 0, 0, 1, 284, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1221;
}
);
leftKerningGroup = Y;
note = Ygrave;
rightKerningGroup = Y;
unicode = 1EF2;
},
{
glyphname = Yhookabove;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = Y;
},
{
name = hookabovecomb.case;
transform = "{1, 0, 0, 1, 305, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1221;
}
);
leftKerningGroup = Y;
rightKerningGroup = Y;
unicode = 1EF6;
},
{
glyphname = Ymacron;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = Y;
},
{
name = macroncomb.case;
transform = "{1, 0, 0, 1, 197, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1221;
}
);
leftKerningGroup = Y;
rightKerningGroup = Y;
unicode = 0232;
},
{
glyphname = Ytilde;
lastChange = "2022-05-11 06:14:00 +0000";
layers = (
{
components = (
{
name = Y;
},
{
name = tildecomb.case;
transform = "{1, 0, 0, 1, 142, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1221;
}
);
leftKerningGroup = Y;
rightKerningGroup = Y;
unicode = 1EF8;
},
{
color = 4;
glyphname = Z;
lastChange = "2022-05-11 04:45:39 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{638, 0}";
},
{
name = center;
position = "{638, 714}";
},
{
name = top;
position = "{638, 1427}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"1196 0 LINE",
"1196 223 LINE",
"446 223 LINE",
"446 225 LINE",
"1188 1268 LINE",
"1188 1427 LINE",
"131 1427 LINE",
"131 1204 LINE",
"834 1204 LINE",
"834 1202 LINE",
"90 156 LINE",
"90 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0124 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01210 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0124 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0122 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0128 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1276;
}
);
leftKerningGroup = Z;
note = Z;
rightKerningGroup = Z;
unicode = 005A;
},
{
glyphname = Zacute;
lastChange = "2022-05-11 04:55:43 +0000";
layers = (
{
components = (
{
name = Z;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 303, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1276;
}
);
leftKerningGroup = Z;
note = Zacute;
rightKerningGroup = Z;
unicode = 0179;
},
{
glyphname = Zcaron;
lastChange = "2022-05-11 04:55:43 +0000";
layers = (
{
components = (
{
name = Z;
},
{
name = caroncomb.case;
transform = "{1, 0, 0, 1, 204, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1276;
}
);
leftKerningGroup = Z;
note = Zcaron;
rightKerningGroup = Z;
unicode = 017D;
},
{
glyphname = Zdotaccent;
lastChange = "2022-05-11 04:55:43 +0000";
layers = (
{
components = (
{
name = Z;
},
{
name = dotaccentcomb.case;
transform = "{1, 0, 0, 1, 440, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1276;
}
);
leftKerningGroup = Z;
note = Zdotaccent;
rightKerningGroup = Z;
unicode = 017B;
},
{
glyphname = Zdotbelow;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = Z;
},
{
name = dotbelowcomb.case;
transform = "{1, 0, 0, 1, 440, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1276;
}
);
leftKerningGroup = Z;
rightKerningGroup = Z;
unicode = 1E92;
},
{
color = 4;
glyphname = a;
lastChange = "2022-05-11 04:45:39 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{597, 0}";
},
{
name = ogonek;
position = "{1074, 10}";
},
{
name = top;
position = "{597, 1055}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"127 179 OFFCURVE",
"150.5 96 OFFCURVE",
"204.5 44 CURVE SMOOTH",
"258.5 -8 OFFCURVE",
"343 -31 OFFCURVE",
"463 -31 CURVE SMOOTH",
"561.667 -31 OFFCURVE",
"644.667 -3.667 OFFCURVE",
"706 23 CURVE SMOOTH",
"741.333 39 OFFCURVE",
"773.667 57.333 OFFCURVE",
"803 78 CURVE",
"821 0 LINE",
"1022 0 LINE",
"1022 639 LINE SMOOTH",
"1022 797.992 OFFCURVE",
"1009.709 892.599 OFFCURVE",
"948 969 CURVE SMOOTH",
"914.667 1010.333 OFFCURVE",
"873.667 1037.667 OFFCURVE",
"819 1055 CURVE SMOOTH",
"764.333 1072.333 OFFCURVE",
"694 1079 OFFCURVE",
"602 1079 CURVE SMOOTH",
"464.667 1079 OFFCURVE",
"365.667 1063.667 OFFCURVE",
"299 1049 CURVE SMOOTH",
"259.667 1040.333 OFFCURVE",
"226.667 1030.667 OFFCURVE",
"200 1020 CURVE",
"200 854 LINE",
"229.333 858 OFFCURVE",
"260.333 861.667 OFFCURVE",
"293 865 CURVE SMOOTH",
"349 871.667 OFFCURVE",
"423 877 OFFCURVE",
"499 877 CURVE SMOOTH",
"619 877 OFFCURVE",
"690.333 864.667 OFFCURVE",
"733 834 CURVE SMOOTH",
"778.323 797.741 OFFCURVE",
"786 759.354 OFFCURVE",
"786 670 CURVE SMOOTH",
"786 572 LINE",
"759.333 581.333 OFFCURVE",
"729.667 589.667 OFFCURVE",
"697 597 CURVE SMOOTH",
"639.667 610.333 OFFCURVE",
"561 623 OFFCURVE",
"465 623 CURVE SMOOTH",
"370.333 623 OFFCURVE",
"286.167 601.667 OFFCURVE",
"225.5 551 CURVE SMOOTH",
"164.833 500.333 OFFCURVE",
"127 419 OFFCURVE",
"127 299 CURVE"
);
},
{
closed = 1;
nodes = (
"370 416.936 OFFCURVE",
"429.059 434 OFFCURVE",
"559 434 CURVE SMOOTH",
"619 434 OFFCURVE",
"674.333 428.667 OFFCURVE",
"717 422 CURVE SMOOTH",
"741.667 418.667 OFFCURVE",
"764.667 415 OFFCURVE",
"786 411 CURVE",
"786 228 LINE",
"762.667 216.667 OFFCURVE",
"737.667 206.667 OFFCURVE",
"711 198 CURVE SMOOTH",
"664.333 183.333 OFFCURVE",
"602 168 OFFCURVE",
"534 168 CURVE SMOOTH",
"425.033 168 OFFCURVE",
"370 185.258 OFFCURVE",
"370 299 CURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01274 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01211 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01274 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01211 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01240 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 3 values pushed */\01243 11 40 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01253 12 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0126 53 22 53 38 53 54 53 70 53 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01211 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01263 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01240 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01275 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01230 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01230 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01241 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01241 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01248 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01248 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\0125 4 69 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\01210 69 5 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01230 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01219 5 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0128 19 24 19 40 19 56 19 72 19 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01222 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01248 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01258 1 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 58 23 58 39 58 55 58 71 58 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01243 48 58 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01269 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01266 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01266 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1193;
}
);
leftKerningGroup = a;
note = a;
rightKerningGroup = n;
unicode = 0061;
},
{
color = 5;
glyphname = aacute;
lastChange = "2022-05-11 04:48:44 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 262, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1193;
}
);
leftKerningGroup = a;
leftMetricsKey = a;
note = aacute;
rightKerningGroup = n;
rightMetricsKey = a;
unicode = 00E1;
},
{
color = 5;
glyphname = abreve;
lastChange = "2022-05-11 04:48:44 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = brevecomb;
transform = "{1, 0, 0, 1, 192, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1193;
}
);
leftKerningGroup = a;
leftMetricsKey = a;
note = abreve;
rightKerningGroup = n;
rightMetricsKey = a;
unicode = 0103;
},
{
glyphname = abreveacute;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = brevecomb;
transform = "{1, 0, 0, 1, 192, 0}";
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 262, 475}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1193;
}
);
leftKerningGroup = a;
rightKerningGroup = n;
unicode = 1EAF;
},
{
glyphname = abrevedotbelow;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 399, 0}";
},
{
name = brevecomb;
transform = "{1, 0, 0, 1, 192, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1193;
}
);
leftKerningGroup = a;
rightKerningGroup = n;
unicode = 1EB7;
},
{
glyphname = abrevegrave;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = brevecomb;
transform = "{1, 0, 0, 1, 192, 0}";
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 270, 475}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1193;
}
);
leftKerningGroup = a;
rightKerningGroup = n;
unicode = 1EB1;
},
{
glyphname = abrevehookabove;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = brevecomb_hookabovecomb;
transform = "{1, 0, 0, 1, 192, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1193;
}
);
leftKerningGroup = a;
rightKerningGroup = n;
unicode = 1EB3;
},
{
glyphname = abrevetilde;
lastChange = "2022-05-11 06:14:00 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = brevecomb_tildecomb;
transform = "{1, 0, 0, 1, 192, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1193;
}
);
leftKerningGroup = a;
rightKerningGroup = n;
unicode = 1EB5;
},
{
glyphname = acaron;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 163, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1193;
}
);
leftKerningGroup = a;
rightKerningGroup = n;
unicode = 01CE;
},
{
color = 5;
glyphname = acircumflex;
lastChange = "2022-05-11 04:48:44 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 163, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1193;
}
);
leftKerningGroup = a;
leftMetricsKey = a;
note = acircumflex;
rightKerningGroup = n;
rightMetricsKey = a;
unicode = 00E2;
},
{
glyphname = acircumflexacute;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 163, 0}";
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 262, 540}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1193;
}
);
leftKerningGroup = a;
rightKerningGroup = n;
unicode = 1EA5;
},
{
glyphname = acircumflexdotbelow;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 399, 0}";
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 163, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1193;
}
);
leftKerningGroup = a;
rightKerningGroup = n;
unicode = 1EAD;
},
{
glyphname = acircumflexgrave;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 163, 0}";
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 270, 540}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1193;
}
);
leftKerningGroup = a;
rightKerningGroup = n;
unicode = 1EA7;
},
{
glyphname = acircumflexhookabove;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = circumflexcomb_hookabovecomb;
transform = "{1, 0, 0, 1, 163, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1193;
}
);
leftKerningGroup = a;
rightKerningGroup = n;
unicode = 1EA9;
},
{
glyphname = acircumflextilde;
lastChange = "2022-05-11 06:14:00 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = circumflexcomb_tildecomb;
transform = "{1, 0, 0, 1, 163, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1193;
}
);
leftKerningGroup = a;
rightKerningGroup = n;
unicode = 1EAB;
},
{
glyphname = adblgrave;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = dblgravecomb;
transform = "{1, 0, 0, 1, 77, -372}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1193;
}
);
leftKerningGroup = a;
rightKerningGroup = n;
unicode = 0201;
},
{
color = 5;
glyphname = adieresis;
lastChange = "2022-05-11 04:48:44 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 185, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1193;
}
);
leftKerningGroup = a;
leftMetricsKey = a;
note = adieresis;
rightKerningGroup = n;
rightMetricsKey = a;
unicode = 00E4;
},
{
glyphname = adotbelow;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 399, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1193;
}
);
leftKerningGroup = a;
rightKerningGroup = n;
unicode = 1EA1;
},
{
color = 5;
glyphname = agrave;
lastChange = "2022-05-11 04:48:44 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 270, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1193;
}
);
leftKerningGroup = a;
leftMetricsKey = a;
note = agrave;
rightKerningGroup = n;
rightMetricsKey = a;
unicode = 00E0;
},
{
glyphname = ahookabove;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 291, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1193;
}
);
leftKerningGroup = a;
rightKerningGroup = n;
unicode = 1EA3;
},
{
glyphname = ainvertedbreve;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = breveinvertedcomb;
transform = "{1, 0, 0, 1, 192, -372}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1193;
}
);
leftKerningGroup = a;
rightKerningGroup = n;
unicode = 0203;
},
{
color = 5;
glyphname = amacron;
lastChange = "2022-05-11 04:48:44 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 183, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1193;
}
);
leftKerningGroup = a;
leftMetricsKey = a;
note = amacron;
rightKerningGroup = n;
rightMetricsKey = a;
unicode = 0101;
},
{
glyphname = aogonek;
lastChange = "2022-05-11 04:48:44 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"127 179 OFFCURVE",
"150.5 96 OFFCURVE",
"204.5 44 CURVE SMOOTH",
"258.5 -8 OFFCURVE",
"343 -31 OFFCURVE",
"463 -31 CURVE SMOOTH",
"561.667 -31 OFFCURVE",
"644.667 -3.667 OFFCURVE",
"706 23 CURVE SMOOTH",
"741.333 39 OFFCURVE",
"773.667 57.333 OFFCURVE",
"803 78 CURVE",
"818 11 LINE",
"727.795 -53.016 OFFCURVE",
"628 -156.557 OFFCURVE",
"628 -289 CURVE SMOOTH",
"628 -425.07 OFFCURVE",
"725.247 -500 OFFCURVE",
"861 -500 CURVE SMOOTH",
"907.667 -500 OFFCURVE",
"948 -495.333 OFFCURVE",
"976 -490 CURVE SMOOTH",
"992.667 -487.333 OFFCURVE",
"1007.333 -483.667 OFFCURVE",
"1020 -479 CURVE",
"1020 -311 LINE",
"1013.333 -312.333 OFFCURVE",
"1006.333 -313.333 OFFCURVE",
"999 -314 CURVE SMOOTH",
"985.667 -316 OFFCURVE",
"969.333 -317 OFFCURVE",
"950 -317 CURVE SMOOTH",
"882 -317 OFFCURVE",
"850 -281 OFFCURVE",
"850 -225 CURVE SMOOTH",
"850 -157 OFFCURVE",
"896.667 -80 OFFCURVE",
"1022 0 CURVE",
"1022 639 LINE SMOOTH",
"1022 797.992 OFFCURVE",
"1009.709 892.599 OFFCURVE",
"948 969 CURVE SMOOTH",
"914.667 1010.333 OFFCURVE",
"873.667 1037.667 OFFCURVE",
"819 1055 CURVE SMOOTH",
"764.333 1072.333 OFFCURVE",
"694 1079 OFFCURVE",
"602 1079 CURVE SMOOTH",
"464.667 1079 OFFCURVE",
"365.667 1063.667 OFFCURVE",
"299 1049 CURVE SMOOTH",
"259.667 1040.333 OFFCURVE",
"226.667 1030.667 OFFCURVE",
"200 1020 CURVE",
"200 854 LINE",
"229.333 858 OFFCURVE",
"260.333 861.667 OFFCURVE",
"293 865 CURVE SMOOTH",
"349 871.667 OFFCURVE",
"423 877 OFFCURVE",
"499 877 CURVE SMOOTH",
"619 877 OFFCURVE",
"690.333 864.667 OFFCURVE",
"733 834 CURVE SMOOTH",
"778.323 797.741 OFFCURVE",
"786 759.354 OFFCURVE",
"786 670 CURVE SMOOTH",
"786 572 LINE",
"759.333 581.333 OFFCURVE",
"729.667 589.667 OFFCURVE",
"697 597 CURVE SMOOTH",
"639.667 610.333 OFFCURVE",
"561 623 OFFCURVE",
"465 623 CURVE SMOOTH",
"370.333 623 OFFCURVE",
"286.167 601.667 OFFCURVE",
"225.5 551 CURVE SMOOTH",
"164.833 500.333 OFFCURVE",
"127 419 OFFCURVE",
"127 299 CURVE"
);
},
{
closed = 1;
nodes = (
"370 416.936 OFFCURVE",
"429.059 434 OFFCURVE",
"559 434 CURVE SMOOTH",
"619 434 OFFCURVE",
"674.333 428.667 OFFCURVE",
"717 422 CURVE SMOOTH",
"741.667 418.667 OFFCURVE",
"764.667 415 OFFCURVE",
"786 411 CURVE",
"786 228 LINE",
"762.667 216.667 OFFCURVE",
"737.667 206.667 OFFCURVE",
"711 198 CURVE SMOOTH",
"664.333 183.333 OFFCURVE",
"602 168 OFFCURVE",
"534 168 CURVE SMOOTH",
"425.033 168 OFFCURVE",
"370 185.258 OFFCURVE",
"370 299 CURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01244 10 62 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01278 12 0 4 \012CALL[ ]	/* CallFunction */\012NPUSHB[ ]	/* 11 values pushed */\0129 62 25 62 41 62 57 62 73 62 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01210 62 44 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 3 values pushed */\01211 62 44 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01211 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01240 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01251 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01251 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 3 values pushed */\01268 62 44 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHB[ ]	/* 11 values pushed */\0126 78 22 78 38 78 54 78 70 78 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01211 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01288 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01240 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\012100 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01230 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01230 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01241 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01241 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01267 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01267 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01254 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01254 19 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01257 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01257 19 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01273 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01273 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\0125 4 94 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\01210 94 5 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01230 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01219 5 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0128 19 24 19 40 19 56 19 72 19 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01222 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01254 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01247 4 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 47 23 47 39 47 55 47 71 47 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01273 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01283 1 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 83 23 83 39 83 55 83 71 83 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01268 73 83 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01294 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01291 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01291 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1193;
}
);
leftKerningGroup = a;
leftMetricsKey = a;
note = aogonek;
rightKerningGroup = n;
rightMetricsKey = a;
unicode = 0105;
},
{
color = 5;
glyphname = aring;
lastChange = "2022-05-11 04:48:44 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = ringcomb;
transform = "{1, 0, 0, 1, 284, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1193;
}
);
leftKerningGroup = a;
leftMetricsKey = a;
note = aring;
rightKerningGroup = n;
rightMetricsKey = a;
unicode = 00E5;
},
{
glyphname = aringacute;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = ringcomb;
transform = "{1, 0, 0, 1, 284, 0}";
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 262, 596}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1193;
}
);
leftKerningGroup = a;
rightKerningGroup = n;
unicode = 01FB;
},
{
color = 5;
glyphname = atilde;
lastChange = "2022-05-11 06:14:00 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 128, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1193;
}
);
leftKerningGroup = a;
leftMetricsKey = a;
note = atilde;
rightKerningGroup = n;
rightMetricsKey = a;
unicode = 00E3;
},
{
color = 4;
glyphname = ae;
lastChange = "2022-05-11 05:50:09 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{891, 0}";
},
{
name = top;
position = "{930, 1055}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"127 199.667 OFFCURVE",
"150 116.333 OFFCURVE",
"210 59 CURVE SMOOTH",
"270 1.667 OFFCURVE",
"366 -31 OFFCURVE",
"510 -31 CURVE SMOOTH",
"671.333 -31 OFFCURVE",
"794.333 31.667 OFFCURVE",
"877 125 CURVE",
"930.333 62.333 OFFCURVE",
"983 23.833 OFFCURVE",
"1047 0.5 CURVE SMOOTH",
"1111 -22.833 OFFCURVE",
"1187.333 -31 OFFCURVE",
"1286 -31 CURVE SMOOTH",
"1388.667 -31 OFFCURVE",
"1482 -14.333 OFFCURVE",
"1550 3 CURVE SMOOTH",
"1590 13 OFFCURVE",
"1627 24.333 OFFCURVE",
"1661 37 CURVE",
"1661 207 LINE",
"1631 201.667 OFFCURVE",
"1598.333 197.333 OFFCURVE",
"1563 194 CURVE SMOOTH",
"1501.667 187.333 OFFCURVE",
"1419 182 OFFCURVE",
"1327 182 CURVE SMOOTH",
"1207 182 OFFCURVE",
"1135.667 201.333 OFFCURVE",
"1093 244 CURVE SMOOTH",
"1050.333 286.667 OFFCURVE",
"1036.667 352 OFFCURVE",
"1034 444 CURVE",
"1695 440 LINE",
"1703 512 OFFCURVE",
"1708 577.333 OFFCURVE",
"1708 640 CURVE SMOOTH",
"1708 773.333 OFFCURVE",
"1685.667 884.5 OFFCURVE",
"1623 962.5 CURVE SMOOTH",
"1560.333 1040.5 OFFCURVE",
"1457.333 1085 OFFCURVE",
"1296 1085 CURVE SMOOTH",
"1109.333 1085 OFFCURVE",
"989.667 1030 OFFCURVE",
"931 938 CURVE",
"875 1034 OFFCURVE",
"753.667 1085 OFFCURVE",
"579 1085 CURVE SMOOTH",
"483 1085 OFFCURVE",
"392 1068 OFFCURVE",
"324 1052 CURVE SMOOTH",
"284 1042.667 OFFCURVE",
"246.333 1032 OFFCURVE",
"211 1020 CURVE",
"211 854 LINE",
"237 858 OFFCURVE",
"265.667 861.667 OFFCURVE",
"297 865 CURVE SMOOTH",
"350.333 871.667 OFFCURVE",
"420.333 877 OFFCURVE",
"499 877 CURVE SMOOTH",
"619 877 OFFCURVE",
"700.333 864.667 OFFCURVE",
"743 834 CURVE SMOOTH",
"788.408 797.674 OFFCURVE",
"796 759.714 OFFCURVE",
"796 670 CURVE SMOOTH",
"796 635 LINE",
"524 635 LINE SMOOTH",
"260 635 OFFCURVE",
"127 523.667 OFFCURVE",
"127 301 CURVE"
);
},
{
closed = 1;
nodes = (
"1034 707 OFFCURVE",
"1041.667 768.833 OFFCURVE",
"1075 813.5 CURVE SMOOTH",
"1108.333 858.167 OFFCURVE",
"1167.667 885 OFFCURVE",
"1273 885 CURVE SMOOTH",
"1450.84 885 OFFCURVE",
"1489 822.234 OFFCURVE",
"1489 667 CURVE SMOOTH",
"1489 635 LINE",
"1034 635 LINE"
);
},
{
closed = 1;
nodes = (
"360 410.111 OFFCURVE",
"427.413 444 OFFCURVE",
"567 444 CURVE SMOOTH",
"794 444 LINE",
"796 393 LINE SMOOTH",
"798 346 OFFCURVE",
"803.667 305.667 OFFCURVE",
"813 267 CURVE",
"747.667 211 OFFCURVE",
"650 168 OFFCURVE",
"530 168 CURVE SMOOTH",
"408.972 168 OFFCURVE",
"360 188.867 OFFCURVE",
"360 311 CURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01280 13 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01279 13 4 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\01235 38 3 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\01227 4 79 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01279 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01239 \012MDRP[10000]	/* MoveDirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0126 80 22 80 38 80 54 80 70 80 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\0124 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01291 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01235 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01299 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01230 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01230 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01224 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01224 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01255 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01255 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01263 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01263 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\01268 8 38 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01268 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01224 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01213 1 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0128 13 24 13 40 13 56 13 72 13 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01224 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01216 5 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0128 16 24 16 40 16 56 16 72 16 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01227 24 13 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01255 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01244 1 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 44 23 44 39 44 55 44 71 44 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01255 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01247 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 47 23 47 39 47 55 47 71 47 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01213 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01274 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01244 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01285 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01238 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01292 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01292 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1781;
}
);
leftKerningGroup = a;
leftMetricsKey = a;
note = ae;
rightKerningGroup = e;
rightMetricsKey = e;
unicode = 00E6;
},
{
color = 5;
glyphname = aeacute;
lastChange = "2022-05-11 05:50:11 +0000";
layers = (
{
components = (
{
name = ae;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 595, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1781;
}
);
leftKerningGroup = a;
note = aeacute;
rightKerningGroup = e;
unicode = 01FD;
},
{
color = 4;
glyphname = b;
lastChange = "2022-05-11 04:49:26 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{614, 0}";
},
{
name = top;
position = "{745, 1427}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"371 0 LINE",
"385 84 LINE",
"416.333 62.667 OFFCURVE",
"451 43.333 OFFCURVE",
"489 26 CURVE SMOOTH",
"554.333 -3.333 OFFCURVE",
"643.667 -31 OFFCURVE",
"745 -31 CURVE SMOOTH",
"862.333 -31 OFFCURVE",
"956.333 5.667 OFFCURVE",
"1019 95 CURVE SMOOTH",
"1081.667 184.333 OFFCURVE",
"1116 324 OFFCURVE",
"1116 532 CURVE SMOOTH",
"1116 705.333 OFFCURVE",
"1096.667 843.167 OFFCURVE",
"1042 938.5 CURVE SMOOTH",
"987.333 1033.833 OFFCURVE",
"897.333 1085 OFFCURVE",
"756 1085 CURVE SMOOTH",
"656 1085 OFFCURVE",
"569 1065.667 OFFCURVE",
"505 1047 CURVE SMOOTH",
"468.333 1035.667 OFFCURVE",
"434.333 1023.333 OFFCURVE",
"403 1010 CURVE",
"403 1554 LINE",
"166 1554 LINE",
"166 0 LINE"
);
},
{
closed = 1;
nodes = (
"427.667 842.667 OFFCURVE",
"453.333 849 OFFCURVE",
"480 855 CURVE SMOOTH",
"526.667 864.333 OFFCURVE",
"585.667 874 OFFCURVE",
"647 874 CURVE SMOOTH",
"744.333 874 OFFCURVE",
"799.5 856.333 OFFCURVE",
"829.5 803 CURVE SMOOTH",
"859.5 749.667 OFFCURVE",
"866 661.333 OFFCURVE",
"866 520 CURVE SMOOTH",
"866 393.333 OFFCURVE",
"856.167 309.167 OFFCURVE",
"827.5 256.5 CURVE SMOOTH",
"798.833 203.833 OFFCURVE",
"750 182 OFFCURVE",
"670 182 CURVE SMOOTH",
"588.667 182 OFFCURVE",
"522.667 195.333 OFFCURVE",
"476 210 CURVE SMOOTH",
"448.667 218 OFFCURVE",
"424.333 227.333 OFFCURVE",
"403 238 CURVE",
"403 836 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01246 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01235 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01246 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0129 35 25 35 41 35 57 35 73 35 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01235 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01212 11 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 3 values pushed */\01222 0 1 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01225 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01247 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0127 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0127 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01223 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01223 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01217 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01217 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0127 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01240 5 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0128 40 24 40 40 40 56 40 72 40 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\0122 7 40 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01217 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01230 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 30 23 30 39 30 55 30 71 30 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01222 17 30 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1220;
}
);
leftKerningGroup = h;
leftMetricsKey = h;
note = b;
rightKerningGroup = o;
rightMetricsKey = "=|d";
unicode = 0062;
},
{
color = 5;
glyphname = bdotaccent;
lastChange = "2022-05-11 04:50:42 +0000";
layers = (
{
components = (
{
name = b;
},
{
name = dotaccentcomb.case;
transform = "{1, 0, 0, 1, 547, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1220;
}
);
leftKerningGroup = h;
note = uni1E03;
rightKerningGroup = o;
unicode = 1E03;
},
{
glyphname = bdotbelow;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = b;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 416, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1220;
}
);
leftKerningGroup = h;
rightKerningGroup = o;
unicode = 1E05;
},
{
color = 4;
glyphname = c;
lastChange = "2022-05-11 04:45:39 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{483, 0}";
},
{
name = top;
position = "{483, 1055}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"94 313.333 OFFCURVE",
"146.833 175.333 OFFCURVE",
"231.5 90 CURVE SMOOTH",
"316.167 4.667 OFFCURVE",
"433.667 -27 OFFCURVE",
"563 -27 CURVE SMOOTH",
"668.333 -27 OFFCURVE",
"747 -11 OFFCURVE",
"799 5 CURVE SMOOTH",
"829.667 14.333 OFFCURVE",
"855.667 25 OFFCURVE",
"877 37 CURVE",
"877 203 LINE",
"857.667 199 OFFCURVE",
"836 195.667 OFFCURVE",
"812 193 CURVE SMOOTH",
"770.667 187.667 OFFCURVE",
"714.333 184 OFFCURVE",
"649 184 CURVE SMOOTH",
"545 184 OFFCURVE",
"469.667 196.5 OFFCURVE",
"419 246.5 CURVE SMOOTH",
"368.333 296.5 OFFCURVE",
"344 383.333 OFFCURVE",
"344 530 CURVE SMOOTH",
"344 674 OFFCURVE",
"364.667 758.833 OFFCURVE",
"410 807.5 CURVE SMOOTH",
"455.333 856.167 OFFCURVE",
"527 870 OFFCURVE",
"627 870 CURVE SMOOTH",
"689.667 870 OFFCURVE",
"748.667 865.667 OFFCURVE",
"794 863 CURVE SMOOTH",
"820.667 860.333 OFFCURVE",
"845.333 858 OFFCURVE",
"868 856 CURVE",
"868 1020 LINE",
"844.667 1030.667 OFFCURVE",
"817 1040.333 OFFCURVE",
"785 1049 CURVE SMOOTH",
"730.333 1063.667 OFFCURVE",
"652.333 1079 OFFCURVE",
"555 1079 CURVE SMOOTH",
"428.333 1079 OFFCURVE",
"312.833 1040.833 OFFCURVE",
"229.5 953.5 CURVE SMOOTH",
"146.167 866.167 OFFCURVE",
"94 728 OFFCURVE",
"94 528 CURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01221 11 0 4 \012CALL[ ]	/* CallFunction */\012NPUSHB[ ]	/* 11 values pushed */\0126 21 22 21 38 21 54 21 70 21 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0125 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01237 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01237 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0125 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01211 5 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01213 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01213 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01216 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01237 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01226 5 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 26 23 26 39 26 55 26 71 26 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01229 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01229 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 965;
}
);
leftKerningGroup = o;
note = c;
rightKerningGroup = c;
unicode = 0063;
},
{
color = 5;
glyphname = cacute;
lastChange = "2022-05-11 04:47:26 +0000";
layers = (
{
components = (
{
name = c;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 148, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 965;
}
);
leftKerningGroup = o;
note = cacute;
rightKerningGroup = c;
unicode = 0107;
},
{
color = 5;
glyphname = ccaron;
lastChange = "2022-05-11 04:47:26 +0000";
layers = (
{
components = (
{
name = c;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 49, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 965;
}
);
leftKerningGroup = o;
note = ccaron;
rightKerningGroup = c;
unicode = 010D;
},
{
color = 5;
glyphname = ccedilla;
lastChange = "2022-05-11 04:47:26 +0000";
layers = (
{
components = (
{
name = c;
},
{
name = cedillacomb;
transform = "{1, 0, 0, 1, 177, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 965;
}
);
leftKerningGroup = o;
note = ccedilla;
rightKerningGroup = c;
unicode = 00E7;
},
{
glyphname = ccedillaacute;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = c;
},
{
name = cedillacomb;
transform = "{1, 0, 0, 1, 177, 0}";
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 148, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 965;
}
);
leftKerningGroup = o;
rightKerningGroup = c;
unicode = 1E09;
},
{
color = 5;
glyphname = ccircumflex;
lastChange = "2022-05-11 04:47:26 +0000";
layers = (
{
components = (
{
name = c;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 49, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 965;
}
);
leftKerningGroup = o;
note = ccircumflex;
rightKerningGroup = c;
unicode = 0109;
},
{
color = 5;
glyphname = cdotaccent;
lastChange = "2022-05-11 04:47:26 +0000";
layers = (
{
components = (
{
name = c;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 285, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 965;
}
);
leftKerningGroup = o;
note = cdotaccent;
rightKerningGroup = c;
unicode = 010B;
},
{
color = 4;
glyphname = d;
lastChange = "2022-05-11 05:02:50 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{609, 0}";
},
{
name = center;
position = "{609, 528}";
},
{
name = top;
position = "{466, 1235}";
},
{
name = topright;
position = "{1198, 1055}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"574 -31 OFFCURVE",
"665.667 -3.333 OFFCURVE",
"731 26 CURVE SMOOTH",
"769 43.333 OFFCURVE",
"803 62.667 OFFCURVE",
"833 84 CURVE",
"847 0 LINE",
"1052 0 LINE",
"1052 1554 LINE",
"814 1554 LINE",
"814 1010 LINE",
"786 1023.333 OFFCURVE",
"753.667 1035.667 OFFCURVE",
"717 1047 CURVE SMOOTH",
"654.333 1065.667 OFFCURVE",
"568 1085 OFFCURVE",
"464 1085 CURVE SMOOTH",
"350.667 1085 OFFCURVE",
"259.5 1046.5 OFFCURVE",
"197.5 956.5 CURVE SMOOTH",
"135.5 866.5 OFFCURVE",
"101.333 725.667 OFFCURVE",
"104 523 CURVE SMOOTH",
"105.333 319 OFFCURVE",
"137 179.833 OFFCURVE",
"197 92.5 CURVE SMOOTH",
"257 5.167 OFFCURVE",
"347.333 -31 OFFCURVE",
"466 -31 CURVE"
);
},
{
closed = 1;
nodes = (
"466 182 OFFCURVE",
"417 204 OFFCURVE",
"389 256 CURVE SMOOTH",
"361 308 OFFCURVE",
"354 389.333 OFFCURVE",
"354 508 CURVE SMOOTH",
"354 645.333 OFFCURVE",
"362.333 736.667 OFFCURVE",
"389 794 CURVE SMOOTH",
"415.667 851.333 OFFCURVE",
"460.667 874 OFFCURVE",
"534 874 CURVE SMOOTH",
"604.667 874 OFFCURVE",
"675 864.333 OFFCURVE",
"727 855 CURVE SMOOTH",
"757.667 849 OFFCURVE",
"786.667 842.667 OFFCURVE",
"814 836 CURVE",
"814 233 LINE",
"789.333 223 OFFCURVE",
"762.667 214.333 OFFCURVE",
"734 207 CURVE SMOOTH",
"684.667 193.667 OFFCURVE",
"619.333 182 OFFCURVE",
"550 182 CURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01246 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01216 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01246 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01216 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01217 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 3 values pushed */\01220 16 17 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01216 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01230 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0125 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01241 11 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0126 41 22 41 38 41 54 41 70 41 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01217 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01247 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01210 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01218 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01236 5 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0128 36 24 36 40 36 56 36 72 36 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01215 10 36 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01225 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 25 23 25 39 25 55 25 71 25 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01220 0 25 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1218;
}
);
leftKerningGroup = o;
note = d;
rightKerningGroup = l;
rightMetricsKey = "=|h";
unicode = 0064;
},
{
color = 4;
glyphname = eth;
lastChange = "2022-05-11 04:45:36 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"111 301.333 OFFCURVE",
"145.833 173.667 OFFCURVE",
"222.5 91 CURVE SMOOTH",
"299.167 8.333 OFFCURVE",
"417.333 -31 OFFCURVE",
"584 -31 CURVE SMOOTH",
"721.333 -31 OFFCURVE",
"835.167 -0.833 OFFCURVE",
"914.5 70.5 CURVE SMOOTH",
"993.833 141.833 OFFCURVE",
"1038 252.667 OFFCURVE",
"1038 414 CURVE SMOOTH",
"1038 764 LINE SMOOTH",
"1038 870.667 OFFCURVE",
"1021.833 977.333 OFFCURVE",
"986.5 1076 CURVE SMOOTH",
"951.167 1174.667 OFFCURVE",
"897 1266.667 OFFCURVE",
"821 1344 CURVE",
"974 1479 LINE",
"877 1622 LINE",
"681 1451 LINE",
"573 1515 OFFCURVE",
"440.667 1554.667 OFFCURVE",
"274 1564 CURVE",
"250 1391 LINE",
"338 1384.333 OFFCURVE",
"430.667 1356.667 OFFCURVE",
"516 1306 CURVE",
"358 1168 LINE",
"457 1023 LINE",
"655 1197 LINE",
"743 1105 OFFCURVE",
"801 986.333 OFFCURVE",
"801 845 CURVE",
"694.62 895.657 OFFCURVE",
"560.28 925 OFFCURVE",
"455 925 CURVE SMOOTH",
"352.333 925 OFFCURVE",
"266 901.833 OFFCURVE",
"206 834.5 CURVE SMOOTH",
"146 767.167 OFFCURVE",
"111 654.667 OFFCURVE",
"111 476 CURVE"
);
},
{
closed = 1;
nodes = (
"358 589 OFFCURVE",
"373 644.333 OFFCURVE",
"409 675 CURVE SMOOTH",
"445 705.667 OFFCURVE",
"501.333 710 OFFCURVE",
"584 710 CURVE SMOOTH",
"640 710 OFFCURVE",
"694.833 700.5 OFFCURVE",
"735.5 690.5 CURVE SMOOTH",
"766.999 682.754 OFFCURVE",
"805.991 671 OFFCURVE",
"801 671 CURVE",
"801 453 LINE SMOOTH",
"801 270.776 OFFCURVE",
"762.916 195 OFFCURVE",
"584 195 CURVE SMOOTH",
"494.667 195 OFFCURVE",
"438.5 219.833 OFFCURVE",
"404.5 268.5 CURVE SMOOTH",
"370.5 317.167 OFFCURVE",
"358 389 OFFCURVE",
"358 485 CURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01210 15 15 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01215 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01242 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01252 \012MDRP[10000]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01237 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01237 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1173;
}
);
leftKerningGroup = eth;
note = eth;
rightKerningGroup = eth;
unicode = 00F0;
},
{
glyphname = dcaron;
lastChange = "2022-05-11 04:49:50 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"1228 1036 LINE",
"1250 1080.667 OFFCURVE",
"1270.667 1123 OFFCURVE",
"1290 1163 CURVE SMOOTH",
"1304.665 1193.552 OFFCURVE",
"1369.463 1329.158 OFFCURVE",
"1377 1348 CURVE SMOOTH",
"1400.333 1396.667 OFFCURVE",
"1412 1434 OFFCURVE",
"1412 1460 CURVE SMOOTH",
"1412 1500 OFFCURVE",
"1385.333 1517.333 OFFCURVE",
"1332 1536 CURVE SMOOTH",
"1302.667 1545.333 OFFCURVE",
"1272.333 1550 OFFCURVE",
"1247 1554 CURVE SMOOTH",
"1232.333 1556 OFFCURVE",
"1218.333 1557.667 OFFCURVE",
"1205 1559 CURVE",
"1080 1085 LINE"
);
},
{
closed = 1;
nodes = (
"574 -31 OFFCURVE",
"665.667 -3.333 OFFCURVE",
"731 26 CURVE SMOOTH",
"769 43.333 OFFCURVE",
"803 62.667 OFFCURVE",
"833 84 CURVE",
"847 0 LINE",
"1052 0 LINE",
"1052 1554 LINE",
"814 1554 LINE",
"814 1010 LINE",
"786 1023.333 OFFCURVE",
"753.667 1035.667 OFFCURVE",
"717 1047 CURVE SMOOTH",
"654.333 1065.667 OFFCURVE",
"568 1085 OFFCURVE",
"464 1085 CURVE SMOOTH",
"350.667 1085 OFFCURVE",
"259.5 1046.5 OFFCURVE",
"197.5 956.5 CURVE SMOOTH",
"135.5 866.5 OFFCURVE",
"101.333 725.667 OFFCURVE",
"104 523 CURVE SMOOTH",
"105.333 319 OFFCURVE",
"137 179.833 OFFCURVE",
"197 92.5 CURVE SMOOTH",
"257 5.167 OFFCURVE",
"347.333 -31 OFFCURVE",
"466 -31 CURVE"
);
},
{
closed = 1;
nodes = (
"466 182 OFFCURVE",
"417 204 OFFCURVE",
"389 256 CURVE SMOOTH",
"361 308 OFFCURVE",
"354 389.333 OFFCURVE",
"354 508 CURVE SMOOTH",
"354 645.333 OFFCURVE",
"362.333 736.667 OFFCURVE",
"389 794 CURVE SMOOTH",
"415.667 851.333 OFFCURVE",
"460.667 874 OFFCURVE",
"534 874 CURVE SMOOTH",
"604.667 874 OFFCURVE",
"675 864.333 OFFCURVE",
"727 855 CURVE SMOOTH",
"757.667 849 OFFCURVE",
"786.667 842.667 OFFCURVE",
"814 836 CURVE",
"814 233 LINE",
"789.333 223 OFFCURVE",
"762.667 214.333 OFFCURVE",
"734 207 CURVE SMOOTH",
"684.667 193.667 OFFCURVE",
"619.333 182 OFFCURVE",
"550 182 CURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\0128 15 18 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01260 11 24 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01236 13 35 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\01239 35 36 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01235 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01249 \012MDRP[10000]	/* MoveDirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0126 60 22 60 38 60 54 60 70 60 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\0128 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01266 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01218 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01229 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01229 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01237 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01237 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01219 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01229 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01255 5 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0128 55 24 55 40 55 56 55 72 55 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01234 29 55 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01219 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01244 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 44 23 44 39 44 55 44 71 44 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01239 19 44 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1333;
}
);
leftKerningGroup = o;
leftMetricsKey = d;
note = dcaron;
rightKerningGroup = l;
unicode = 010F;
},
{
glyphname = dcircumflexbelow;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = d;
},
{
name = circumflexbelowcomb;
transform = "{1, 0, 0, 1, 180, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1218;
}
);
leftKerningGroup = o;
rightKerningGroup = l;
unicode = 1E13;
},
{
glyphname = dcroat;
lastChange = "2022-05-11 04:49:59 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"574 -31 OFFCURVE",
"665.667 -3.333 OFFCURVE",
"731 26 CURVE SMOOTH",
"769 43.333 OFFCURVE",
"803 62.667 OFFCURVE",
"833 84 CURVE",
"847 0 LINE",
"1052 0 LINE",
"1052 1204 LINE",
"1197 1204 LINE",
"1197 1384 LINE",
"1052 1384 LINE",
"1052 1554 LINE",
"814 1554 LINE",
"814 1384 LINE",
"529 1384 LINE",
"529 1204 LINE",
"814 1204 LINE",
"814 1010 LINE",
"786 1023.333 OFFCURVE",
"753.667 1035.667 OFFCURVE",
"717 1047 CURVE SMOOTH",
"654.333 1065.667 OFFCURVE",
"568 1085 OFFCURVE",
"464 1085 CURVE SMOOTH",
"350.667 1085 OFFCURVE",
"259.5 1046.5 OFFCURVE",
"197.5 956.5 CURVE SMOOTH",
"135.5 866.5 OFFCURVE",
"101.333 725.667 OFFCURVE",
"104 523 CURVE SMOOTH",
"105.333 319 OFFCURVE",
"137 179.833 OFFCURVE",
"197 92.5 CURVE SMOOTH",
"257 5.167 OFFCURVE",
"347.333 -31 OFFCURVE",
"466 -31 CURVE"
);
},
{
closed = 1;
nodes = (
"466 182 OFFCURVE",
"417 204 OFFCURVE",
"389 256 CURVE SMOOTH",
"361 308 OFFCURVE",
"354 389.333 OFFCURVE",
"354 508 CURVE SMOOTH",
"354 645.333 OFFCURVE",
"362.333 736.667 OFFCURVE",
"389 794 CURVE SMOOTH",
"415.667 851.333 OFFCURVE",
"460.667 874 OFFCURVE",
"534 874 CURVE SMOOTH",
"604.667 874 OFFCURVE",
"675 864.333 OFFCURVE",
"727 855 CURVE SMOOTH",
"757.667 849 OFFCURVE",
"786.667 842.667 OFFCURVE",
"814 836 CURVE",
"814 233 LINE",
"789.333 223 OFFCURVE",
"762.667 214.333 OFFCURVE",
"734 207 CURVE SMOOTH",
"684.667 193.667 OFFCURVE",
"619.333 182 OFFCURVE",
"550 182 CURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01249 11 5 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\01224 17 3 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\01215 17 24 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 3 values pushed */\01216 17 24 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01216 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01219 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01216 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01225 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01221 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 3 values pushed */\01228 17 24 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01216 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01238 \012MDRP[10000]	/* MoveDirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0126 49 22 49 38 49 54 49 70 49 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01224 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01255 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01210 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01226 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01226 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\01219 4 16 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01244 5 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0128 44 24 44 40 44 56 44 72 44 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01215 10 44 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01219 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01222 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01216 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01224 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01233 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 33 23 33 39 33 55 33 71 33 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01228 0 33 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1197;
}
);
leftKerningGroup = o;
leftMetricsKey = d;
note = dcroat;
rightKerningGroup = l;
unicode = 0111;
},
{
color = 5;
glyphname = ddotaccent;
lastChange = "2022-05-11 05:02:53 +0000";
layers = (
{
components = (
{
name = d;
},
{
name = dotaccentcomb.case;
transform = "{1, 0, 0, 1, 268, -192}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1218;
}
);
leftKerningGroup = o;
note = uni1E0B;
rightKerningGroup = l;
unicode = 1E0B;
},
{
glyphname = ddotbelow;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = d;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 411, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1218;
}
);
leftKerningGroup = o;
rightKerningGroup = l;
unicode = 1E0D;
},
{
glyphname = dlinebelow;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = d;
},
{
name = macronbelowcomb;
transform = "{1, 0, 0, 1, 195, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1218;
}
);
leftKerningGroup = o;
rightKerningGroup = l;
unicode = 1E0F;
},
{
glyphname = dz;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = d;
},
{
name = z;
transform = "{1, 0, 0, 1, 1218, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 2310;
}
);
leftKerningGroup = o;
rightKerningGroup = z;
unicode = 01F3;
},
{
glyphname = dzcaron;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = d;
},
{
name = zcaron;
transform = "{1, 0, 0, 1, 1218, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 2310;
}
);
leftKerningGroup = o;
rightKerningGroup = z;
unicode = 01C6;
},
{
color = 4;
glyphname = e;
lastChange = "2022-05-11 05:02:36 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{611, 0}";
},
{
name = ogonek;
position = "{977, 10}";
},
{
name = top;
position = "{600, 1055}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"94 328.333 OFFCURVE",
"139.833 185.5 OFFCURVE",
"224.5 95.5 CURVE SMOOTH",
"309.167 5.5 OFFCURVE",
"432.667 -31 OFFCURVE",
"590 -31 CURVE SMOOTH",
"692.667 -31 OFFCURVE",
"786 -14.333 OFFCURVE",
"854 3 CURVE SMOOTH",
"894 13 OFFCURVE",
"931 24.333 OFFCURVE",
"965 37 CURVE",
"965 203 LINE",
"935.667 197.667 OFFCURVE",
"903 193.333 OFFCURVE",
"867 190 CURVE SMOOTH",
"805.667 183.333 OFFCURVE",
"722.333 178 OFFCURVE",
"629 178 CURVE SMOOTH",
"518.333 178 OFFCURVE",
"446.167 194.833 OFFCURVE",
"401.5 235.5 CURVE SMOOTH",
"356.833 276.167 OFFCURVE",
"339.333 339.333 OFFCURVE",
"338 434 CURVE",
"999 434 LINE",
"1007 504.667 OFFCURVE",
"1012 571.333 OFFCURVE",
"1012 634 CURVE SMOOTH",
"1012 767.333 OFFCURVE",
"989.667 880.167 OFFCURVE",
"927 959.5 CURVE SMOOTH",
"864.333 1038.833 OFFCURVE",
"761.333 1085 OFFCURVE",
"600 1085 CURVE SMOOTH",
"472 1085 OFFCURVE",
"345.667 1058.333 OFFCURVE",
"251 977 CURVE SMOOTH",
"156.333 895.667 OFFCURVE",
"94 759 OFFCURVE",
"94 539 CURVE"
);
},
{
closed = 1;
nodes = (
"336 701.333 OFFCURVE",
"346.167 769.5 OFFCURVE",
"381.5 815.5 CURVE SMOOTH",
"416.833 861.5 OFFCURVE",
"478 885 OFFCURVE",
"578 885 CURVE SMOOTH",
"758.007 885 OFFCURVE",
"793 817.278 OFFCURVE",
"793 650 CURVE SMOOTH",
"793 612 LINE",
"336 612 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01247 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01236 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01247 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01236 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01210 10 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01213 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01213 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01246 12 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01214 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01214 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01248 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0125 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01230 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01230 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\01235 4 13 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01230 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01219 5 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 19 23 19 39 19 55 19 71 19 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01222 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0125 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01241 1 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0128 41 24 41 40 41 56 41 72 41 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1085;
}
);
leftKerningGroup = o;
note = e;
rightKerningGroup = e;
unicode = 0065;
},
{
color = 5;
glyphname = eacute;
lastChange = "2022-05-11 05:02:38 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 265, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1085;
}
);
leftKerningGroup = o;
note = eacute;
rightKerningGroup = e;
unicode = 00E9;
},
{
color = 5;
glyphname = ebreve;
lastChange = "2022-05-11 05:02:38 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = brevecomb;
transform = "{1, 0, 0, 1, 195, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1085;
}
);
leftKerningGroup = o;
note = ebreve;
rightKerningGroup = e;
unicode = 0115;
},
{
color = 5;
glyphname = ecaron;
lastChange = "2022-05-11 05:02:34 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 166, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1085;
}
);
leftKerningGroup = o;
note = ecaron;
rightKerningGroup = e;
unicode = 011B;
},
{
glyphname = ecedilla;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = cedillacomb;
transform = "{1, 0, 0, 1, 305, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1085;
}
);
leftKerningGroup = o;
rightKerningGroup = e;
unicode = 0229;
},
{
glyphname = ecedillabreve;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = cedillacomb;
transform = "{1, 0, 0, 1, 305, 0}";
},
{
name = brevecomb;
transform = "{1, 0, 0, 1, 195, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1085;
}
);
leftKerningGroup = o;
rightKerningGroup = e;
unicode = 1E1D;
},
{
color = 5;
glyphname = ecircumflex;
lastChange = "2022-05-11 05:02:38 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 166, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1085;
}
);
leftKerningGroup = o;
note = ecircumflex;
rightKerningGroup = e;
unicode = 00EA;
},
{
glyphname = ecircumflexacute;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 166, 0}";
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 265, 540}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1085;
}
);
leftKerningGroup = o;
rightKerningGroup = e;
unicode = 1EBF;
},
{
glyphname = ecircumflexdotbelow;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 413, 0}";
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 166, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1085;
}
);
leftKerningGroup = o;
rightKerningGroup = e;
unicode = 1EC7;
},
{
glyphname = ecircumflexgrave;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 166, 0}";
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 273, 540}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1085;
}
);
leftKerningGroup = o;
rightKerningGroup = e;
unicode = 1EC1;
},
{
glyphname = ecircumflexhookabove;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = circumflexcomb_hookabovecomb;
transform = "{1, 0, 0, 1, 166, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1085;
}
);
leftKerningGroup = o;
rightKerningGroup = e;
unicode = 1EC3;
},
{
glyphname = ecircumflextilde;
lastChange = "2022-05-11 06:14:00 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = circumflexcomb_tildecomb;
transform = "{1, 0, 0, 1, 166, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1085;
}
);
leftKerningGroup = o;
rightKerningGroup = e;
unicode = 1EC5;
},
{
glyphname = edblgrave;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = dblgravecomb;
transform = "{1, 0, 0, 1, 80, -372}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1085;
}
);
leftKerningGroup = o;
rightKerningGroup = e;
unicode = 0205;
},
{
color = 5;
glyphname = edieresis;
lastChange = "2022-05-11 05:02:38 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 188, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1085;
}
);
leftKerningGroup = o;
note = edieresis;
rightKerningGroup = e;
unicode = 00EB;
},
{
color = 5;
glyphname = edotaccent;
lastChange = "2022-05-11 05:02:38 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 402, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1085;
}
);
leftKerningGroup = o;
note = edotaccent;
rightKerningGroup = e;
unicode = 0117;
},
{
glyphname = edotbelow;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 413, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1085;
}
);
leftKerningGroup = o;
rightKerningGroup = e;
unicode = 1EB9;
},
{
color = 5;
glyphname = egrave;
lastChange = "2022-05-11 05:02:38 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 273, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1085;
}
);
leftKerningGroup = o;
note = egrave;
rightKerningGroup = e;
unicode = 00E8;
},
{
glyphname = ehookabove;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 294, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1085;
}
);
leftKerningGroup = o;
rightKerningGroup = e;
unicode = 1EBB;
},
{
glyphname = einvertedbreve;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = breveinvertedcomb;
transform = "{1, 0, 0, 1, 195, -372}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1085;
}
);
leftKerningGroup = o;
rightKerningGroup = e;
unicode = 0207;
},
{
color = 5;
glyphname = emacron;
lastChange = "2022-05-11 05:02:38 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 186, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1085;
}
);
leftKerningGroup = o;
note = emacron;
rightKerningGroup = e;
unicode = 0113;
},
{
glyphname = emacronacute;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 186, 0}";
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 265, 360}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1085;
}
);
leftKerningGroup = o;
rightKerningGroup = e;
unicode = 1E17;
},
{
glyphname = emacrongrave;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 186, 0}";
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 273, 360}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1085;
}
);
leftKerningGroup = o;
rightKerningGroup = e;
unicode = 1E15;
},
{
glyphname = eogonek;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"94 328.333 OFFCURVE",
"139.833 185.5 OFFCURVE",
"224.5 95.5 CURVE SMOOTH",
"309.167 5.5 OFFCURVE",
"432.667 -31 OFFCURVE",
"590 -31 CURVE SMOOTH",
"594 -31 LINE",
"533.503 -94.377 OFFCURVE",
"481 -178.242 OFFCURVE",
"481 -279 CURVE SMOOTH",
"481 -423.272 OFFCURVE",
"589.244 -500 OFFCURVE",
"733 -500 CURVE SMOOTH",
"771.667 -500 OFFCURVE",
"805.667 -495.333 OFFCURVE",
"831 -490 CURVE SMOOTH",
"845.667 -487.333 OFFCURVE",
"859.333 -483.667 OFFCURVE",
"872 -479 CURVE",
"872 -311 LINE",
"865.333 -312.333 OFFCURVE",
"858.333 -313.333 OFFCURVE",
"851 -314 CURVE SMOOTH",
"837.667 -316 OFFCURVE",
"821.667 -317 OFFCURVE",
"803 -317 CURVE SMOOTH",
"735 -317 OFFCURVE",
"702 -281 OFFCURVE",
"702 -225 CURVE SMOOTH",
"702 -187.667 OFFCURVE",
"717.667 -144.333 OFFCURVE",
"759 -99 CURVE SMOOTH",
"800.333 -53.667 OFFCURVE",
"865 -7 OFFCURVE",
"965 37 CURVE",
"965 203 LINE",
"935.667 197.667 OFFCURVE",
"903 193.333 OFFCURVE",
"867 190 CURVE SMOOTH",
"805.667 183.333 OFFCURVE",
"722.333 178 OFFCURVE",
"629 178 CURVE SMOOTH",
"518.333 178 OFFCURVE",
"446.167 194.833 OFFCURVE",
"401.5 235.5 CURVE SMOOTH",
"356.833 276.167 OFFCURVE",
"339.333 339.333 OFFCURVE",
"338 434 CURVE",
"999 434 LINE",
"1007 504.667 OFFCURVE",
"1012 571.333 OFFCURVE",
"1012 634 CURVE SMOOTH",
"1012 767.333 OFFCURVE",
"989.667 880.167 OFFCURVE",
"927 959.5 CURVE SMOOTH",
"864.333 1038.833 OFFCURVE",
"761.333 1085 OFFCURVE",
"600 1085 CURVE SMOOTH",
"472 1085 OFFCURVE",
"345.667 1058.333 OFFCURVE",
"251 977 CURVE SMOOTH",
"156.333 895.667 OFFCURVE",
"94 759 OFFCURVE",
"94 539 CURVE"
);
},
{
closed = 1;
nodes = (
"336 701.333 OFFCURVE",
"346.167 769.5 OFFCURVE",
"381.5 815.5 CURVE SMOOTH",
"416.833 861.5 OFFCURVE",
"478 885 OFFCURVE",
"578 885 CURVE SMOOTH",
"758.007 885 OFFCURVE",
"793 817.278 OFFCURVE",
"793 650 CURVE SMOOTH",
"793 612 LINE",
"336 612 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01230 10 48 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01270 12 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01210 10 60 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01213 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01213 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01270 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01214 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01214 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHB[ ]	/* 11 values pushed */\0129 48 25 48 41 48 57 48 73 48 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01254 48 30 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01272 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0125 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01240 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01240 19 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01243 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01243 19 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01253 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01253 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\01259 4 13 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01253 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01219 5 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 19 23 19 39 19 55 19 71 19 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01222 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01240 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01233 4 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 33 23 33 39 33 55 33 71 33 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\0125 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01265 1 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0128 65 24 65 40 65 56 65 72 65 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1085;
}
);
leftKerningGroup = o;
note = eogonek;
rightKerningGroup = e;
unicode = 0119;
},
{
glyphname = etilde;
lastChange = "2022-05-11 06:14:00 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 131, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1085;
}
);
leftKerningGroup = o;
rightKerningGroup = e;
unicode = 1EBD;
},
{
glyphname = schwa;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{485, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"991 727 OFFCURVE",
"945 869 OFFCURVE",
"860 959 CURVE SMOOTH",
"776 1049 OFFCURVE",
"652 1086 OFFCURVE",
"495 1086 CURVE SMOOTH",
"392 1086 OFFCURVE",
"299 1069 OFFCURVE",
"231 1052 CURVE SMOOTH",
"191 1042 OFFCURVE",
"154 1031 OFFCURVE",
"120 1018 CURVE",
"120 852 LINE",
"149 857 OFFCURVE",
"182 862 OFFCURVE",
"218 865 CURVE SMOOTH",
"279 872 OFFCURVE",
"363 877 OFFCURVE",
"456 877 CURVE SMOOTH",
"567 877 OFFCURVE",
"639 860 OFFCURVE",
"683 819 CURVE SMOOTH",
"728 779 OFFCURVE",
"746 716 OFFCURVE",
"747 621 CURVE",
"86 621 LINE",
"78 550 OFFCURVE",
"73 484 OFFCURVE",
"73 421 CURVE SMOOTH",
"73 288 OFFCURVE",
"95 175 OFFCURVE",
"158 95 CURVE SMOOTH",
"221 16 OFFCURVE",
"324 -30 OFFCURVE",
"485 -30 CURVE SMOOTH",
"613 -30 OFFCURVE",
"739 -3 OFFCURVE",
"834 78 CURVE SMOOTH",
"929 159 OFFCURVE",
"991 296 OFFCURVE",
"991 516 CURVE"
);
},
{
closed = 1;
nodes = (
"749 354 OFFCURVE",
"739 285 OFFCURVE",
"703 239 CURVE SMOOTH",
"668 193 OFFCURVE",
"607 170 OFFCURVE",
"507 170 CURVE SMOOTH",
"327 170 OFFCURVE",
"292 238 OFFCURVE",
"292 405 CURVE SMOOTH",
"292 443 LINE",
"749 443 LINE"
);
}
);
width = 1085;
}
);
leftKerningGroup = schwa;
leftMetricsKey = "=|e";
rightKerningGroup = schwa;
rightMetricsKey = o;
unicode = 0259;
},
{
color = 4;
glyphname = f;
lastChange = "2022-05-11 04:48:15 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{388, 0}";
},
{
name = top;
position = "{193, 1509}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"475 0 LINE",
"475 858 LINE",
"745 858 LINE",
"745 1055 LINE",
"475 1055 LINE",
"475 1241 LINE SMOOTH",
"475 1333.307 OFFCURVE",
"510.795 1362 OFFCURVE",
"621 1362 CURVE SMOOTH",
"669 1362 OFFCURVE",
"716.333 1360.667 OFFCURVE",
"751 1358 CURVE SMOOTH",
"771.667 1356.667 OFFCURVE",
"791 1355.333 OFFCURVE",
"809 1354 CURVE",
"809 1530 LINE",
"787 1536.667 OFFCURVE",
"762.333 1543 OFFCURVE",
"735 1549 CURVE SMOOTH",
"688.333 1559.667 OFFCURVE",
"619.667 1569 OFFCURVE",
"537 1569 CURVE SMOOTH",
"426.333 1569 OFFCURVE",
"350.667 1538.333 OFFCURVE",
"304 1481 CURVE SMOOTH",
"257.333 1423.667 OFFCURVE",
"238 1339 OFFCURVE",
"238 1231 CURVE SMOOTH",
"238 1055 LINE",
"90 1055 LINE",
"90 858 LINE",
"238 858 LINE",
"238 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01229 13 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01229 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01225 \012MDRP[10000]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0122 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01226 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01226 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01230 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01230 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\0129 5 20 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0122 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0120 8 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01220 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01215 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01215 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01220 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01217 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01217 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01228 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01229 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 775;
}
);
leftKerningGroup = f;
note = f;
rightKerningGroup = f;
unicode = 0066;
},
{
color = 5;
glyphname = fdotaccent;
lastChange = "2022-05-11 04:48:16 +0000";
layers = (
{
components = (
{
name = f;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, -5, 454}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 775;
}
);
leftKerningGroup = f;
note = uni1E1F;
rightKerningGroup = f;
unicode = 1E1F;
},
{
glyphname = g;
lastChange = "2022-05-11 04:47:59 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{614, -500}";
},
{
name = top;
position = "{614, 1055}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"285 -450 OFFCURVE",
"323.667 -460.333 OFFCURVE",
"365 -469 CURVE SMOOTH",
"435.667 -485 OFFCURVE",
"526.667 -500 OFFCURVE",
"620 -500 CURVE SMOOTH",
"766.667 -500 OFFCURVE",
"877.5 -478.5 OFFCURVE",
"951.5 -424.5 CURVE SMOOTH",
"1025.5 -370.5 OFFCURVE",
"1062 -284.667 OFFCURVE",
"1062 -158 CURVE SMOOTH",
"1062 1055 LINE",
"882 1055 LINE",
"855 977 LINE",
"825 995.667 OFFCURVE",
"791.667 1012.667 OFFCURVE",
"755 1028 CURVE SMOOTH",
"691 1053.333 OFFCURVE",
"602.333 1079 OFFCURVE",
"497 1079 CURVE SMOOTH",
"373 1079 OFFCURVE",
"277.167 1027.5 OFFCURVE",
"212.5 933.5 CURVE SMOOTH",
"147.833 839.5 OFFCURVE",
"114 702.667 OFFCURVE",
"114 532 CURVE SMOOTH",
"114 324 OFFCURVE",
"143.833 184 OFFCURVE",
"208.5 96 CURVE SMOOTH",
"273.167 8 OFFCURVE",
"373 -27 OFFCURVE",
"513 -27 CURVE SMOOTH",
"594.333 -27 OFFCURVE",
"670.333 -10.333 OFFCURVE",
"729 7 CURVE SMOOTH",
"762.333 17 OFFCURVE",
"794 28.333 OFFCURVE",
"824 41 CURVE",
"824 -143 LINE SMOOTH",
"824 -200.333 OFFCURVE",
"811.833 -237.5 OFFCURVE",
"772.5 -259.5 CURVE SMOOTH",
"733.167 -281.5 OFFCURVE",
"666 -289 OFFCURVE",
"554 -289 CURVE SMOOTH",
"462 -289 OFFCURVE",
"385.333 -283.667 OFFCURVE",
"332 -277 CURVE SMOOTH",
"300.667 -273.667 OFFCURVE",
"273 -269.333 OFFCURVE",
"249 -264 CURVE",
"249 -438 LINE"
);
},
{
closed = 1;
nodes = (
"489 186 OFFCURVE",
"429.667 209.5 OFFCURVE",
"399 263.5 CURVE SMOOTH",
"368.333 317.5 OFFCURVE",
"364 402 OFFCURVE",
"364 522 CURVE SMOOTH",
"364 652.667 OFFCURVE",
"375.667 738.667 OFFCURVE",
"405 792 CURVE SMOOTH",
"434.333 845.333 OFFCURVE",
"481.333 866 OFFCURVE",
"552 866 CURVE SMOOTH",
"621.333 866 OFFCURVE",
"689.333 853.333 OFFCURVE",
"740 840 CURVE SMOOTH",
"770 832.667 OFFCURVE",
"798 824.333 OFFCURVE",
"824 815 CURVE",
"824 211 LINE",
"801.333 205.667 OFFCURVE",
"777.333 201.333 OFFCURVE",
"752 198 CURVE SMOOTH",
"709.333 191.333 OFFCURVE",
"653 186 OFFCURVE",
"597 186 CURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01266 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01266 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01221 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01234 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01221 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01261 11 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0126 61 22 61 38 61 54 61 70 61 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01242 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01242 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01250 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01234 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01267 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01232 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01232 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01226 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01226 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01239 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01239 19 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01216 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01216 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01239 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0122 5 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 2 23 2 39 2 55 2 71 2 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01216 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01245 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 45 23 45 39 45 55 45 71 45 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01211 16 45 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01248 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01248 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01226 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01256 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0128 56 24 56 40 56 56 56 72 56 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1228;
}
);
leftKerningGroup = g;
note = g;
rightKerningGroup = g;
unicode = 0067;
},
{
glyphname = gacute;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = g;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 279, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1228;
}
);
leftKerningGroup = g;
rightKerningGroup = g;
unicode = 01F5;
},
{
color = 5;
glyphname = gbreve;
lastChange = "2022-05-11 04:48:01 +0000";
layers = (
{
components = (
{
name = g;
},
{
name = brevecomb;
transform = "{1, 0, 0, 1, 209, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1228;
}
);
leftKerningGroup = g;
note = gbreve;
rightKerningGroup = g;
unicode = 011F;
},
{
glyphname = gcaron;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = g;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 180, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1228;
}
);
leftKerningGroup = g;
rightKerningGroup = g;
unicode = 01E7;
},
{
color = 5;
glyphname = gcircumflex;
lastChange = "2022-05-11 04:48:01 +0000";
layers = (
{
components = (
{
name = g;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 180, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1228;
}
);
leftKerningGroup = g;
note = gcircumflex;
rightKerningGroup = g;
unicode = 011D;
},
{
color = 5;
glyphname = gcommaaccent;
lastChange = "2022-05-11 04:48:01 +0000";
layers = (
{
components = (
{
name = g;
},
{
name = commaaccentcomb;
transform = "{-1.14996, 0, 0, -1.14996, 881, 1055}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1228;
}
);
leftKerningGroup = g;
note = gcommaaccent;
rightKerningGroup = g;
unicode = 0123;
},
{
color = 5;
glyphname = gdotaccent;
lastChange = "2022-05-11 04:48:01 +0000";
layers = (
{
components = (
{
name = g;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 416, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1228;
}
);
leftKerningGroup = g;
note = gdotaccent;
rightKerningGroup = g;
unicode = 0121;
},
{
glyphname = gmacron;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = g;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 200, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1228;
}
);
leftKerningGroup = g;
rightKerningGroup = g;
unicode = 1E21;
},
{
color = 4;
glyphname = h;
lastChange = "2022-05-11 05:02:59 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{627, 0}";
},
{
name = center;
position = "{627, 1030}";
},
{
name = top;
position = "{286, 1427}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"403 0 LINE",
"403 829 LINE",
"430.333 835.667 OFFCURVE",
"459 841.667 OFFCURVE",
"489 847 CURVE SMOOTH",
"539.667 856.333 OFFCURVE",
"604 866 OFFCURVE",
"668 866 CURVE SMOOTH",
"819.586 866 OFFCURVE",
"852 823.256 OFFCURVE",
"852 700 CURVE SMOOTH",
"852 0 LINE",
"1090 0 LINE",
"1090 729 LINE SMOOTH",
"1090 869 OFFCURVE",
"1059.5 955.833 OFFCURVE",
"1005.5 1008.5 CURVE SMOOTH",
"951.5 1061.167 OFFCURVE",
"872 1079 OFFCURVE",
"776 1079 CURVE SMOOTH",
"680 1079 OFFCURVE",
"586.333 1059.667 OFFCURVE",
"517 1041 CURVE SMOOTH",
"476.333 1029.667 OFFCURVE",
"438.333 1017.333 OFFCURVE",
"403 1004 CURVE",
"403 1554 LINE",
"166 1554 LINE",
"166 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01228 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01214 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01228 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01214 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01213 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01225 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01213 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01229 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0127 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0127 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01213 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01213 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01226 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01226 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0127 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01220 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0128 20 24 20 40 20 56 20 72 20 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\0122 7 20 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1254;
}
);
leftKerningGroup = h;
note = h;
rightKerningGroup = n;
rightMetricsKey = n;
unicode = 0068;
},
{
glyphname = hbar;
lastChange = "2022-05-11 04:50:30 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"431 0 LINE",
"431 829 LINE",
"458.333 835.667 OFFCURVE",
"487 841.667 OFFCURVE",
"517 847 CURVE SMOOTH",
"567.667 856.333 OFFCURVE",
"632 866 OFFCURVE",
"696 866 CURVE SMOOTH",
"847.586 866 OFFCURVE",
"880 823.256 OFFCURVE",
"880 700 CURVE SMOOTH",
"880 0 LINE",
"1118 0 LINE",
"1118 729 LINE SMOOTH",
"1118 869 OFFCURVE",
"1087.5 955.833 OFFCURVE",
"1033.5 1008.5 CURVE SMOOTH",
"979.5 1061.167 OFFCURVE",
"900 1079 OFFCURVE",
"804 1079 CURVE SMOOTH",
"708 1079 OFFCURVE",
"614.333 1059.667 OFFCURVE",
"545 1041 CURVE SMOOTH",
"504.333 1029.667 OFFCURVE",
"466.333 1017.333 OFFCURVE",
"431 1004 CURVE",
"431 1219 LINE",
"712 1219 LINE",
"712 1376 LINE",
"431 1376 LINE",
"431 1554 LINE",
"194 1554 LINE",
"194 1376 LINE",
"60 1376 LINE",
"60 1219 LINE",
"194 1219 LINE",
"194 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01221 13 22 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\0128 1 3 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\0120 1 8 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0129 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 3 values pushed */\01210 1 8 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\0129 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01233 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01221 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01237 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01215 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01215 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01221 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01234 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01234 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\0123 7 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0123 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0126 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0128 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01215 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01228 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0128 28 24 28 40 28 56 28 72 28 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01210 15 28 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1282;
}
);
leftKerningGroup = h;
note = hbar;
rightKerningGroup = n;
rightMetricsKey = n;
unicode = 0127;
},
{
glyphname = hbrevebelow;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = h;
},
{
name = brevebelowcomb;
transform = "{1, 0, 0, 1, 222, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1254;
}
);
leftKerningGroup = h;
rightKerningGroup = n;
unicode = 1E2B;
},
{
glyphname = hcaron;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = h;
},
{
name = caroncomb.case;
transform = "{1, 0, 0, 1, -148, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1254;
}
);
leftKerningGroup = h;
rightKerningGroup = n;
unicode = 021F;
},
{
color = 5;
glyphname = hcircumflex;
lastChange = "2022-05-11 05:03:02 +0000";
layers = (
{
components = (
{
name = h;
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, -148, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1254;
}
);
leftKerningGroup = h;
note = hcircumflex;
rightKerningGroup = n;
rightMetricsKey = n;
unicode = 0125;
},
{
glyphname = hdotbelow;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = h;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 429, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1254;
}
);
leftKerningGroup = h;
rightKerningGroup = n;
unicode = 1E25;
},
{
color = 4;
glyphname = i;
lastChange = "2022-05-11 04:45:39 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{302, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"412.56 1234 OFFCURVE",
"441 1261.574 OFFCURVE",
"441 1369 CURVE SMOOTH",
"441 1478.346 OFFCURVE",
"412.346 1507 OFFCURVE",
"303 1507 CURVE SMOOTH",
"194.492 1507 OFFCURVE",
"163 1477.731 OFFCURVE",
"163 1369 CURVE SMOOTH",
"163 1262.176 OFFCURVE",
"194.283 1234 OFFCURVE",
"303 1234 CURVE"
);
},
{
closed = 1;
nodes = (
"422 0 LINE",
"422 1055 LINE",
"184 1055 LINE",
"184 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01215 15 5 4 \012CALL[ ]	/* CallFunction */\012NPUSHB[ ]	/* 11 values pushed */\0126 15 22 15 38 15 54 15 70 15 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01220 5 15 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01220 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01221 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01220 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01220 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01222 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\01210 9 0 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 604;
}
);
leftKerningGroup = i;
note = i;
rightKerningGroup = i;
unicode = 0069;
},
{
color = 4;
glyphname = idotless;
lastChange = "2022-05-11 04:45:39 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{282, 0}";
},
{
name = ogonek;
position = "{508, 10}";
},
{
name = top;
position = "{282, 1055}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"401 0 LINE",
"401 1055 LINE",
"163 1055 LINE",
"163 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\0121 13 0 4 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0122 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 564;
}
);
leftKerningGroup = idotless;
note = dotlessi;
rightKerningGroup = idotless;
unicode = 0131;
},
{
color = 5;
glyphname = iacute;
lastChange = "2022-05-11 04:47:26 +0000";
layers = (
{
components = (
{
name = idotless;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, -53, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */\01213 4 3 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\0120 4 13 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01213 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01225 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0122 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\0125 9 23 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 564;
}
);
leftKerningGroup = i;
note = iacute;
rightKerningGroup = i;
unicode = 00ED;
},
{
color = 5;
glyphname = ibreve;
lastChange = "2022-05-11 04:47:26 +0000";
layers = (
{
components = (
{
name = idotless;
},
{
name = brevecomb;
transform = "{1, 0, 0, 1, -123, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01229 13 28 4 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01228 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01228 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01230 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01230 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\01214 4 0 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 564;
}
);
leftKerningGroup = i;
note = ibreve;
rightKerningGroup = i;
unicode = 012D;
},
{
glyphname = icaron;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = idotless;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, -152, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 564;
}
);
leftKerningGroup = idotless;
rightKerningGroup = idotless;
unicode = 01D0;
},
{
color = 5;
glyphname = icircumflex;
lastChange = "2022-05-11 04:47:26 +0000";
layers = (
{
components = (
{
name = idotless;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, -152, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01217 13 16 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\01215 16 17 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01216 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01216 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01218 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 564;
}
);
leftKerningGroup = i;
note = icircumflex;
rightKerningGroup = i;
unicode = 00EE;
},
{
glyphname = idblgrave;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = idotless;
},
{
name = dblgravecomb;
transform = "{1, 0, 0, 1, -238, -372}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 564;
}
);
leftKerningGroup = idotless;
rightKerningGroup = idotless;
unicode = 0209;
},
{
color = 5;
glyphname = idieresis;
lastChange = "2022-05-11 04:47:26 +0000";
layers = (
{
components = (
{
name = idotless;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, -130, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\0121 13 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\01214 0 1 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01214 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\0124 15 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 3 values pushed */\01224 0 1 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01224 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHB[ ]	/* 11 values pushed */\0129 24 25 24 41 24 57 24 73 24 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 2 values pushed */\01234 15 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01245 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0129 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0129 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01229 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01229 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0122 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0129 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01219 9 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0128 19 24 19 40 19 56 19 72 19 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01239 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 564;
}
);
leftKerningGroup = i;
note = idieresis;
rightKerningGroup = i;
unicode = 00EF;
},
{
glyphname = idieresisacute;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = idotless;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, -130, 0}";
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, -53, 401}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 564;
}
);
leftKerningGroup = idotless;
rightKerningGroup = idotless;
unicode = 1E2F;
},
{
glyphname = idotaccent;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = idotless;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 84, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 564;
}
);
leftKerningGroup = idotless;
rightKerningGroup = idotless;
},
{
glyphname = idotbelow;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = i;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 104, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 604;
}
);
leftKerningGroup = i;
rightKerningGroup = i;
unicode = 1ECB;
},
{
color = 5;
glyphname = igrave;
lastChange = "2022-05-11 04:47:26 +0000";
layers = (
{
components = (
{
name = idotless;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, -45, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01223 15 14 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\0120 14 23 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01226 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0122 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\01222 9 4 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 564;
}
);
leftKerningGroup = i;
note = igrave;
rightKerningGroup = i;
unicode = 00EC;
},
{
glyphname = ihookabove;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = idotless;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, -24, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 564;
}
);
leftKerningGroup = idotless;
rightKerningGroup = idotless;
unicode = 1EC9;
},
{
glyphname = iinvertedbreve;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = idotless;
},
{
name = breveinvertedcomb;
transform = "{1, 0, 0, 1, -123, -372}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 564;
}
);
leftKerningGroup = idotless;
rightKerningGroup = idotless;
unicode = 020B;
},
{
glyphname = ij;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
components = (
{
name = i;
},
{
name = j;
transform = "{1, 0, 0, 1, 604, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1234;
}
);
leftKerningGroup = i;
note = ij;
rightKerningGroup = j;
unicode = 0133;
},
{
glyphname = ij_acutecomb;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = ij;
},
{
name = acutecomb;
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1234;
}
);
leftKerningGroup = i;
rightKerningGroup = j;
},
{
color = 5;
glyphname = imacron;
lastChange = "2022-05-11 04:47:26 +0000";
layers = (
{
components = (
{
name = idotless;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, -132, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\0125 13 4 4 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0124 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0126 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\0121 8 2 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 564;
}
);
leftKerningGroup = i;
note = imacron;
rightKerningGroup = i;
unicode = 012B;
},
{
glyphname = iogonek;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"424.56 1234 OFFCURVE",
"453 1261.574 OFFCURVE",
"453 1369 CURVE SMOOTH",
"453 1478.346 OFFCURVE",
"424.346 1507 OFFCURVE",
"315 1507 CURVE SMOOTH",
"206.492 1507 OFFCURVE",
"175 1477.731 OFFCURVE",
"175 1369 CURVE SMOOTH",
"175 1262.176 OFFCURVE",
"206.283 1234 OFFCURVE",
"315 1234 CURVE"
);
},
{
closed = 1;
nodes = (
"121.633 -42.786 OFFCURVE",
"40 -154.654 OFFCURVE",
"40 -279 CURVE SMOOTH",
"40 -423.272 OFFCURVE",
"148.244 -500 OFFCURVE",
"292 -500 CURVE SMOOTH",
"330.667 -500 OFFCURVE",
"363.333 -495.333 OFFCURVE",
"390 -490 CURVE SMOOTH",
"404.667 -487.333 OFFCURVE",
"418.667 -483.667 OFFCURVE",
"432 -479 CURVE",
"432 -311 LINE",
"425.333 -312.333 OFFCURVE",
"418.333 -313.333 OFFCURVE",
"411 -314 CURVE SMOOTH",
"397.667 -316 OFFCURVE",
"381.333 -317 OFFCURVE",
"362 -317 CURVE SMOOTH",
"294 -317 OFFCURVE",
"262 -281 OFFCURVE",
"262 -225 CURVE SMOOTH",
"262 -157 OFFCURVE",
"308.667 -80 OFFCURVE",
"434 0 CURVE",
"434 1055 LINE",
"196 1055 LINE",
"196 23 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01215 15 5 4 \012CALL[ ]	/* CallFunction */\012NPUSHB[ ]	/* 11 values pushed */\0129 5 25 5 41 5 57 5 73 5 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01220 5 15 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01220 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01221 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 3 values pushed */\01225 5 15 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01221 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01232 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01232 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01225 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01243 10 \012MIRP[10100]	/* MoveIndirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01220 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01220 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01222 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01235 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01235 19 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01238 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01238 19 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\01210 9 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01235 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01228 4 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 28 23 28 39 28 55 28 71 28 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 616;
}
);
leftKerningGroup = i;
note = iogonek;
rightKerningGroup = i;
unicode = 012F;
},
{
color = 5;
glyphname = itilde;
lastChange = "2022-05-11 06:14:00 +0000";
layers = (
{
components = (
{
name = idotless;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, -187, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01235 13 34 4 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0125 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01234 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01234 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01236 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01236 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\01212 8 23 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0125 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01228 8 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0128 28 24 28 40 28 56 28 72 28 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 564;
}
);
leftKerningGroup = i;
note = itilde;
rightKerningGroup = i;
unicode = 0129;
},
{
color = 4;
glyphname = j;
lastChange = "2022-05-11 04:45:36 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"435.421 1224 OFFCURVE",
"467 1251.708 OFFCURVE",
"467 1359 CURVE SMOOTH",
"467 1468.224 OFFCURVE",
"435.204 1497 OFFCURVE",
"327 1497 CURVE SMOOTH",
"217.654 1497 OFFCURVE",
"189 1468.346 OFFCURVE",
"189 1359 CURVE SMOOTH",
"189 1251.574 OFFCURVE",
"217.44 1224 OFFCURVE",
"327 1224 CURVE"
);
},
{
closed = 1;
nodes = (
"-21.333 -459.667 OFFCURVE",
"0.667 -467.667 OFFCURVE",
"26 -475 CURVE SMOOTH",
"68.667 -487 OFFCURVE",
"131.333 -498 OFFCURVE",
"210 -498 CURVE SMOOTH",
"348.54 -498 OFFCURVE",
"448 -442.287 OFFCURVE",
"448 -266 CURVE SMOOTH",
"448 1055 LINE",
"210 1055 LINE",
"210 -206 LINE SMOOTH",
"210 -276.382 OFFCURVE",
"171.239 -292 OFFCURVE",
"106 -292 CURVE SMOOTH",
"66 -292 OFFCURVE",
"29.667 -291.667 OFFCURVE",
"3 -289 CURVE SMOOTH",
"-13 -288.333 OFFCURVE",
"-27.333 -287.333 OFFCURVE",
"-40 -286 CURVE",
"-40 -451 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01215 15 5 4 \012CALL[ ]	/* CallFunction */\012NPUSHB[ ]	/* 11 values pushed */\0129 5 25 5 41 5 57 5 73 5 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01230 5 15 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01230 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01233 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01231 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01231 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01238 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01238 19 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\01210 9 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01238 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01220 5 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01222 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01225 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 630;
}
);
leftKerningGroup = j;
note = j;
rightKerningGroup = j;
unicode = 006A;
},
{
color = 4;
glyphname = jdotless;
lastChange = "2022-05-11 04:51:15 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{305, -500}";
},
{
name = top;
position = "{327, 1055}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"-40 -459 LINE",
"-21.333 -466.333 OFFCURVE",
"0.667 -473 OFFCURVE",
"26 -479 CURVE SMOOTH",
"68.667 -489.667 OFFCURVE",
"131.333 -498 OFFCURVE",
"210 -498 CURVE SMOOTH",
"346.628 -498 OFFCURVE",
"447 -432.461 OFFCURVE",
"447 -256 CURVE SMOOTH",
"447 1055 LINE",
"210 1055 LINE",
"210 -203 LINE SMOOTH",
"210 -273.91 OFFCURVE",
"171.149 -289 OFFCURVE",
"105 -289 CURVE SMOOTH",
"65 -289 OFFCURVE",
"29.667 -288.667 OFFCURVE",
"3 -286 CURVE SMOOTH",
"-12.333 -285.333 OFFCURVE",
"-26.667 -284.333 OFFCURVE",
"-40 -283 CURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01213 13 10 4 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01211 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01211 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01218 19 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 2 values pushed */\0120 5 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0122 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 630;
}
);
leftKerningGroup = jdotless;
widthMetricsKey = j;
note = dotlessj;
rightKerningGroup = jdotless;
unicode = 0237;
},
{
glyphname = jacute;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = jdotless;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, -8, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 630;
}
);
leftKerningGroup = jdotless;
rightKerningGroup = jdotless;
},
{
color = 5;
glyphname = jcircumflex;
lastChange = "2022-05-11 04:51:17 +0000";
layers = (
{
components = (
{
name = jdotless;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, -107, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 630;
}
);
leftKerningGroup = jdotless;
note = jcircumflex;
rightKerningGroup = jdotless;
unicode = 0135;
},
{
color = 4;
glyphname = k;
lastChange = "2022-05-11 04:45:39 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{574, 0}";
},
{
name = top;
position = "{574, 2060}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"403 0 LINE",
"403 473 LINE",
"531 473 LINE",
"836 0 LINE",
"1107 0 LINE",
"745 563 LINE",
"1105 1055 LINE",
"834 1055 LINE",
"559 670 LINE",
"403 670 LINE",
"403 1554 LINE",
"166 1554 LINE",
"166 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\0121 13 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01210 \012MDRP[10000]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0124 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0127 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0127 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01211 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01211 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\0123 8 9 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1147;
}
);
leftKerningGroup = h;
note = k;
rightKerningGroup = k;
unicode = 006B;
},
{
color = 5;
glyphname = kcommaaccent;
lastChange = "2022-05-11 04:47:26 +0000";
layers = (
{
components = (
{
name = k;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 342, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1147;
}
);
leftKerningGroup = h;
note = kcommaaccent;
rightKerningGroup = k;
unicode = 0137;
},
{
color = 4;
glyphname = kgreenlandic;
lastChange = "2022-05-11 04:48:22 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"403 0 LINE",
"403 439 LINE",
"559 439 LINE",
"826 0 LINE",
"1097 0 LINE",
"759 554 LINE",
"1085 1055 LINE",
"812 1055 LINE",
"570 677 LINE",
"403 677 LINE",
"403 1055 LINE",
"166 1055 LINE",
"166 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0124 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0127 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0127 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01211 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01211 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\0123 3 9 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1147;
}
);
leftKerningGroup = h;
note = kgreenlandic;
rightKerningGroup = k;
unicode = 0138;
},
{
color = 4;
glyphname = l;
lastChange = "2022-05-11 04:45:39 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{285, 0}";
},
{
name = center;
position = "{285, 1030}";
},
{
name = top;
position = "{285, 2060}";
},
{
name = topright;
position = "{549, 2060}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"403 0 LINE",
"403 1554 LINE",
"166 1554 LINE",
"166 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\0121 13 0 4 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0122 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 569;
}
);
leftKerningGroup = h;
note = l;
rightKerningGroup = l;
unicode = 006C;
},
{
color = 5;
glyphname = lacute;
lastChange = "2022-05-11 04:47:26 +0000";
layers = (
{
components = (
{
name = l;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, -50, 633}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01221 13 20 4 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01222 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 569;
}
);
leftKerningGroup = h;
note = lacute;
rightKerningGroup = l;
unicode = 013A;
},
{
glyphname = lcaron;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"625 1036 LINE",
"647 1080.667 OFFCURVE",
"667.667 1123 OFFCURVE",
"687 1163 CURVE SMOOTH",
"701.665 1193.552 OFFCURVE",
"766.463 1329.158 OFFCURVE",
"774 1348 CURVE SMOOTH",
"797.333 1396.667 OFFCURVE",
"809 1434 OFFCURVE",
"809 1460 CURVE SMOOTH",
"809 1500 OFFCURVE",
"782.333 1517.333 OFFCURVE",
"729 1536 CURVE SMOOTH",
"699.667 1545.333 OFFCURVE",
"669.333 1550 OFFCURVE",
"644 1554 CURVE SMOOTH",
"629.333 1556 OFFCURVE",
"615.333 1557.667 OFFCURVE",
"602 1559 CURVE",
"477 1085 LINE"
);
},
{
closed = 1;
nodes = (
"403 0 LINE",
"403 1554 LINE",
"166 1554 LINE",
"166 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01223 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\0128 15 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01219 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01220 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0128 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01224 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01218 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01221 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 750;
}
);
leftKerningGroup = h;
note = lcaron;
rightKerningGroup = l;
unicode = 013E;
},
{
glyphname = lcircumflexbelow;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = l;
},
{
name = circumflexbelowcomb;
transform = "{1, 0, 0, 1, -144, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 569;
}
);
leftKerningGroup = h;
rightKerningGroup = l;
unicode = 1E3D;
},
{
glyphname = lcommaaccent;
lastChange = "2022-05-11 04:47:26 +0000";
layers = (
{
components = (
{
name = l;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 53, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 569;
}
);
leftKerningGroup = h;
note = lcommaaccent;
rightKerningGroup = l;
unicode = 013C;
},
{
glyphname = ldot;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
components = (
{
name = l;
},
{
name = period;
transform = "{0.90002, 0, 0, 0.90002, 388, 638}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 799;
}
);
leftKerningGroup = h;
note = ldot;
rightKerningGroup = l;
unicode = 0140;
},
{
glyphname = ldotbelow;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = l;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 87, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 569;
}
);
leftKerningGroup = h;
rightKerningGroup = l;
unicode = 1E37;
},
{
glyphname = lj;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = l;
},
{
name = j;
transform = "{1, 0, 0, 1, 569, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1199;
}
);
leftKerningGroup = h;
rightKerningGroup = j;
unicode = 01C9;
},
{
glyphname = llinebelow;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = l;
},
{
name = macronbelowcomb;
transform = "{1, 0, 0, 1, -129, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 569;
}
);
leftKerningGroup = h;
rightKerningGroup = l;
unicode = 1E3B;
},
{
glyphname = lslash;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"494 0 LINE",
"494 672 LINE",
"694 807 LINE",
"694 1055 LINE",
"494 922 LINE",
"494 1554 LINE",
"260 1554 LINE",
"260 784 LINE",
"90 676 LINE",
"90 432 LINE",
"260 537 LINE",
"260 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\0129 13 3 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0123 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0129 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDRP[10000]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0127 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0127 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01210 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 3 values pushed */\0120 10 7 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 3 values pushed */\0121 10 7 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 3 values pushed */\0126 10 7 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 745;
}
);
leftKerningGroup = lslash;
note = lslash;
rightKerningGroup = lslash;
unicode = 0142;
},
{
color = 4;
glyphname = m;
lastChange = "2022-05-11 04:45:39 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{912, 0}";
},
{
name = top;
position = "{912, 1055}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"403 0 LINE",
"403 829 LINE",
"425 837 OFFCURVE",
"449.333 844.333 OFFCURVE",
"476 851 CURVE SMOOTH",
"521.333 861.667 OFFCURVE",
"580.333 874 OFFCURVE",
"647 874 CURVE SMOOTH",
"765.28 874 OFFCURVE",
"795 827.37 OFFCURVE",
"795 702 CURVE SMOOTH",
"795 0 LINE",
"1032 0 LINE",
"1032 727 LINE SMOOTH",
"1032 751 OFFCURVE",
"1031 794.333 OFFCURVE",
"1027 829 CURVE",
"1086.479 848.826 OFFCURVE",
"1172.555 874 OFFCURVE",
"1268 874 CURVE SMOOTH",
"1394.028 874 OFFCURVE",
"1421 829.239 OFFCURVE",
"1421 702 CURVE SMOOTH",
"1421 0 LINE",
"1659 0 LINE",
"1659 748 LINE SMOOTH",
"1659 977.333 OFFCURVE",
"1572.667 1085 OFFCURVE",
"1378 1085 CURVE SMOOTH",
"1290 1085 OFFCURVE",
"1208.667 1065.833 OFFCURVE",
"1142 1042.5 CURVE SMOOTH",
"1075.333 1019.167 OFFCURVE",
"1020.333 991.667 OFFCURVE",
"987 973 CURVE",
"944.333 1047.667 OFFCURVE",
"869.333 1085 OFFCURVE",
"752 1085 CURVE SMOOTH",
"654.667 1085 OFFCURVE",
"560 1057.667 OFFCURVE",
"488 1031 CURVE SMOOTH",
"446 1015 OFFCURVE",
"406.333 997 OFFCURVE",
"369 977 CURVE",
"340 1055 LINE",
"166 1055 LINE",
"166 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01247 13 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01235 13 36 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01219 13 20 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01235 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01231 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01231 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01219 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01251 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0127 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0127 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01215 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01215 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01219 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01235 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01235 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01248 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01248 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01215 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01226 5 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0128 26 24 26 40 26 56 26 72 26 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01242 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1823;
}
);
leftKerningGroup = n;
note = m;
rightKerningGroup = n;
unicode = 006D;
},
{
glyphname = macute;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = m;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 577, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1823;
}
);
leftKerningGroup = n;
rightKerningGroup = n;
unicode = 1E3F;
},
{
color = 5;
glyphname = mdotaccent;
lastChange = "2022-05-11 04:47:26 +0000";
layers = (
{
components = (
{
name = m;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 714, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1823;
}
);
leftKerningGroup = n;
note = uni1E41;
rightKerningGroup = n;
unicode = 1E41;
},
{
glyphname = mdotbelow;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = m;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 714, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1823;
}
);
leftKerningGroup = n;
rightKerningGroup = n;
unicode = 1E43;
},
{
color = 4;
glyphname = n;
lastChange = "2022-05-11 04:45:39 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{622, 0}";
},
{
name = top;
position = "{622, 1055}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"403 0 LINE",
"403 829 LINE",
"425 837 OFFCURVE",
"449.667 844.333 OFFCURVE",
"477 851 CURVE SMOOTH",
"523.667 861.667 OFFCURVE",
"590 874 OFFCURVE",
"670 874 CURVE SMOOTH",
"813.966 874 OFFCURVE",
"842 835.889 OFFCURVE",
"842 719 CURVE SMOOTH",
"842 0 LINE",
"1079 0 LINE",
"1079 748 LINE SMOOTH",
"1079 980 OFFCURVE",
"982 1085 OFFCURVE",
"774 1085 CURVE SMOOTH",
"663.333 1085 OFFCURVE",
"563.667 1057.667 OFFCURVE",
"489 1031 CURVE SMOOTH",
"445.667 1015 OFFCURVE",
"405.667 997 OFFCURVE",
"369 977 CURVE",
"340 1055 LINE",
"166 1055 LINE",
"166 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01226 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01226 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01211 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01223 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01211 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01227 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0127 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0127 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01211 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01211 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01224 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01224 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0127 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01218 5 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0128 18 24 18 40 18 56 18 72 18 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1243;
}
);
leftKerningGroup = n;
note = n;
rightKerningGroup = n;
unicode = 006E;
},
{
color = 5;
glyphname = nacute;
lastChange = "2022-05-11 04:47:26 +0000";
layers = (
{
components = (
{
name = n;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 287, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1243;
}
);
leftKerningGroup = n;
note = nacute;
rightKerningGroup = n;
unicode = 0144;
},
{
color = 5;
glyphname = ncaron;
lastChange = "2022-05-11 04:47:26 +0000";
layers = (
{
components = (
{
name = n;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 188, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1243;
}
);
leftKerningGroup = n;
note = ncaron;
rightKerningGroup = n;
unicode = 0148;
},
{
color = 0;
glyphname = ncircumflexbelow;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = n;
},
{
name = circumflexbelowcomb;
transform = "{1, 0, 0, 1, 193, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1243;
}
);
leftKerningGroup = n;
rightKerningGroup = n;
unicode = 1E4B;
},
{
color = 5;
glyphname = ncommaaccent;
lastChange = "2022-05-11 04:47:26 +0000";
layers = (
{
components = (
{
name = n;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 390, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1243;
}
);
leftKerningGroup = n;
note = ncommaaccent;
rightKerningGroup = n;
unicode = 0146;
},
{
glyphname = ndotaccent;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = n;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 424, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1243;
}
);
leftKerningGroup = n;
rightKerningGroup = n;
unicode = 1E45;
},
{
glyphname = ndotbelow;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = n;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 424, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1243;
}
);
leftKerningGroup = n;
rightKerningGroup = n;
unicode = 1E47;
},
{
glyphname = ngrave;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = n;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 295, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1243;
}
);
leftKerningGroup = n;
rightKerningGroup = n;
unicode = 01F9;
},
{
color = 4;
glyphname = eng;
lastChange = "2022-05-11 04:48:27 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"403 0 LINE",
"403 829 LINE",
"425 837 OFFCURVE",
"449.667 844.333 OFFCURVE",
"477 851 CURVE SMOOTH",
"523.667 861.667 OFFCURVE",
"590 874 OFFCURVE",
"670 874 CURVE SMOOTH",
"813.966 874 OFFCURVE",
"842 835.889 OFFCURVE",
"842 719 CURVE SMOOTH",
"842 -203 LINE SMOOTH",
"842 -273.91 OFFCURVE",
"803.149 -289 OFFCURVE",
"737 -289 CURVE SMOOTH",
"697 -289 OFFCURVE",
"661.667 -288.667 OFFCURVE",
"635 -286 CURVE SMOOTH",
"619.667 -285.333 OFFCURVE",
"605.333 -284.333 OFFCURVE",
"592 -283 CURVE",
"592 -459 LINE",
"610.667 -466.333 OFFCURVE",
"632.667 -473 OFFCURVE",
"658 -479 CURVE SMOOTH",
"700.667 -489.667 OFFCURVE",
"763.333 -498 OFFCURVE",
"842 -498 CURVE SMOOTH",
"978.628 -498 OFFCURVE",
"1079 -432.461 OFFCURVE",
"1079 -256 CURVE SMOOTH",
"1079 748 LINE SMOOTH",
"1079 980 OFFCURVE",
"982 1085 OFFCURVE",
"774 1085 CURVE SMOOTH",
"663.333 1085 OFFCURVE",
"563.667 1057.667 OFFCURVE",
"489 1031 CURVE SMOOTH",
"445.667 1015 OFFCURVE",
"405.667 997 OFFCURVE",
"369 977 CURVE",
"340 1055 LINE",
"166 1055 LINE",
"166 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01246 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01232 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01246 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01232 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01211 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01232 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01216 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01243 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01211 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01247 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0127 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0127 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01244 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01244 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01216 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01216 19 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 2 values pushed */\01222 5 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01224 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01224 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01227 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0127 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01238 5 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0128 38 24 38 40 38 56 38 72 38 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1243;
}
);
leftKerningGroup = n;
note = eng;
rightKerningGroup = j;
unicode = 014B;
},
{
glyphname = nj;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = n;
},
{
name = j;
transform = "{1, 0, 0, 1, 1243, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1873;
}
);
leftKerningGroup = n;
rightKerningGroup = j;
unicode = 01CC;
},
{
glyphname = nlinebelow;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = n;
},
{
name = macronbelowcomb;
transform = "{1, 0, 0, 1, 208, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1243;
}
);
leftKerningGroup = n;
rightKerningGroup = n;
unicode = 1E49;
},
{
color = 5;
glyphname = ntilde;
lastChange = "2022-05-11 06:14:00 +0000";
layers = (
{
components = (
{
name = n;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 153, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1243;
}
);
leftKerningGroup = n;
note = ntilde;
rightKerningGroup = n;
unicode = 00F1;
},
{
color = 4;
glyphname = o;
lastChange = "2022-05-11 05:32:58 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{594, 0}";
},
{
name = center;
position = "{594, 528}";
},
{
name = ogonek;
position = "{1069, 10}";
},
{
name = top;
position = "{594, 1055}";
},
{
name = topright;
position = "{1273, 1055}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"94 349.333 OFFCURVE",
"131.5 208.667 OFFCURVE",
"213.5 114 CURVE SMOOTH",
"295.5 19.333 OFFCURVE",
"419.333 -31 OFFCURVE",
"594 -31 CURVE SMOOTH",
"768.667 -31 OFFCURVE",
"893.667 19.333 OFFCURVE",
"975 114 CURVE SMOOTH",
"1056.333 208.667 OFFCURVE",
"1094 349.333 OFFCURVE",
"1094 528 CURVE SMOOTH",
"1094 706.667 OFFCURVE",
"1056.333 845.333 OFFCURVE",
"975 940 CURVE SMOOTH",
"893.667 1034.667 OFFCURVE",
"768.667 1085 OFFCURVE",
"594 1085 CURVE SMOOTH",
"419.333 1085 OFFCURVE",
"295.5 1034.667 OFFCURVE",
"213.5 940 CURVE SMOOTH",
"131.5 845.333 OFFCURVE",
"94 706.667 OFFCURVE",
"94 528 CURVE"
);
},
{
closed = 1;
nodes = (
"490 170 OFFCURVE",
"427.167 201.833 OFFCURVE",
"390.5 262.5 CURVE SMOOTH",
"353.833 323.167 OFFCURVE",
"344 412 OFFCURVE",
"344 528 CURVE SMOOTH",
"344 642.667 OFFCURVE",
"353.833 731.833 OFFCURVE",
"390.5 792.5 CURVE SMOOTH",
"427.167 853.167 OFFCURVE",
"490 885 OFFCURVE",
"594 885 CURVE SMOOTH",
"699.333 885 OFFCURVE",
"762 853.167 OFFCURVE",
"798 792.5 CURVE SMOOTH",
"834 731.833 OFFCURVE",
"844 642.667 OFFCURVE",
"844 528 CURVE SMOOTH",
"844 412 OFFCURVE",
"834 323.167 OFFCURVE",
"798 262.5 CURVE SMOOTH",
"762 201.833 OFFCURVE",
"699.333 170 OFFCURVE",
"594 170 CURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01240 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01240 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHB[ ]	/* 11 values pushed */\0129 25 25 25 41 25 57 25 73 25 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01225 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01210 11 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01235 11 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0126 35 22 35 38 35 54 35 70 35 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01241 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0125 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01215 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01215 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 2 values pushed */\01220 1 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 20 23 20 39 20 55 20 71 20 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\0125 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01230 1 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0128 30 24 30 40 30 56 30 72 30 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1188;
}
);
leftKerningGroup = o;
note = o;
rightKerningGroup = o;
unicode = 006F;
},
{
color = 5;
glyphname = oacute;
lastChange = "2022-05-11 04:47:26 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 259, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1188;
}
);
leftKerningGroup = o;
note = oacute;
rightKerningGroup = o;
unicode = 00F3;
},
{
color = 5;
glyphname = obreve;
lastChange = "2022-05-11 04:47:26 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = brevecomb;
transform = "{1, 0, 0, 1, 189, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1188;
}
);
leftKerningGroup = o;
note = obreve;
rightKerningGroup = o;
unicode = 014F;
},
{
glyphname = ocaron;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 160, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1188;
}
);
leftKerningGroup = o;
rightKerningGroup = o;
unicode = 01D2;
},
{
color = 5;
glyphname = ocircumflex;
lastChange = "2022-05-11 04:47:26 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 160, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1188;
}
);
leftKerningGroup = o;
note = ocircumflex;
rightKerningGroup = o;
unicode = 00F4;
},
{
glyphname = ocircumflexacute;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 160, 0}";
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 259, 540}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1188;
}
);
leftKerningGroup = o;
rightKerningGroup = o;
unicode = 1ED1;
},
{
glyphname = ocircumflexdotbelow;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 396, 0}";
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 160, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1188;
}
);
leftKerningGroup = o;
rightKerningGroup = o;
unicode = 1ED9;
},
{
glyphname = ocircumflexgrave;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 160, 0}";
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 267, 540}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1188;
}
);
leftKerningGroup = o;
rightKerningGroup = o;
unicode = 1ED3;
},
{
glyphname = ocircumflexhookabove;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = circumflexcomb_hookabovecomb;
transform = "{1, 0, 0, 1, 160, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1188;
}
);
leftKerningGroup = o;
rightKerningGroup = o;
unicode = 1ED5;
},
{
glyphname = ocircumflextilde;
lastChange = "2022-05-11 06:14:00 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = circumflexcomb_tildecomb;
transform = "{1, 0, 0, 1, 160, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1188;
}
);
leftKerningGroup = o;
rightKerningGroup = o;
unicode = 1ED7;
},
{
glyphname = odblgrave;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = dblgravecomb;
transform = "{1, 0, 0, 1, 74, -372}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1188;
}
);
leftKerningGroup = o;
rightKerningGroup = o;
unicode = 020D;
},
{
color = 5;
glyphname = odieresis;
lastChange = "2022-05-11 04:47:26 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 182, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1188;
}
);
leftKerningGroup = o;
note = odieresis;
rightKerningGroup = o;
unicode = 00F6;
},
{
glyphname = odieresismacron;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 182, 0}";
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 180, 401}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1188;
}
);
leftKerningGroup = o;
rightKerningGroup = o;
unicode = 022B;
},
{
glyphname = odotaccentmacron;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 396, 0}";
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 180, 422}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1188;
}
);
leftKerningGroup = o;
rightKerningGroup = o;
unicode = 0231;
},
{
glyphname = odotbelow;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 396, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1188;
}
);
leftKerningGroup = o;
rightKerningGroup = o;
unicode = 1ECD;
},
{
color = 5;
glyphname = ograve;
lastChange = "2022-05-11 04:47:26 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 267, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1188;
}
);
leftKerningGroup = o;
note = ograve;
rightKerningGroup = o;
unicode = 00F2;
},
{
glyphname = ohookabove;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 288, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1188;
}
);
leftKerningGroup = o;
rightKerningGroup = o;
unicode = 1ECF;
},
{
glyphname = ohorn;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = horncomb;
transform = "{1, 0, 0, 1, 295, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1188;
}
);
leftKerningGroup = o;
rightKerningGroup = o;
unicode = 01A1;
},
{
glyphname = ohornacute;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = ohorn;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 259, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1188;
}
);
leftKerningGroup = o;
rightKerningGroup = o;
unicode = 1EDB;
},
{
glyphname = ohorndotbelow;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = ohorn;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 396, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1188;
}
);
leftKerningGroup = o;
rightKerningGroup = o;
unicode = 1EE3;
},
{
glyphname = ohorngrave;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = ohorn;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 267, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1188;
}
);
leftKerningGroup = o;
rightKerningGroup = o;
unicode = 1EDD;
},
{
glyphname = ohornhookabove;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = ohorn;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 288, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1188;
}
);
leftKerningGroup = o;
rightKerningGroup = o;
unicode = 1EDF;
},
{
glyphname = ohorntilde;
lastChange = "2022-05-11 06:14:00 +0000";
layers = (
{
components = (
{
name = ohorn;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 125, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1188;
}
);
leftKerningGroup = o;
rightKerningGroup = o;
unicode = 1EE1;
},
{
color = 5;
glyphname = ohungarumlaut;
lastChange = "2022-05-11 04:47:26 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = hungarumlautcomb;
transform = "{1, 0, 0, 1, 74, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1188;
}
);
leftKerningGroup = o;
note = ohungarumlaut;
rightKerningGroup = o;
unicode = 0151;
},
{
glyphname = oinvertedbreve;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = breveinvertedcomb;
transform = "{1, 0, 0, 1, 189, -372}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1188;
}
);
leftKerningGroup = o;
rightKerningGroup = o;
unicode = 020F;
},
{
color = 5;
glyphname = omacron;
lastChange = "2022-05-11 04:47:26 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 180, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1188;
}
);
leftKerningGroup = o;
note = omacron;
rightKerningGroup = o;
unicode = 014D;
},
{
glyphname = omacronacute;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 180, 0}";
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 259, 360}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1188;
}
);
leftKerningGroup = o;
rightKerningGroup = o;
unicode = 1E53;
},
{
glyphname = omacrongrave;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 180, 0}";
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 267, 360}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1188;
}
);
leftKerningGroup = o;
rightKerningGroup = o;
unicode = 1E51;
},
{
glyphname = oogonek;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = ogonekcomb;
transform = "{1, 0, 0, 1, 614, 10}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1188;
}
);
leftKerningGroup = o;
rightKerningGroup = o;
unicode = 01EB;
},
{
color = 4;
glyphname = oslash;
lastChange = "2022-05-11 04:45:39 +0000";
layers = (
{
anchors = (
{
name = top;
position = "{600, 1055}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"323 -172 LINE",
"408 -7 LINE",
"462 -23 OFFCURVE",
"524 -31 OFFCURVE",
"594 -31 CURVE SMOOTH",
"768.667 -31 OFFCURVE",
"893.667 19.333 OFFCURVE",
"975 114 CURVE SMOOTH",
"1056.333 208.667 OFFCURVE",
"1094 349.333 OFFCURVE",
"1094 528 CURVE SMOOTH",
"1094 742.667 OFFCURVE",
"1040 900 OFFCURVE",
"920 992 CURVE",
"1044 1233 LINE",
"885 1233 LINE",
"794 1057 LINE",
"736.667 1075.667 OFFCURVE",
"670 1085 OFFCURVE",
"594 1085 CURVE SMOOTH",
"419.333 1085 OFFCURVE",
"295.5 1034.667 OFFCURVE",
"213.5 940 CURVE SMOOTH",
"131.5 845.333 OFFCURVE",
"94 706.667 OFFCURVE",
"94 528 CURVE SMOOTH",
"94 304 OFFCURVE",
"150.667 145 OFFCURVE",
"280 53 CURVE",
"164 -172 LINE"
);
},
{
closed = 1;
nodes = (
"354.333 326.333 OFFCURVE",
"344 413.333 OFFCURVE",
"344 528 CURVE SMOOTH",
"344 642.667 OFFCURVE",
"353.833 731.833 OFFCURVE",
"390.5 792.5 CURVE SMOOTH",
"427.167 853.167 OFFCURVE",
"490 885 OFFCURVE",
"594 885 CURVE SMOOTH",
"634.667 885 OFFCURVE",
"669.667 880 OFFCURVE",
"699 870 CURVE",
"389 265 LINE"
);
},
{
closed = 1;
nodes = (
"836 713 OFFCURVE",
"844 632 OFFCURVE",
"844 528 CURVE SMOOTH",
"844 412 OFFCURVE",
"834 323.167 OFFCURVE",
"798 262.5 CURVE SMOOTH",
"762 201.833 OFFCURVE",
"699.333 170 OFFCURVE",
"594 170 CURVE SMOOTH",
"558.667 170 OFFCURVE",
"528.667 173.333 OFFCURVE",
"504 180 CURVE",
"808 773 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */\01213 26 3 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\01234 26 13 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01234 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\0123 11 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 3 values pushed */\01245 26 13 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01245 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHB[ ]	/* 11 values pushed */\0129 45 25 45 41 45 57 45 73 45 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 2 values pushed */\01217 11 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 3 values pushed */\01237 26 13 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 3 values pushed */\01248 26 13 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01250 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0128 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0128 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01222 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 3 values pushed */\01212 25 3 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0128 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01229 1 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0128 29 24 29 40 29 56 29 72 29 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01237 25 12 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01222 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01240 1 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 40 23 40 39 40 55 40 71 40 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01248 25 12 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1200;
}
);
leftKerningGroup = o;
note = oslash;
rightKerningGroup = o;
unicode = 00F8;
},
{
glyphname = oslashacute;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = oslash;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 265, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1200;
}
);
leftKerningGroup = o;
rightKerningGroup = o;
unicode = 01FF;
},
{
color = 5;
glyphname = otilde;
lastChange = "2022-05-11 06:14:00 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 125, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1188;
}
);
leftKerningGroup = o;
note = otilde;
rightKerningGroup = o;
unicode = 00F5;
},
{
glyphname = otildeacute;
lastChange = "2022-05-11 06:14:00 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 125, 0}";
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 259, 424}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1188;
}
);
leftKerningGroup = o;
rightKerningGroup = o;
unicode = 1E4D;
},
{
glyphname = otildedieresis;
lastChange = "2022-05-11 06:14:00 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 125, 0}";
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 182, 424}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1188;
}
);
leftKerningGroup = o;
rightKerningGroup = o;
unicode = 1E4F;
},
{
glyphname = otildemacron;
lastChange = "2022-05-11 06:14:00 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 125, 0}";
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 180, 424}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1188;
}
);
leftKerningGroup = o;
rightKerningGroup = o;
unicode = 022D;
},
{
color = 4;
glyphname = oe;
lastChange = "2022-05-11 04:45:39 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{918, 0}";
},
{
name = top;
position = "{918, 1055}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"94 349.333 OFFCURVE",
"130.833 208.667 OFFCURVE",
"211.5 114 CURVE SMOOTH",
"292.167 19.333 OFFCURVE",
"415.333 -31 OFFCURVE",
"590 -31 CURVE SMOOTH",
"751.333 -31 OFFCURVE",
"873.333 24.333 OFFCURVE",
"952 127 CURVE",
"1034.713 14.937 OFFCURVE",
"1183.147 -27 OFFCURVE",
"1339 -27 CURVE SMOOTH",
"1441.667 -27 OFFCURVE",
"1535 -11 OFFCURVE",
"1603 5 CURVE SMOOTH",
"1643 14.333 OFFCURVE",
"1680 25 OFFCURVE",
"1714 37 CURVE",
"1714 205 LINE",
"1684.667 199.667 OFFCURVE",
"1652 195.333 OFFCURVE",
"1616 192 CURVE SMOOTH",
"1554.667 185.333 OFFCURVE",
"1471.333 180 OFFCURVE",
"1378 180 CURVE SMOOTH",
"1267.333 180 OFFCURVE",
"1196 201.5 OFFCURVE",
"1152 243.5 CURVE SMOOTH",
"1108 285.5 OFFCURVE",
"1091.333 348.667 OFFCURVE",
"1090 434 CURVE",
"1749 434 LINE",
"1757 504.667 OFFCURVE",
"1762 571.333 OFFCURVE",
"1762 634 CURVE SMOOTH",
"1762 767.333 OFFCURVE",
"1739.667 880.167 OFFCURVE",
"1677 959.5 CURVE SMOOTH",
"1614.333 1038.833 OFFCURVE",
"1511.333 1085 OFFCURVE",
"1350 1085 CURVE SMOOTH",
"1205.445 1085 OFFCURVE",
"1065.041 1039.552 OFFCURVE",
"971 922 CURVE",
"900.333 1028.667 OFFCURVE",
"768.667 1085 OFFCURVE",
"590 1085 CURVE SMOOTH",
"415.333 1085 OFFCURVE",
"292.167 1034.667 OFFCURVE",
"211.5 940 CURVE SMOOTH",
"130.833 845.333 OFFCURVE",
"94 706.667 OFFCURVE",
"94 528 CURVE"
);
},
{
closed = 1;
nodes = (
"1087 701.333 OFFCURVE",
"1096.167 769.5 OFFCURVE",
"1131.5 815.5 CURVE SMOOTH",
"1166.833 861.5 OFFCURVE",
"1227 885 OFFCURVE",
"1327 885 CURVE SMOOTH",
"1506.992 885 OFFCURVE",
"1542 818.916 OFFCURVE",
"1542 651 CURVE SMOOTH",
"1542 612 LINE",
"1087 612 LINE"
);
},
{
closed = 1;
nodes = (
"486 170 OFFCURVE",
"422.167 201.833 OFFCURVE",
"385.5 262.5 CURVE SMOOTH",
"348.833 323.167 OFFCURVE",
"338 412 OFFCURVE",
"338 528 CURVE SMOOTH",
"338 642.667 OFFCURVE",
"348.833 731.833 OFFCURVE",
"385.5 792.5 CURVE SMOOTH",
"422.167 853.167 OFFCURVE",
"486 885 OFFCURVE",
"590 885 CURVE SMOOTH",
"695.333 885 OFFCURVE",
"759.667 853.167 OFFCURVE",
"797 792.5 CURVE SMOOTH",
"834.333 731.833 OFFCURVE",
"846 642.667 OFFCURVE",
"846 528 CURVE SMOOTH",
"846 412 OFFCURVE",
"834.333 323.167 OFFCURVE",
"797 262.5 CURVE SMOOTH",
"759.667 201.833 OFFCURVE",
"695.333 170 OFFCURVE",
"590 170 CURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01278 12 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01262 12 68 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01218 10 52 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\0128 68 62 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01218 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01221 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01262 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01222 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 3 values pushed */\01243 68 62 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHB[ ]	/* 11 values pushed */\0126 78 22 78 38 78 54 78 70 78 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01218 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01284 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0125 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01213 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01213 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01238 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01238 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01246 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01246 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\01251 4 21 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01213 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01257 1 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0128 57 24 57 40 57 56 57 72 57 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\0128 13 57 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01238 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01227 1 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 27 23 27 39 27 55 27 71 27 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01238 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01230 5 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 30 23 30 39 30 55 30 71 30 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01243 38 27 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01227 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01263 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01257 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01273 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1835;
}
);
leftKerningGroup = o;
note = oe;
rightKerningGroup = e;
unicode = 0153;
},
{
color = 4;
glyphname = p;
lastChange = "2022-05-11 04:45:39 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{609, 0}";
},
{
name = top;
position = "{609, 1055}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"431.667 27.667 OFFCURVE",
"463 15.667 OFFCURVE",
"497 5 CURVE SMOOTH",
"555.667 -13.667 OFFCURVE",
"635.667 -31 OFFCURVE",
"725 -31 CURVE SMOOTH",
"849 -31 OFFCURVE",
"943.833 4.167 OFFCURVE",
"1008.5 91.5 CURVE SMOOTH",
"1073.167 178.833 OFFCURVE",
"1106 318.667 OFFCURVE",
"1106 528 CURVE SMOOTH",
"1106 725.333 OFFCURVE",
"1078.833 864.5 OFFCURVE",
"1023.5 954.5 CURVE SMOOTH",
"968.167 1044.5 OFFCURVE",
"886 1085 OFFCURVE",
"774 1085 CURVE SMOOTH",
"662 1085 OFFCURVE",
"563.667 1057.667 OFFCURVE",
"489 1031 CURVE SMOOTH",
"445.667 1015 OFFCURVE",
"405.667 997 OFFCURVE",
"369 977 CURVE",
"340 1055 LINE",
"166 1055 LINE",
"166 -485 LINE",
"403 -485 LINE",
"403 41 LINE"
);
},
{
closed = 1;
nodes = (
"428.333 837 OFFCURVE",
"455.667 844.333 OFFCURVE",
"485 851 CURVE SMOOTH",
"534.333 861.667 OFFCURVE",
"600.667 874 OFFCURVE",
"670 874 CURVE SMOOTH",
"746 874 OFFCURVE",
"793.167 851.5 OFFCURVE",
"820.5 797.5 CURVE SMOOTH",
"847.833 743.5 OFFCURVE",
"856 659 OFFCURVE",
"856 535 CURVE SMOOTH",
"856 384.333 OFFCURVE",
"844.167 295.667 OFFCURVE",
"811.5 245 CURVE SMOOTH",
"778.833 194.333 OFFCURVE",
"723.667 182 OFFCURVE",
"637 182 CURVE SMOOTH",
"566.333 182 OFFCURVE",
"509.333 189.333 OFFCURVE",
"468 196 CURVE SMOOTH",
"444 200 OFFCURVE",
"422.333 205 OFFCURVE",
"403 211 CURVE",
"403 829 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01246 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01235 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01246 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\0120 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0129 35 25 35 41 35 57 35 73 35 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01235 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01214 11 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01225 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01214 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01247 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0122 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0129 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0129 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 19 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01219 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 2 values pushed */\01230 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 30 23 30 39 30 55 30 71 30 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01224 19 30 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\0129 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01240 5 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0128 40 24 40 40 40 56 40 72 40 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1218;
}
);
leftKerningGroup = p;
note = p;
rightKerningGroup = o;
unicode = 0070;
},
{
color = 5;
glyphname = pdotaccent;
lastChange = "2022-05-11 04:47:26 +0000";
layers = (
{
components = (
{
name = p;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 411, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1218;
}
);
leftKerningGroup = p;
note = uni1E57;
rightKerningGroup = o;
unicode = 1E57;
},
{
color = 4;
glyphname = thorn;
lastChange = "2022-05-11 04:45:39 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{614, 0}";
},
{
name = top;
position = "{614, 1055}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"465.953 31.266 OFFCURVE",
"600.925 -31 OFFCURVE",
"745 -31 CURVE SMOOTH",
"862.333 -31 OFFCURVE",
"956.333 5.667 OFFCURVE",
"1019 95 CURVE SMOOTH",
"1081.667 184.333 OFFCURVE",
"1116 324 OFFCURVE",
"1116 532 CURVE SMOOTH",
"1116 705.333 OFFCURVE",
"1096.667 843.167 OFFCURVE",
"1042 938.5 CURVE SMOOTH",
"987.333 1033.833 OFFCURVE",
"897.333 1085 OFFCURVE",
"756 1085 CURVE SMOOTH",
"656 1085 OFFCURVE",
"569 1065.667 OFFCURVE",
"505 1047 CURVE SMOOTH",
"468.333 1035.667 OFFCURVE",
"434.333 1023.333 OFFCURVE",
"403 1010 CURVE",
"403 1554 LINE",
"166 1554 LINE",
"166 -485 LINE",
"403 -485 LINE",
"403 72 LINE"
);
},
{
closed = 1;
nodes = (
"427.667 842.667 OFFCURVE",
"453.333 849 OFFCURVE",
"480 855 CURVE SMOOTH",
"526.667 864.333 OFFCURVE",
"585.667 874 OFFCURVE",
"647 874 CURVE SMOOTH",
"744.333 874 OFFCURVE",
"799.5 856.333 OFFCURVE",
"829.5 803 CURVE SMOOTH",
"859.5 749.667 OFFCURVE",
"866 661.333 OFFCURVE",
"866 520 CURVE SMOOTH",
"866 393.333 OFFCURVE",
"856.167 309.167 OFFCURVE",
"827.5 256.5 CURVE SMOOTH",
"798.833 203.833 OFFCURVE",
"750 182 OFFCURVE",
"670 182 CURVE SMOOTH",
"588.667 182 OFFCURVE",
"522.667 195.333 OFFCURVE",
"476 210 CURVE SMOOTH",
"448.667 218 OFFCURVE",
"424.333 227.333 OFFCURVE",
"403 238 CURVE",
"403 836 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01246 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01235 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01246 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\0120 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MDRP[10000]	/* MoveDirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0129 35 25 35 41 35 57 35 73 35 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01235 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01214 11 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 3 values pushed */\0124 1 14 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01225 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01214 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01247 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0129 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0129 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 19 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01219 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0129 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01240 5 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0128 40 24 40 40 40 56 40 72 40 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\0124 9 40 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01219 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01230 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 30 23 30 39 30 55 30 71 30 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01224 19 30 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1228;
}
);
leftKerningGroup = h;
note = thorn;
rightKerningGroup = o;
unicode = 00FE;
},
{
color = 4;
glyphname = q;
lastChange = "2022-05-11 04:45:39 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{610, 0}";
},
{
name = top;
position = "{610, 1055}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"585 -31 OFFCURVE",
"663.333 -13.667 OFFCURVE",
"722 5 CURVE SMOOTH",
"756 15.667 OFFCURVE",
"787.333 27.667 OFFCURVE",
"816 41 CURVE",
"816 -485 LINE",
"1054 -485 LINE",
"1054 1055 LINE",
"880 1055 LINE",
"853 977 LINE",
"820.333 997 OFFCURVE",
"784.667 1015 OFFCURVE",
"746 1031 CURVE SMOOTH",
"679.333 1057.667 OFFCURVE",
"588.667 1085 OFFCURVE",
"486 1085 CURVE SMOOTH",
"362 1085 OFFCURVE",
"268.5 1041.667 OFFCURVE",
"206.5 951 CURVE SMOOTH",
"144.5 860.333 OFFCURVE",
"114 720 OFFCURVE",
"114 528 CURVE SMOOTH",
"114 318.667 OFFCURVE",
"146.833 178.833 OFFCURVE",
"211.5 91.5 CURVE SMOOTH",
"276.167 4.167 OFFCURVE",
"371.667 -31 OFFCURVE",
"497 -31 CURVE"
);
},
{
closed = 1;
nodes = (
"496.333 182 OFFCURVE",
"441.333 194.333 OFFCURVE",
"408 245 CURVE SMOOTH",
"374.667 295.667 OFFCURVE",
"364 384.333 OFFCURVE",
"364 535 CURVE SMOOTH",
"364 665.667 OFFCURVE",
"372.5 751 OFFCURVE",
"402.5 803 CURVE SMOOTH",
"432.5 855 OFFCURVE",
"481.333 874 OFFCURVE",
"564 874 CURVE SMOOTH",
"630.667 874 OFFCURVE",
"693.333 861.667 OFFCURVE",
"740 851 CURVE SMOOTH",
"766.667 844.333 OFFCURVE",
"792 837 OFFCURVE",
"816 829 CURVE",
"816 211 LINE",
"797.333 205 OFFCURVE",
"776 200 OFFCURVE",
"752 196 CURVE SMOOTH",
"710.667 189.333 OFFCURVE",
"652.333 182 OFFCURVE",
"583 182 CURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01246 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01246 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01219 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01218 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01219 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01230 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0125 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01241 11 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0126 41 22 41 38 41 54 41 70 41 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01218 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01247 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01216 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01216 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01210 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01218 19 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 2 values pushed */\01225 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 25 23 25 39 25 55 25 71 25 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01220 0 25 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01236 5 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0128 36 24 36 40 36 56 36 72 36 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1220;
}
);
leftKerningGroup = o;
note = q;
rightKerningGroup = q;
unicode = 0071;
},
{
color = 4;
glyphname = r;
lastChange = "2022-05-11 04:45:39 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{408, 0}";
},
{
name = top;
position = "{408, 1055}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"403 0 LINE",
"403 768 LINE",
"489.667 802.667 OFFCURVE",
"609.333 814.333 OFFCURVE",
"776 817 CURVE",
"778 1063 LINE",
"616.667 1055 OFFCURVE",
"489 1008 OFFCURVE",
"385 940 CURVE",
"371 1055 LINE",
"166 1055 LINE",
"166 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\0129 13 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\0122 0 9 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0125 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01210 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0125 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0126 2 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 3 values pushed */\0122 5 6 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 816;
}
);
leftKerningGroup = n;
note = r;
rightKerningGroup = r;
unicode = 0072;
},
{
color = 5;
glyphname = racute;
lastChange = "2022-05-11 04:47:26 +0000";
layers = (
{
components = (
{
name = r;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 73, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 816;
}
);
leftKerningGroup = n;
note = racute;
rightKerningGroup = r;
unicode = 0155;
},
{
color = 5;
glyphname = rcaron;
lastChange = "2022-05-11 04:47:26 +0000";
layers = (
{
components = (
{
name = r;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, -26, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 816;
}
);
leftKerningGroup = n;
note = rcaron;
rightKerningGroup = r;
unicode = 0159;
},
{
color = 5;
glyphname = rcommaaccent;
lastChange = "2022-05-11 04:47:26 +0000";
layers = (
{
components = (
{
name = r;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 176, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 816;
}
);
leftKerningGroup = n;
note = rcommaaccent;
rightKerningGroup = r;
unicode = 0157;
},
{
glyphname = rdblgrave;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = r;
},
{
name = dblgravecomb;
transform = "{1, 0, 0, 1, -112, -372}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 816;
}
);
leftKerningGroup = n;
rightKerningGroup = r;
unicode = 0211;
},
{
glyphname = rdotbelow;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = r;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 210, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 816;
}
);
leftKerningGroup = n;
rightKerningGroup = r;
unicode = 1E5B;
},
{
glyphname = rinvertedbreve;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = r;
},
{
name = breveinvertedcomb;
transform = "{1, 0, 0, 1, 3, -372}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 816;
}
);
leftKerningGroup = n;
rightKerningGroup = r;
unicode = 0213;
},
{
glyphname = rlinebelow;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = r;
},
{
name = macronbelowcomb;
transform = "{1, 0, 0, 1, -6, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 816;
}
);
leftKerningGroup = n;
rightKerningGroup = r;
unicode = 1E5F;
},
{
color = 4;
glyphname = s;
lastChange = "2022-05-11 04:45:39 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{518, 0}";
},
{
name = top;
position = "{518, 1055}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"150.667 24.333 OFFCURVE",
"188.333 13 OFFCURVE",
"229 3 CURVE SMOOTH",
"298.333 -14.333 OFFCURVE",
"393 -31 OFFCURVE",
"497 -31 CURVE SMOOTH",
"685 -31 OFFCURVE",
"794.333 0 OFFCURVE",
"857 56 CURVE SMOOTH",
"919.667 112 OFFCURVE",
"935 194.333 OFFCURVE",
"935 297 CURVE SMOOTH",
"935 405 OFFCURVE",
"918.667 477 OFFCURVE",
"880 525 CURVE SMOOTH",
"841.333 573 OFFCURVE",
"780.333 598.667 OFFCURVE",
"691 616 CURVE SMOOTH",
"462 659 LINE SMOOTH",
"367.046 676.043 OFFCURVE",
"343 710.196 OFFCURVE",
"343 780 CURVE SMOOTH",
"343 872.029 OFFCURVE",
"411.412 889 OFFCURVE",
"564 889 CURVE SMOOTH",
"640 889 OFFCURVE",
"717 880.667 OFFCURVE",
"777 874 CURVE SMOOTH",
"811.667 870 OFFCURVE",
"845 865.333 OFFCURVE",
"877 860 CURVE",
"877 1030 LINE",
"848.333 1040 OFFCURVE",
"816.667 1049 OFFCURVE",
"782 1057 CURVE SMOOTH",
"722 1071.667 OFFCURVE",
"640 1085 OFFCURVE",
"544 1085 CURVE SMOOTH",
"270.667 1085 OFFCURVE",
"118 977.333 OFFCURVE",
"118 756 CURVE SMOOTH",
"118 653.333 OFFCURVE",
"134.5 584.167 OFFCURVE",
"176.5 535.5 CURVE SMOOTH",
"218.5 486.833 OFFCURVE",
"286.667 459.333 OFFCURVE",
"388 442 CURVE SMOOTH",
"609 401 LINE SMOOTH",
"686.307 388.531 OFFCURVE",
"701 356.612 OFFCURVE",
"701 297 CURVE SMOOTH",
"701 246.333 OFFCURVE",
"695.167 213.833 OFFCURVE",
"662.5 194.5 CURVE SMOOTH",
"629.833 175.167 OFFCURVE",
"569.333 168 OFFCURVE",
"460 168 CURVE SMOOTH",
"360 168 OFFCURVE",
"275.333 175.667 OFFCURVE",
"214 185 CURVE SMOOTH",
"178 190.333 OFFCURVE",
"145.333 196.333 OFFCURVE",
"116 203 CURVE",
"116 37 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01262 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01262 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01221 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHB[ ]	/* 11 values pushed */\0129 10 25 10 41 10 57 10 73 10 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01221 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01240 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0126 40 22 40 38 40 54 40 70 40 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01246 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01246 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01251 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01263 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01224 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01224 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01256 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01256 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 2 values pushed */\0125 1 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 5 23 5 39 5 55 5 71 5 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01224 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01235 8 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0128 35 24 35 40 35 56 35 72 35 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1035;
}
);
leftKerningGroup = s;
note = s;
rightKerningGroup = s;
unicode = 0073;
},
{
color = 5;
glyphname = sacute;
lastChange = "2022-05-11 04:47:26 +0000";
layers = (
{
components = (
{
name = s;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 183, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1035;
}
);
leftKerningGroup = s;
note = sacute;
rightKerningGroup = s;
unicode = 015B;
},
{
glyphname = sacutedotaccent;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = s;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 183, 0}";
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 320, 606}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1035;
}
);
leftKerningGroup = s;
rightKerningGroup = s;
unicode = 1E65;
},
{
glyphname = saltillo;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"403 593 LINE",
"403 1554 LINE",
"166 1554 LINE",
"166 593 LINE"
);
}
);
width = 569;
}
);
leftKerningGroup = saltillo;
rightKerningGroup = saltillo;
rightMetricsKey = "=|";
unicode = A78C;
},
{
color = 5;
glyphname = scaron;
lastChange = "2022-05-11 04:47:26 +0000";
layers = (
{
components = (
{
name = s;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 84, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1035;
}
);
leftKerningGroup = s;
note = scaron;
rightKerningGroup = s;
unicode = 0161;
},
{
glyphname = scarondotaccent;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = s;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 84, 0}";
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 320, 604}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1035;
}
);
leftKerningGroup = s;
rightKerningGroup = s;
unicode = 1E67;
},
{
glyphname = scedilla;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
components = (
{
name = s;
},
{
name = cedilla;
transform = "{1, 0, 0, 1, 232, -14}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1035;
}
);
leftKerningGroup = s;
note = scedilla;
rightKerningGroup = s;
unicode = 015F;
},
{
color = 5;
glyphname = scircumflex;
lastChange = "2022-05-11 04:47:26 +0000";
layers = (
{
components = (
{
name = s;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 84, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1035;
}
);
leftKerningGroup = s;
note = scircumflex;
rightKerningGroup = s;
unicode = 015D;
},
{
color = 5;
glyphname = scommaaccent;
lastChange = "2022-05-11 04:47:26 +0000";
layers = (
{
components = (
{
name = s;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 286, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1035;
}
);
leftKerningGroup = s;
note = scommaaccent;
rightKerningGroup = s;
unicode = 0219;
},
{
color = 5;
glyphname = sdotaccent;
lastChange = "2022-05-11 04:47:26 +0000";
layers = (
{
components = (
{
name = s;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 320, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1035;
}
);
leftKerningGroup = s;
note = uni1E61;
rightKerningGroup = s;
unicode = 1E61;
},
{
glyphname = sdotbelow;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = s;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 320, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1035;
}
);
leftKerningGroup = s;
rightKerningGroup = s;
unicode = 1E63;
},
{
glyphname = sdotbelowdotaccent;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = s;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 320, 0}";
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 320, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1035;
}
);
leftKerningGroup = s;
rightKerningGroup = s;
unicode = 1E69;
},
{
color = 4;
glyphname = germandbls;
lastChange = "2022-05-11 04:45:39 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{610, 0}";
},
{
name = top;
position = "{610, 1055}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"415 0 LINE",
"415 1038 LINE SMOOTH",
"415 1191.178 OFFCURVE",
"473.289 1243 OFFCURVE",
"628 1243 CURVE SMOOTH",
"791.769 1243 OFFCURVE",
"839 1212.758 OFFCURVE",
"839 1059 CURVE SMOOTH",
"839 932.873 OFFCURVE",
"754.62 873.03 OFFCURVE",
"679 827 CURVE SMOOTH",
"664.333 817.667 OFFCURVE",
"656 777.667 OFFCURVE",
"656 735 CURVE SMOOTH",
"656 692.333 OFFCURVE",
"664.333 647.667 OFFCURVE",
"679 641 CURVE SMOOTH",
"720.418 620.291 OFFCURVE",
"779.641 594.913 OFFCURVE",
"815 562.5 CURVE SMOOTH",
"855 525.833 OFFCURVE",
"884 469.667 OFFCURVE",
"884 375 CURVE SMOOTH",
"884 243.527 OFFCURVE",
"812.129 181 OFFCURVE",
"699 181 CURVE SMOOTH",
"648.333 181 OFFCURVE",
"602.667 184 OFFCURVE",
"568 188 CURVE SMOOTH",
"548 190.667 OFFCURVE",
"529.667 193.333 OFFCURVE",
"513 196 CURVE",
"509 20 LINE",
"528.333 12 OFFCURVE",
"550.333 5 OFFCURVE",
"575 -1 CURVE SMOOTH",
"617.667 -11.667 OFFCURVE",
"677.667 -21 OFFCURVE",
"751 -21 CURVE SMOOTH",
"853.667 -21 OFFCURVE",
"947 9.167 OFFCURVE",
"1015 72.5 CURVE SMOOTH",
"1083 135.833 OFFCURVE",
"1125 230 OFFCURVE",
"1125 358 CURVE SMOOTH",
"1125 458 OFFCURVE",
"1104.333 534.5 OFFCURVE",
"1075 592.5 CURVE SMOOTH",
"1060.333 621.5 OFFCURVE",
"1043.833 646 OFFCURVE",
"1025.5 666 CURVE SMOOTH",
"976.686 719.251 OFFCURVE",
"924.891 746.033 OFFCURVE",
"886 758 CURVE SMOOTH",
"882.667 759.333 OFFCURVE",
"881 762 OFFCURVE",
"881 766 CURVE SMOOTH",
"881 770 OFFCURVE",
"882.667 772.667 OFFCURVE",
"886 774 CURVE SMOOTH",
"906 779.333 OFFCURVE",
"951.5 805.167 OFFCURVE",
"993.5 856.5 CURVE SMOOTH",
"1035.5 907.833 OFFCURVE",
"1072 986 OFFCURVE",
"1072 1098 CURVE SMOOTH",
"1072 1191.333 OFFCURVE",
"1046 1280.5 OFFCURVE",
"978 1346.5 CURVE SMOOTH",
"910 1412.5 OFFCURVE",
"799.333 1456 OFFCURVE",
"630 1456 CURVE SMOOTH",
"455.333 1456 OFFCURVE",
"342.667 1413.5 OFFCURVE",
"272 1339.5 CURVE SMOOTH",
"201.333 1265.5 OFFCURVE",
"175 1161.333 OFFCURVE",
"175 1040 CURVE SMOOTH",
"175 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01272 12 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01225 12 46 4 \012CALL[ ]	/* CallFunction */\012NPUSHB[ ]	/* 11 values pushed */\0129 46 25 46 41 46 57 46 73 46 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01210 46 25 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01246 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01254 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01262 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0129 62 25 62 41 62 57 62 73 62 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01225 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01276 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0125 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01230 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01230 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01233 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01233 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01273 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01273 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01230 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01238 5 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 38 23 38 39 38 55 38 71 38 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01241 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0125 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01267 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0128 67 24 67 40 67 56 67 72 67 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1220;
}
);
leftKerningGroup = h;
note = germandbls;
rightKerningGroup = germandbls;
unicode = 00DF;
},
{
color = 4;
glyphname = t;
lastChange = "2022-05-11 04:45:39 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{432, 0}";
},
{
name = center;
position = "{432, 528}";
},
{
name = top;
position = "{432, 1055}";
},
{
name = topright;
position = "{844, 1055}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"240 132.333 OFFCURVE",
"258.833 70.167 OFFCURVE",
"303.5 29.5 CURVE SMOOTH",
"348.167 -11.167 OFFCURVE",
"418 -31 OFFCURVE",
"522 -31 CURVE SMOOTH",
"596.667 -31 OFFCURVE",
"660.333 -19 OFFCURVE",
"707 -7 CURVE SMOOTH",
"733.667 0.333 OFFCURVE",
"758.667 8.667 OFFCURVE",
"782 18 CURVE",
"782 176 LINE",
"768.667 174 OFFCURVE",
"753.333 172.333 OFFCURVE",
"736 171 CURVE SMOOTH",
"706.667 168.333 OFFCURVE",
"664 166 OFFCURVE",
"612 166 CURVE SMOOTH",
"504.02 166 OFFCURVE",
"477 189.375 OFFCURVE",
"477 291 CURVE SMOOTH",
"477 858 LINE",
"743 858 LINE",
"743 1055 LINE",
"477 1055 LINE",
"477 1331 LINE",
"240 1278 LINE",
"240 1055 LINE",
"84 1055 LINE",
"84 858 LINE",
"240 858 LINE",
"240 215 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\0129 13 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0129 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDRP[10000]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0122 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0126 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01226 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01226 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0122 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0120 8 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0128 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0129 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01226 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01215 8 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 15 23 15 39 15 55 15 71 15 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01218 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01220 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01220 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 864;
}
);
leftKerningGroup = t;
note = t;
rightKerningGroup = t;
unicode = 0074;
},
{
glyphname = tbar;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"259 132.333 OFFCURVE",
"277.833 70.167 OFFCURVE",
"322.5 29.5 CURVE SMOOTH",
"367.167 -11.167 OFFCURVE",
"437 -31 OFFCURVE",
"541 -31 CURVE SMOOTH",
"615.667 -31 OFFCURVE",
"679.333 -19 OFFCURVE",
"726 -7 CURVE SMOOTH",
"752.667 0.333 OFFCURVE",
"777.667 8.667 OFFCURVE",
"801 18 CURVE",
"801 176 LINE",
"787.667 174 OFFCURVE",
"772.333 172.333 OFFCURVE",
"755 171 CURVE SMOOTH",
"725.667 168.333 OFFCURVE",
"683 166 OFFCURVE",
"631 166 CURVE SMOOTH",
"523.02 166 OFFCURVE",
"496 189.375 OFFCURVE",
"496 291 CURVE SMOOTH",
"496 462 LINE",
"763 462 LINE",
"763 646 LINE",
"496 646 LINE",
"496 868 LINE",
"762 868 LINE",
"762 1055 LINE",
"496 1055 LINE",
"496 1331 LINE",
"259 1278 LINE",
"259 1055 LINE",
"103 1055 LINE",
"103 868 LINE",
"259 868 LINE",
"259 646 LINE",
"103 646 LINE",
"103 462 LINE",
"259 462 LINE",
"259 215 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01217 13 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0127 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01217 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0129 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01217 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01213 \012MDRP[10000]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0126 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01210 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01234 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01234 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\0123 4 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0124 4 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01212 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01213 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0123 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01214 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01216 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01234 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01223 8 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 23 23 23 39 23 55 23 71 23 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01226 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01226 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01228 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01228 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 891;
}
);
leftKerningGroup = t;
note = tbar;
rightKerningGroup = t;
unicode = 0167;
},
{
glyphname = tcaron;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"684 1153 LINE",
"706 1197.667 OFFCURVE",
"726.667 1240 OFFCURVE",
"746 1280 CURVE SMOOTH",
"760.665 1310.552 OFFCURVE",
"825.463 1446.158 OFFCURVE",
"833 1465 CURVE SMOOTH",
"856.333 1513.667 OFFCURVE",
"868 1551 OFFCURVE",
"868 1577 CURVE SMOOTH",
"868 1617 OFFCURVE",
"841.333 1634.333 OFFCURVE",
"788 1653 CURVE SMOOTH",
"758.667 1662.333 OFFCURVE",
"728.333 1667 OFFCURVE",
"703 1671 CURVE SMOOTH",
"688.333 1673 OFFCURVE",
"674.333 1674.667 OFFCURVE",
"661 1676 CURVE",
"536 1202 LINE"
);
},
{
closed = 1;
nodes = (
"238 132.333 OFFCURVE",
"256.833 70.167 OFFCURVE",
"301.5 29.5 CURVE SMOOTH",
"346.167 -11.167 OFFCURVE",
"416 -31 OFFCURVE",
"520 -31 CURVE SMOOTH",
"594.667 -31 OFFCURVE",
"658.333 -19 OFFCURVE",
"705 -7 CURVE SMOOTH",
"731.667 0.333 OFFCURVE",
"756.667 8.667 OFFCURVE",
"780 18 CURVE",
"780 176 LINE",
"766.667 174 OFFCURVE",
"751.333 172.333 OFFCURVE",
"734 171 CURVE SMOOTH",
"704.667 168.333 OFFCURVE",
"662 166 OFFCURVE",
"610 166 CURVE SMOOTH",
"502.02 166 OFFCURVE",
"475 189.375 OFFCURVE",
"475 291 CURVE SMOOTH",
"475 858 LINE",
"741 858 LINE",
"741 1055 LINE",
"475 1055 LINE",
"475 1331 LINE",
"238 1278 LINE",
"238 1055 LINE",
"82 1055 LINE",
"82 858 LINE",
"238 858 LINE",
"238 215 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01251 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\0128 15 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01251 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01219 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01222 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01219 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01228 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01224 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0128 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01252 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01221 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01225 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01245 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01245 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\0120 9 17 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01221 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01219 8 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01227 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01228 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01245 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01234 8 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 34 23 34 39 34 55 34 71 34 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01237 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01237 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01239 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01239 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 860;
}
);
leftKerningGroup = t;
note = tcaron;
rightKerningGroup = t;
unicode = 0165;
},
{
glyphname = tcedilla;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = t;
},
{
name = cedillacomb;
transform = "{1, 0, 0, 1, 126, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 864;
}
);
leftKerningGroup = t;
rightKerningGroup = t;
unicode = 0163;
},
{
glyphname = tcircumflexbelow;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = t;
},
{
name = circumflexbelowcomb;
transform = "{1, 0, 0, 1, 3, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 864;
}
);
leftKerningGroup = t;
rightKerningGroup = t;
unicode = 1E71;
},
{
color = 5;
glyphname = tcommaaccent;
lastChange = "2022-05-11 04:47:26 +0000";
layers = (
{
components = (
{
name = t;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 200, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 864;
}
);
leftKerningGroup = t;
note = tcommaaccent;
rightKerningGroup = t;
unicode = 021B;
},
{
glyphname = tdieresis;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = t;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 20, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 864;
}
);
leftKerningGroup = t;
rightKerningGroup = t;
unicode = 1E97;
},
{
color = 5;
glyphname = tdotaccent;
lastChange = "2022-05-11 04:47:26 +0000";
layers = (
{
components = (
{
name = t;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 234, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 864;
}
);
leftKerningGroup = t;
note = uni1E6B;
rightKerningGroup = t;
unicode = 1E6B;
},
{
glyphname = tdotbelow;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = t;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 234, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 864;
}
);
leftKerningGroup = t;
rightKerningGroup = t;
unicode = 1E6D;
},
{
glyphname = tlinebelow;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = t;
},
{
name = macronbelowcomb;
transform = "{1, 0, 0, 1, 18, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 864;
}
);
leftKerningGroup = t;
rightKerningGroup = t;
unicode = 1E6F;
},
{
color = 4;
glyphname = u;
lastChange = "2022-05-11 05:33:25 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{623, 0}";
},
{
name = ogonek;
position = "{1121, 10}";
},
{
name = top;
position = "{623, 1055}";
},
{
name = topright;
position = "{1425, 1055}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"166 75.667 OFFCURVE",
"264.333 -31 OFFCURVE",
"471 -31 CURVE SMOOTH",
"580.333 -31 OFFCURVE",
"681.333 -3.667 OFFCURVE",
"756 23 CURVE SMOOTH",
"799.333 39 OFFCURVE",
"839.667 57.333 OFFCURVE",
"877 78 CURVE",
"905 0 LINE",
"1079 0 LINE",
"1079 1055 LINE",
"842 1055 LINE",
"842 225 LINE",
"820 217 OFFCURVE",
"795.333 209.667 OFFCURVE",
"768 203 CURVE SMOOTH",
"721.333 192.333 OFFCURVE",
"655 182 OFFCURVE",
"575 182 CURVE SMOOTH",
"431.606 182 OFFCURVE",
"403 217.186 OFFCURVE",
"403 336 CURVE SMOOTH",
"403 1055 LINE",
"166 1055 LINE",
"166 309 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01226 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01226 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01215 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01227 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01213 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01213 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01215 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01215 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01222 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 2 values pushed */\0127 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 7 23 7 39 7 55 7 71 7 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1245;
}
);
leftKerningGroup = u;
note = u;
rightKerningGroup = u;
unicode = 0075;
},
{
color = 5;
glyphname = uacute;
lastChange = "2022-05-11 04:47:26 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 288, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1245;
}
);
leftKerningGroup = u;
note = uacute;
rightKerningGroup = u;
unicode = 00FA;
},
{
color = 5;
glyphname = ubreve;
lastChange = "2022-05-11 04:47:26 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = brevecomb;
transform = "{1, 0, 0, 1, 218, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1245;
}
);
leftKerningGroup = u;
note = ubreve;
rightKerningGroup = u;
unicode = 016D;
},
{
glyphname = ucaron;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 189, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1245;
}
);
leftKerningGroup = u;
rightKerningGroup = u;
unicode = 01D4;
},
{
color = 5;
glyphname = ucircumflex;
lastChange = "2022-05-11 04:47:26 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 189, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1245;
}
);
leftKerningGroup = u;
note = ucircumflex;
rightKerningGroup = u;
unicode = 00FB;
},
{
glyphname = udblgrave;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = dblgravecomb;
transform = "{1, 0, 0, 1, 103, -372}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1245;
}
);
leftKerningGroup = u;
rightKerningGroup = u;
unicode = 0215;
},
{
color = 5;
glyphname = udieresis;
lastChange = "2022-05-11 04:47:26 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 211, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1245;
}
);
leftKerningGroup = u;
note = udieresis;
rightKerningGroup = u;
unicode = 00FC;
},
{
glyphname = udieresisacute;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 211, 0}";
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 288, 401}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1245;
}
);
leftKerningGroup = u;
rightKerningGroup = u;
unicode = 01D8;
},
{
glyphname = udieresiscaron;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 211, 0}";
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 189, 401}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1245;
}
);
leftKerningGroup = u;
rightKerningGroup = u;
unicode = 01DA;
},
{
glyphname = udieresisgrave;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 211, 0}";
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 296, 401}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1245;
}
);
leftKerningGroup = u;
rightKerningGroup = u;
unicode = 01DC;
},
{
glyphname = udieresismacron;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 211, 0}";
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 209, 401}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1245;
}
);
leftKerningGroup = u;
rightKerningGroup = u;
unicode = 01D6;
},
{
glyphname = udotbelow;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 425, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1245;
}
);
leftKerningGroup = u;
rightKerningGroup = u;
unicode = 1EE5;
},
{
color = 5;
glyphname = ugrave;
lastChange = "2022-05-11 04:47:26 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 296, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1245;
}
);
leftKerningGroup = u;
note = ugrave;
rightKerningGroup = u;
unicode = 00F9;
},
{
glyphname = uhookabove;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 317, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1245;
}
);
leftKerningGroup = u;
rightKerningGroup = u;
unicode = 1EE7;
},
{
glyphname = uhorn;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = horncomb;
transform = "{1, 0, 0, 1, 447, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1245;
}
);
leftKerningGroup = u;
rightKerningGroup = u;
unicode = 01B0;
},
{
glyphname = uhornacute;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = uhorn;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 288, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1245;
}
);
leftKerningGroup = u;
rightKerningGroup = u;
unicode = 1EE9;
},
{
glyphname = uhorndotbelow;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = uhorn;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 425, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1245;
}
);
leftKerningGroup = u;
rightKerningGroup = u;
unicode = 1EF1;
},
{
glyphname = uhorngrave;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = uhorn;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 296, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1245;
}
);
leftKerningGroup = u;
rightKerningGroup = u;
unicode = 1EEB;
},
{
glyphname = uhornhookabove;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = uhorn;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 317, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1245;
}
);
leftKerningGroup = u;
rightKerningGroup = u;
unicode = 1EED;
},
{
glyphname = uhorntilde;
lastChange = "2022-05-11 06:14:00 +0000";
layers = (
{
components = (
{
name = uhorn;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 154, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1245;
}
);
leftKerningGroup = u;
rightKerningGroup = u;
unicode = 1EEF;
},
{
color = 5;
glyphname = uhungarumlaut;
lastChange = "2022-05-11 04:47:26 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = hungarumlautcomb;
transform = "{1, 0, 0, 1, 103, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1245;
}
);
leftKerningGroup = u;
note = uhungarumlaut;
rightKerningGroup = u;
unicode = 0171;
},
{
glyphname = uinvertedbreve;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = breveinvertedcomb;
transform = "{1, 0, 0, 1, 218, -372}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1245;
}
);
leftKerningGroup = u;
rightKerningGroup = u;
unicode = 0217;
},
{
color = 5;
glyphname = umacron;
lastChange = "2022-05-11 04:47:26 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 209, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1245;
}
);
leftKerningGroup = u;
note = umacron;
rightKerningGroup = u;
unicode = 016B;
},
{
glyphname = umacrondieresis;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 209, 0}";
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 211, 360}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1245;
}
);
leftKerningGroup = u;
rightKerningGroup = u;
unicode = 1E7B;
},
{
glyphname = uogonek;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"166 75.667 OFFCURVE",
"264.333 -31 OFFCURVE",
"471 -31 CURVE SMOOTH",
"580.333 -31 OFFCURVE",
"681.333 -3.667 OFFCURVE",
"756 23 CURVE SMOOTH",
"799.333 39 OFFCURVE",
"839.667 57.333 OFFCURVE",
"877 78 CURVE",
"884 58 LINE",
"804.965 -1.277 OFFCURVE",
"686 -129.092 OFFCURVE",
"686 -279 CURVE SMOOTH",
"686 -423.272 OFFCURVE",
"794.244 -500 OFFCURVE",
"938 -500 CURVE SMOOTH",
"976.667 -500 OFFCURVE",
"1009.333 -495.333 OFFCURVE",
"1036 -490 CURVE SMOOTH",
"1050.667 -487.333 OFFCURVE",
"1064.667 -483.667 OFFCURVE",
"1078 -479 CURVE",
"1078 -311 LINE",
"1071.333 -312.333 OFFCURVE",
"1064.333 -313.333 OFFCURVE",
"1057 -314 CURVE SMOOTH",
"1043.667 -316 OFFCURVE",
"1027.333 -317 OFFCURVE",
"1008 -317 CURVE SMOOTH",
"940 -317 OFFCURVE",
"908 -281 OFFCURVE",
"908 -225 CURVE SMOOTH",
"908 -157 OFFCURVE",
"954.667 -80 OFFCURVE",
"1080 0 CURVE",
"1079 0 LINE",
"1079 1055 LINE",
"842 1055 LINE",
"842 225 LINE",
"820 217 OFFCURVE",
"795.333 209.667 OFFCURVE",
"768 203 CURVE SMOOTH",
"721.333 192.333 OFFCURVE",
"655 182 OFFCURVE",
"575 182 CURVE SMOOTH",
"431.606 182 OFFCURVE",
"403 217.186 OFFCURVE",
"403 336 CURVE SMOOTH",
"403 1055 LINE",
"166 1055 LINE",
"166 309 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\0121 13 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01215 13 12 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\01219 12 15 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01215 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01226 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01226 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01219 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01237 10 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0129 37 25 37 41 37 57 37 73 37 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01215 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01253 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01213 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01213 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01215 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01215 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01229 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01229 19 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01232 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01232 19 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01248 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01248 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 2 values pushed */\0127 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 7 23 7 39 7 55 7 71 7 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01229 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01222 4 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 22 23 22 39 22 55 22 71 22 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1246;
}
);
leftKerningGroup = u;
note = uogonek;
rightKerningGroup = u;
unicode = 0173;
},
{
color = 5;
glyphname = uring;
lastChange = "2022-05-11 04:47:26 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = ringcomb;
transform = "{1, 0, 0, 1, 310, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1245;
}
);
leftKerningGroup = u;
note = uring;
rightKerningGroup = u;
unicode = 016F;
},
{
color = 5;
glyphname = utilde;
lastChange = "2022-05-11 06:14:00 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 154, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1245;
}
);
leftKerningGroup = u;
note = utilde;
rightKerningGroup = u;
unicode = 0169;
},
{
glyphname = utildeacute;
lastChange = "2022-05-11 06:14:00 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 154, 0}";
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 288, 424}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1245;
}
);
leftKerningGroup = u;
rightKerningGroup = u;
unicode = 1E79;
},
{
color = 4;
glyphname = v;
lastChange = "2022-05-11 04:45:39 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{526, 0}";
},
{
name = top;
position = "{526, 1055}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"682 0 LINE",
"1046 1055 LINE",
"788 1055 LINE",
"528 221 LINE",
"524 221 LINE",
"264 1055 LINE",
"6 1055 LINE",
"371 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0124 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0126 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 2 values pushed */\0122 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1052;
}
);
leftKerningGroup = v;
note = v;
rightKerningGroup = v;
unicode = 0076;
},
{
glyphname = vturned;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"370 1055 LINE",
"6 0 LINE",
"264 0 LINE",
"524 834 LINE",
"528 834 LINE",
"788 0 LINE",
"1046 0 LINE",
"681 1055 LINE"
);
}
);
width = 1052;
}
);
leftKerningGroup = vturned;
rightKerningGroup = vturned;
unicode = 028C;
},
{
color = 4;
glyphname = w;
lastChange = "2022-05-11 04:45:39 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{777, 0}";
},
{
name = top;
position = "{777, 1055}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"614 0 LINE",
"772 829 LINE",
"788 829 LINE",
"964 0 LINE",
"1276 0 LINE",
"1542 1055 LINE",
"1335 1055 LINE",
"1134 211 LINE",
"1120 211 LINE",
"954 1055 LINE",
"629 1055 LINE",
"463 211 LINE",
"446 211 LINE",
"250 1055 LINE",
"12 1055 LINE",
"287 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0124 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0128 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0128 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01210 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01214 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01214 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 2 values pushed */\0122 5 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0126 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0127 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0124 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01212 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1554;
}
);
leftKerningGroup = w;
note = w;
rightKerningGroup = w;
unicode = 0077;
},
{
color = 5;
glyphname = wacute;
lastChange = "2022-05-11 04:47:26 +0000";
layers = (
{
components = (
{
name = w;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 442, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1554;
}
);
leftKerningGroup = w;
note = wacute;
rightKerningGroup = w;
unicode = 1E83;
},
{
color = 5;
glyphname = wcircumflex;
lastChange = "2022-05-11 04:47:26 +0000";
layers = (
{
components = (
{
name = w;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 343, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1554;
}
);
leftKerningGroup = w;
note = wcircumflex;
rightKerningGroup = w;
unicode = 0175;
},
{
color = 5;
glyphname = wdieresis;
lastChange = "2022-05-11 04:47:26 +0000";
layers = (
{
components = (
{
name = w;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 365, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1554;
}
);
leftKerningGroup = w;
note = wdieresis;
rightKerningGroup = w;
unicode = 1E85;
},
{
color = 5;
glyphname = wgrave;
lastChange = "2022-05-11 04:47:26 +0000";
layers = (
{
components = (
{
name = w;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 450, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1554;
}
);
leftKerningGroup = w;
note = wgrave;
rightKerningGroup = w;
unicode = 1E81;
},
{
color = 4;
glyphname = x;
lastChange = "2022-05-11 04:45:39 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{526, 0}";
},
{
name = top;
position = "{526, 1055}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"262 0 LINE",
"520 354 LINE",
"765 0 LINE",
"1048 0 LINE",
"673 542 LINE",
"1028 1055 LINE",
"770 1055 LINE",
"546 726 LINE",
"319 1055 LINE",
"36 1055 LINE",
"393 537 LINE",
"4 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0121 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0124 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0127 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0127 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01210 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 3 values pushed */\0123 7 1 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 3 values pushed */\0129 7 1 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1052;
}
);
leftKerningGroup = x;
note = x;
rightKerningGroup = x;
unicode = 0078;
},
{
glyphname = xdieresis;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = x;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 114, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1052;
}
);
leftKerningGroup = x;
rightKerningGroup = x;
unicode = 1E8D;
},
{
color = 4;
glyphname = y;
lastChange = "2022-05-11 04:45:39 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{545, 0}";
},
{
name = top;
position = "{545, 1055}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"127 -465 LINE",
"143.667 -471.667 OFFCURVE",
"163 -477.667 OFFCURVE",
"185 -483 CURVE SMOOTH",
"223.667 -492.333 OFFCURVE",
"278.667 -500 OFFCURVE",
"352 -500 CURVE SMOOTH",
"416 -500 OFFCURVE",
"469.5 -481 OFFCURVE",
"515.5 -437 CURVE SMOOTH",
"561.5 -393 OFFCURVE",
"599.667 -323 OFFCURVE",
"637 -219 CURVE SMOOTH",
"1089 1055 LINE",
"827 1055 LINE",
"555 209 LINE",
"547 209 LINE",
"276 1055 LINE",
"12 1055 LINE",
"379 0 LINE",
"481 0 LINE",
"416 -178 LINE SMOOTH",
"381.892 -269.829 OFFCURVE",
"342.868 -307 OFFCURVE",
"252 -307 CURVE SMOOTH",
"210.667 -307 OFFCURVE",
"179.667 -306 OFFCURVE",
"159 -304 CURVE SMOOTH",
"147 -303.333 OFFCURVE",
"136.333 -302.333 OFFCURVE",
"127 -301 CURVE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01212 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01216 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01216 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01210 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01223 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01223 19 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 2 values pushed */\0122 8 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 2 23 2 39 2 55 2 71 2 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1089;
}
);
leftKerningGroup = y;
note = y;
rightKerningGroup = y;
unicode = 0079;
},
{
color = 5;
glyphname = yacute;
lastChange = "2022-05-11 04:47:26 +0000";
layers = (
{
components = (
{
name = y;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 210, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1089;
}
);
leftKerningGroup = y;
note = yacute;
rightKerningGroup = y;
unicode = 00FD;
},
{
color = 5;
glyphname = ycircumflex;
lastChange = "2022-05-11 04:47:26 +0000";
layers = (
{
components = (
{
name = y;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 111, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1089;
}
);
leftKerningGroup = y;
note = ycircumflex;
rightKerningGroup = y;
unicode = 0177;
},
{
color = 5;
glyphname = ydieresis;
lastChange = "2022-05-11 04:47:26 +0000";
layers = (
{
components = (
{
name = y;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 133, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1089;
}
);
leftKerningGroup = y;
note = ydieresis;
rightKerningGroup = y;
unicode = 00FF;
},
{
glyphname = ydotaccent;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = y;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 347, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1089;
}
);
leftKerningGroup = y;
rightKerningGroup = y;
unicode = 1E8F;
},
{
glyphname = ydotbelow;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = y;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 347, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1089;
}
);
leftKerningGroup = y;
rightKerningGroup = y;
unicode = 1EF5;
},
{
color = 5;
glyphname = ygrave;
lastChange = "2022-05-11 04:47:26 +0000";
layers = (
{
components = (
{
name = y;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 218, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1089;
}
);
leftKerningGroup = y;
note = ygrave;
rightKerningGroup = y;
unicode = 1EF3;
},
{
glyphname = yhookabove;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = y;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 239, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1089;
}
);
leftKerningGroup = y;
rightKerningGroup = y;
unicode = 1EF7;
},
{
glyphname = ymacron;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = y;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 131, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1089;
}
);
leftKerningGroup = y;
rightKerningGroup = y;
unicode = 0233;
},
{
glyphname = ytilde;
lastChange = "2022-05-11 06:14:00 +0000";
layers = (
{
components = (
{
name = y;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 76, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1089;
}
);
leftKerningGroup = y;
rightKerningGroup = y;
unicode = 1EF9;
},
{
color = 4;
glyphname = z;
lastChange = "2022-05-11 04:45:39 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{546, 0}";
},
{
name = center;
position = "{546, 528}";
},
{
name = top;
position = "{546, 1055}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"991 0 LINE",
"991 209 LINE",
"442 209 LINE",
"442 211 LINE",
"979 905 LINE",
"979 1055 LINE",
"137 1055 LINE",
"137 852 LINE",
"651 852 LINE",
"651 850 LINE",
"117 158 LINE",
"117 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */\0129 0 3 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\0122 0 9 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\0129 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0129 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01213 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0124 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01210 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0124 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0122 5 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0128 5 \012MIRP[10100]	/* MoveIndirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1092;
}
);
leftKerningGroup = z;
note = z;
rightKerningGroup = z;
unicode = 007A;
},
{
color = 5;
glyphname = zacute;
lastChange = "2022-05-11 04:47:26 +0000";
layers = (
{
components = (
{
name = z;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 211, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1092;
}
);
leftKerningGroup = z;
note = zacute;
rightKerningGroup = z;
unicode = 017A;
},
{
color = 5;
glyphname = zcaron;
lastChange = "2022-05-11 04:47:26 +0000";
layers = (
{
components = (
{
name = z;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 112, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1092;
}
);
leftKerningGroup = z;
note = zcaron;
rightKerningGroup = z;
unicode = 017E;
},
{
color = 5;
glyphname = zdotaccent;
lastChange = "2022-05-11 04:47:26 +0000";
layers = (
{
components = (
{
name = z;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 348, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1092;
}
);
leftKerningGroup = z;
note = zdotaccent;
rightKerningGroup = z;
unicode = 017C;
},
{
glyphname = zdotbelow;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = z;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 348, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1092;
}
);
leftKerningGroup = z;
rightKerningGroup = z;
unicode = 1E93;
},
{
glyphname = f_f;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
anchors = (
{
name = caret;
position = "{670, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"475 0 LINE",
"475 860 LINE",
"858 860 LINE",
"858 0 LINE",
"1097 0 LINE",
"1097 860 LINE",
"1362 860 LINE",
"1362 1055 LINE",
"1097 1055 LINE",
"1097 1231 LINE SMOOTH",
"1097 1326.087 OFFCURVE",
"1126.221 1362 OFFCURVE",
"1282 1362 CURVE SMOOTH",
"1319.333 1362 OFFCURVE",
"1377 1357.333 OFFCURVE",
"1425 1352 CURVE SMOOTH",
"1453 1349.333 OFFCURVE",
"1481.667 1346.333 OFFCURVE",
"1511 1343 CURVE",
"1511 1516 LINE",
"1484.333 1526 OFFCURVE",
"1455 1534.667 OFFCURVE",
"1423 1542 CURVE SMOOTH",
"1367 1555.333 OFFCURVE",
"1290 1569 OFFCURVE",
"1198 1569 CURVE SMOOTH",
"1086.322 1569 OFFCURVE",
"981.852 1552.608 OFFCURVE",
"920 1480 CURVE",
"868 1492 OFFCURVE",
"777 1507 OFFCURVE",
"653 1507 CURVE SMOOTH",
"537 1507 OFFCURVE",
"432.667 1488.667 OFFCURVE",
"358 1438 CURVE SMOOTH",
"283.333 1387.333 OFFCURVE",
"237 1304.667 OFFCURVE",
"237 1178 CURVE SMOOTH",
"237 1055 LINE",
"90 1055 LINE",
"90 860 LINE",
"237 860 LINE",
"237 0 LINE"
);
},
{
closed = 1;
nodes = (
"475 1141 LINE SMOOTH",
"475 1244.322 OFFCURVE",
"541.324 1292 OFFCURVE",
"702 1292 CURVE SMOOTH",
"759.333 1292 OFFCURVE",
"812.667 1288.667 OFFCURVE",
"858 1286 CURVE",
"858 1272 LINE",
"858 1055 LINE",
"475 1055 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01256 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01239 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01256 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01239 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01238 12 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01233 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01241 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01239 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01244 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01239 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01246 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01241 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01254 \012MDRP[10000]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0122 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01234 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01234 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01244 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01244 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01238 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01238 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01242 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01242 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\01217 5 28 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\0129 3 49 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0122 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0120 8 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01228 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01225 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01236 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01237 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01240 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01241 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01249 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01246 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01246 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1477;
}
);
leftKerningGroup = f;
leftMetricsKey = f;
note = ff;
rightKerningGroup = f;
rightMetricsKey = f;
},
{
glyphname = fi;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
anchors = (
{
name = caret;
position = "{670, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"503 0 LINE",
"503 860 LINE",
"915 860 LINE",
"915 0 LINE",
"1153 0 LINE",
"1153 1055 LINE",
"503 1055 LINE",
"503 1215 LINE SMOOTH",
"503 1344.62 OFFCURVE",
"575.313 1376 OFFCURVE",
"733 1376 CURVE SMOOTH",
"798.333 1376 OFFCURVE",
"876 1371 OFFCURVE",
"936 1367 CURVE SMOOTH",
"971.333 1364.333 OFFCURVE",
"1006 1361.333 OFFCURVE",
"1040 1358 CURVE",
"1040 1546 LINE",
"1007.333 1554 OFFCURVE",
"972.333 1561.333 OFFCURVE",
"935 1568 CURVE SMOOTH",
"871 1578.667 OFFCURVE",
"785.333 1591 OFFCURVE",
"696 1591 CURVE SMOOTH",
"565.333 1591 OFFCURVE",
"457.833 1574.167 OFFCURVE",
"382.5 1521.5 CURVE SMOOTH",
"307.167 1468.833 OFFCURVE",
"264 1379 OFFCURVE",
"264 1235 CURVE SMOOTH",
"264 1055 LINE",
"90 1055 LINE",
"90 860 LINE",
"264 860 LINE",
"264 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01234 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01229 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01234 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01231 12 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01225 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01229 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01228 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01235 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0122 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01226 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01226 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01228 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01228 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01232 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01232 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\0129 3 20 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0122 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0120 8 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01220 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01217 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01217 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01230 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01231 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1319;
}
);
leftKerningGroup = f;
leftMetricsKey = f;
note = fi;
rightKerningGroup = i;
rightMetricsKey = l;
unicode = FB01;
},
{
glyphname = fl;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
anchors = (
{
name = caret;
position = "{670, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"475 0 LINE",
"475 858 LINE",
"899 858 LINE",
"899 0 LINE",
"1136 0 LINE",
"1136 1516 LINE",
"1098.667 1528.667 OFFCURVE",
"1057.667 1540.333 OFFCURVE",
"1013 1551 CURVE SMOOTH",
"937 1569.667 OFFCURVE",
"832 1587 OFFCURVE",
"712 1587 CURVE SMOOTH",
"574.667 1587 OFFCURVE",
"456.167 1570.667 OFFCURVE",
"371.5 1524 CURVE SMOOTH",
"286.833 1477.333 OFFCURVE",
"237 1397.333 OFFCURVE",
"237 1272 CURVE SMOOTH",
"237 1055 LINE",
"90 1055 LINE",
"90 858 LINE",
"237 858 LINE",
"237 0 LINE"
);
},
{
closed = 1;
nodes = (
"475 1231 LINE SMOOTH",
"475 1345.507 OFFCURVE",
"549.997 1376 OFFCURVE",
"704 1376 CURVE SMOOTH",
"770.667 1376 OFFCURVE",
"843 1370.333 OFFCURVE",
"899 1365 CURVE",
"899 1055 LINE",
"475 1055 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01232 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01216 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01232 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01216 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01215 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01218 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01216 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01221 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01218 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01230 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01215 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01233 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0122 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01221 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01215 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01215 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01219 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\0129 5 25 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0122 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0120 8 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01217 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01218 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01225 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01222 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1302;
}
);
leftKerningGroup = f;
leftMetricsKey = f;
note = fl;
rightKerningGroup = l;
rightMetricsKey = l;
unicode = FB02;
},
{
glyphname = ordfeminine;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"404 639 OFFCURVE",
"463.333 659.333 OFFCURVE",
"506 682 CURVE SMOOTH",
"530 694 OFFCURVE",
"551.333 708.333 OFFCURVE",
"570 725 CURVE",
"586 659 LINE",
"731 659 LINE",
"731 1036 LINE SMOOTH",
"731 1179.021 OFFCURVE",
"720.975 1265.498 OFFCURVE",
"674 1325 CURVE SMOOTH",
"624.667 1386.333 OFFCURVE",
"532 1403 OFFCURVE",
"408 1403 CURVE SMOOTH",
"332 1403 OFFCURVE",
"263.667 1390.667 OFFCURVE",
"213 1380 CURVE SMOOTH",
"183 1373.333 OFFCURVE",
"155.667 1366 OFFCURVE",
"131 1358 CURVE",
"131 1237 LINE",
"154.333 1239.667 OFFCURVE",
"178.667 1242.333 OFFCURVE",
"204 1245 CURVE SMOOTH",
"246.667 1249 OFFCURVE",
"302.333 1253 OFFCURVE",
"357 1253 CURVE SMOOTH",
"430.333 1253 OFFCURVE",
"483.333 1251.667 OFFCURVE",
"514 1225 CURVE SMOOTH",
"535.333 1206.333 OFFCURVE",
"547 1177.667 OFFCURVE",
"547 1135 CURVE SMOOTH",
"547 1049 LINE",
"527 1055.667 OFFCURVE",
"505 1062 OFFCURVE",
"481 1068 CURVE SMOOTH",
"439.667 1077.333 OFFCURVE",
"384 1087 OFFCURVE",
"324 1087 CURVE SMOOTH",
"172 1087 OFFCURVE",
"95 1020 OFFCURVE",
"95 860 CURVE SMOOTH",
"95 709.333 OFFCURVE",
"185.333 639 OFFCURVE",
"328 639 CURVE"
);
},
{
closed = 1;
nodes = (
"300.196 788 OFFCURVE",
"279 808.672 OFFCURVE",
"279 868 CURVE SMOOTH",
"279 931.458 OFFCURVE",
"305.198 946 OFFCURVE",
"389 946 CURVE SMOOTH",
"429 946 OFFCURVE",
"467.333 942.667 OFFCURVE",
"498 940 CURVE SMOOTH",
"515.333 938 OFFCURVE",
"531.667 936 OFFCURVE",
"547 934 CURVE",
"547 817 LINE",
"530.333 811 OFFCURVE",
"512.667 806 OFFCURVE",
"494 802 CURVE SMOOTH",
"462 795.333 OFFCURVE",
"417.667 788 OFFCURVE",
"371 788 CURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01266 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01211 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01266 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01211 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01237 14 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 3 values pushed */\01240 11 37 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01211 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01250 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0123 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01261 14 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0126 61 22 61 38 61 54 61 70 61 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01237 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01267 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0126 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\01245 7 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01229 7 18 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01253 7 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0128 53 24 53 40 53 56 53 72 53 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01211 6 53 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01218 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01221 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 3 values pushed */\01240 0 45 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01253 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01256 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 804;
}
);
leftKerningGroup = ordfeminine;
note = ordfeminine;
rightKerningGroup = ordfeminine;
unicode = 00AA;
},
{
glyphname = ordmasculine;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"533.667 659 OFFCURVE",
"623 681.333 OFFCURVE",
"683 740 CURVE SMOOTH",
"743 798.667 OFFCURVE",
"775 893.333 OFFCURVE",
"775 1040 CURVE SMOOTH",
"775 1186.667 OFFCURVE",
"743 1282.167 OFFCURVE",
"683 1341.5 CURVE SMOOTH",
"623 1400.833 OFFCURVE",
"533.667 1423 OFFCURVE",
"419 1423 CURVE SMOOTH",
"304.333 1423 OFFCURVE",
"214.333 1400.833 OFFCURVE",
"153 1341.5 CURVE SMOOTH",
"91.667 1282.167 OFFCURVE",
"60 1186.667 OFFCURVE",
"60 1040 CURVE SMOOTH",
"60 893.333 OFFCURVE",
"91.667 798.667 OFFCURVE",
"153 740 CURVE SMOOTH",
"214.333 681.333 OFFCURVE",
"304.333 659 OFFCURVE",
"419 659 CURVE"
);
},
{
closed = 1;
nodes = (
"288.424 815 OFFCURVE",
"249 877.92 OFFCURVE",
"249 1042 CURVE SMOOTH",
"249 1204.046 OFFCURVE",
"289.29 1270 OFFCURVE",
"419 1270 CURVE SMOOTH",
"548.71 1270 OFFCURVE",
"589 1204.046 OFFCURVE",
"589 1042 CURVE SMOOTH",
"589 877.92 OFFCURVE",
"549.576 815 OFFCURVE",
"419 815 CURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01240 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01240 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHB[ ]	/* 11 values pushed */\0129 25 25 25 41 25 57 25 73 25 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01225 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01215 14 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0125 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01235 14 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0126 35 22 35 38 35 54 35 70 35 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01215 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01241 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 4 values pushed */\01220 7 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01210 7 30 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 835;
}
);
leftKerningGroup = ordmasculine;
note = ordmasculine;
rightKerningGroup = ordmasculine;
unicode = 00BA;
},
{
glyphname = Delta;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"1333 0 LINE",
"1333 151 LINE",
"840 1393 LINE",
"676 1393 LINE",
"182 151 LINE",
"182 0 LINE"
);
},
{
closed = 1;
nodes = (
"749 984 LINE",
"758 1014 LINE",
"766 984 LINE",
"1072 226 LINE",
"443 226 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */\0123 0 3 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\0126 0 3 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 3 values pushed */\0128 0 3 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 3 values pushed */\01210 0 3 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\0123 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01212 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0124 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 2 values pushed */\0126 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1537;
}
);
leftKerningGroup = A;
note = Delta;
rightKerningGroup = A;
unicode = 0394;
},
{
glyphname = Omega;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"739 0 LINE",
"749 -3 LINE",
"749 138 LINE",
"627.667 238 OFFCURVE",
"545.167 332 OFFCURVE",
"492.5 428 CURVE SMOOTH",
"439.833 524 OFFCURVE",
"417 620.333 OFFCURVE",
"417 727 CURVE SMOOTH",
"417 855 OFFCURVE",
"437.5 968.5 OFFCURVE",
"499.5 1050.5 CURVE SMOOTH",
"561.5 1132.5 OFFCURVE",
"666 1182 OFFCURVE",
"834 1182 CURVE SMOOTH",
"1003.333 1182 OFFCURVE",
"1110.667 1132.5 OFFCURVE",
"1176 1050.5 CURVE SMOOTH",
"1241.333 968.5 OFFCURVE",
"1265 855 OFFCURVE",
"1265 727 CURVE SMOOTH",
"1265 620.333 OFFCURVE",
"1243.167 524 OFFCURVE",
"1190.5 428 CURVE SMOOTH",
"1137.833 332 OFFCURVE",
"1055.333 238 OFFCURVE",
"934 138 CURVE",
"934 -3 LINE",
"943 0 LINE",
"1522 0 LINE",
"1522 224 LINE",
"1283 224 LINE",
"1343 288 OFFCURVE",
"1393.833 363.833 OFFCURVE",
"1430.5 448.5 CURVE SMOOTH",
"1467.167 533.167 OFFCURVE",
"1489 626 OFFCURVE",
"1489 726 CURVE SMOOTH",
"1489 942 OFFCURVE",
"1430.833 1108.833 OFFCURVE",
"1319.5 1221.5 CURVE SMOOTH",
"1208.167 1334.167 OFFCURVE",
"1044.667 1394 OFFCURVE",
"834 1394 CURVE SMOOTH",
"623.333 1394 OFFCURVE",
"463.833 1334.167 OFFCURVE",
"356.5 1221.5 CURVE SMOOTH",
"249.167 1108.833 OFFCURVE",
"194 942 OFFCURVE",
"194 726 CURVE SMOOTH",
"194 626 OFFCURVE",
"215.833 533.167 OFFCURVE",
"252.5 448.5 CURVE SMOOTH",
"289.167 363.833 OFFCURVE",
"340 288 OFFCURVE",
"400 224 CURVE",
"160 224 LINE",
"160 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01250 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01231 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01250 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0126 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01241 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 5 values pushed */\0126 41 22 41 2 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 7 values pushed */\01238 41 54 41 70 41 3 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\0121 6 41 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHB[ ]	/* 11 values pushed */\0129 31 25 31 41 31 57 31 73 31 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01231 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01216 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 3 values pushed */\01221 31 16 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 3 values pushed */\01225 6 16 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 3 values pushed */\01247 6 16 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01251 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01223 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01223 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01225 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01247 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01247 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01249 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01249 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\01211 5 36 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01249 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0120 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01221 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01222 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1706;
}
);
leftKerningGroup = Omega;
note = Omega;
rightKerningGroup = Omega;
unicode = 03A9;
},
{
glyphname = pi;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"430 1 LINE",
"430 822 LINE",
"785 822 LINE",
"785 325 LINE SMOOTH",
"785 227.667 OFFCURVE",
"820 145.5 OFFCURVE",
"880 87.5 CURVE SMOOTH",
"940 29.5 OFFCURVE",
"1023.333 -4.667 OFFCURVE",
"1122 -6 CURVE SMOOTH",
"1153.333 -6 OFFCURVE",
"1183 -4 OFFCURVE",
"1211 0 CURVE",
"1211 156 LINE",
"1159 162.667 OFFCURVE",
"1110.167 167.333 OFFCURVE",
"1073.5 198 CURVE SMOOTH",
"1036.833 228.667 OFFCURVE",
"1012.667 285.333 OFFCURVE",
"1014 396 CURVE SMOOTH",
"1014 822 LINE",
"1211 822 LINE",
"1211 1033 LINE",
"37 1033 LINE",
"37 822 LINE",
"212 822 LINE",
"212 1 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01224 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01224 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01219 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0126 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01221 10 \012MIRP[10100]	/* MoveIndirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01212 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01214 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01214 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01222 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\0122 5 1 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01220 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1365;
}
);
leftKerningGroup = pi;
note = pi;
rightKerningGroup = pi;
unicode = 03C0;
},
{
glyphname = zero;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"813.333 -31 OFFCURVE",
"914.333 -11.667 OFFCURVE",
"993 35 CURVE SMOOTH",
"1032.333 58.333 OFFCURVE",
"1066.333 89.167 OFFCURVE",
"1095 127.5 CURVE SMOOTH",
"1152.333 204.167 OFFCURVE",
"1188.5 315.167 OFFCURVE",
"1206.5 466.5 CURVE SMOOTH",
"1215.5 542.167 OFFCURVE",
"1220 629 OFFCURVE",
"1220 727 CURVE SMOOTH",
"1220 1021.667 OFFCURVE",
"1180.5 1204.833 OFFCURVE",
"1094.5 1313.5 CURVE SMOOTH",
"1008.5 1422.167 OFFCURVE",
"874.667 1458 OFFCURVE",
"688 1458 CURVE SMOOTH",
"500 1458 OFFCURVE",
"367.667 1422.167 OFFCURVE",
"281 1313.5 CURVE SMOOTH",
"194.333 1204.833 OFFCURVE",
"155 1021.667 OFFCURVE",
"155 727 CURVE SMOOTH",
"155 531 OFFCURVE",
"172.833 381 OFFCURVE",
"209.5 269 CURVE SMOOTH",
"227.833 213 OFFCURVE",
"251.333 165.833 OFFCURVE",
"280 127.5 CURVE SMOOTH",
"337.333 50.833 OFFCURVE",
"415.5 5.167 OFFCURVE",
"517.5 -15.5 CURVE SMOOTH",
"568.5 -25.833 OFFCURVE",
"625.333 -31 OFFCURVE",
"688 -31 CURVE"
);
},
{
closed = 1;
nodes = (
"574.667 190 OFFCURVE",
"506.167 232 OFFCURVE",
"465.5 320 CURVE SMOOTH",
"424.833 408 OFFCURVE",
"413 543 OFFCURVE",
"413 727 CURVE SMOOTH",
"413 912.333 OFFCURVE",
"424.833 1039 OFFCURVE",
"465.5 1119 CURVE SMOOTH",
"506.167 1199 OFFCURVE",
"574.667 1233 OFFCURVE",
"688 1233 CURVE SMOOTH",
"801.333 1233 OFFCURVE",
"870.833 1199.167 OFFCURVE",
"911.5 1118.5 CURVE SMOOTH",
"952.167 1037.833 OFFCURVE",
"964 911 OFFCURVE",
"964 727 CURVE SMOOTH",
"964 543 OFFCURVE",
"952.167 409 OFFCURVE",
"911.5 321 CURVE SMOOTH",
"870.833 233 OFFCURVE",
"801.333 190 OFFCURVE",
"688 190 CURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01244 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01229 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01244 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0127 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0127 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHB[ ]	/* 11 values pushed */\0129 29 25 29 41 29 57 29 73 29 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01229 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01217 11 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0127 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01239 11 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0126 39 22 39 38 39 54 39 70 39 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01217 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01245 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01212 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 2 values pushed */\01224 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 24 23 24 39 24 55 24 71 24 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01234 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0128 34 24 34 40 34 56 34 72 34 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1375;
}
);
leftKerningGroup = zero;
note = zero;
rightKerningGroup = zero;
unicode = 0030;
},
{
glyphname = one;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"587 0 LINE",
"587 1427 LINE",
"153 1427 LINE",
"86 1204 LINE",
"348 1204 LINE",
"348 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\0123 12 0 4 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0122 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0124 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0122 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0120 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 816;
}
);
leftKerningGroup = one;
note = one;
rightKerningGroup = one;
unicode = 0031;
},
{
glyphname = two;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"987 0 LINE",
"987 223 LINE",
"459 223 LINE",
"459 225 LINE",
"659 410.333 OFFCURVE",
"791.5 567.167 OFFCURVE",
"873.5 702.5 CURVE SMOOTH",
"955.5 837.833 OFFCURVE",
"987 952.333 OFFCURVE",
"987 1055 CURVE SMOOTH",
"987 1188.333 OFFCURVE",
"958.5 1290.333 OFFCURVE",
"888.5 1357 CURVE SMOOTH",
"818.5 1423.667 OFFCURVE",
"707.667 1458 OFFCURVE",
"545 1458 CURVE SMOOTH",
"427.667 1458 OFFCURVE",
"329.667 1439.667 OFFCURVE",
"259 1421 CURVE SMOOTH",
"217.667 1409.667 OFFCURVE",
"180.667 1397.333 OFFCURVE",
"148 1384 CURVE",
"148 1200 LINE",
"180.667 1206 OFFCURVE",
"214.667 1211.333 OFFCURVE",
"250 1216 CURVE SMOOTH",
"310 1224 OFFCURVE",
"387 1233 OFFCURVE",
"463 1233 CURVE SMOOTH",
"571 1233 OFFCURVE",
"640.667 1216.167 OFFCURVE",
"682 1183.5 CURVE SMOOTH",
"723.333 1150.833 OFFCURVE",
"738 1101.333 OFFCURVE",
"738 1036 CURVE SMOOTH",
"738 942.667 OFFCURVE",
"695 839.833 OFFCURVE",
"595 700.5 CURVE SMOOTH",
"495 561.167 OFFCURVE",
"337 384.333 OFFCURVE",
"105 143 CURVE",
"105 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01226 11 5 4 \012CALL[ ]	/* CallFunction */\012NPUSHB[ ]	/* 11 values pushed */\0129 5 25 5 41 5 57 5 73 5 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01226 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01233 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01226 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01237 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01221 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01234 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01234 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01221 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01210 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0128 10 24 10 40 10 56 10 72 10 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01234 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01232 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1151;
}
);
leftKerningGroup = two;
note = two;
rightKerningGroup = two;
unicode = 0032;
},
{
glyphname = three;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"168 20.333 OFFCURVE",
"208.333 9.333 OFFCURVE",
"251 0 CURVE SMOOTH",
"324.333 -17.333 OFFCURVE",
"423 -33 OFFCURVE",
"523 -33 CURVE SMOOTH",
"664.333 -33 OFFCURVE",
"779.833 -7.667 OFFCURVE",
"860.5 59 CURVE SMOOTH",
"941.167 125.667 OFFCURVE",
"986 233.667 OFFCURVE",
"986 399 CURVE SMOOTH",
"986 503 OFFCURVE",
"962.333 576.167 OFFCURVE",
"929 627.5 CURVE SMOOTH",
"912.333 653.167 OFFCURVE",
"893.5 673.667 OFFCURVE",
"872.5 689 CURVE SMOOTH",
"812.713 732.654 OFFCURVE",
"753.647 742.484 OFFCURVE",
"704 748 CURVE",
"704 750 LINE",
"752.96 752.225 OFFCURVE",
"811.644 772.836 OFFCURVE",
"859.5 816 CURVE SMOOTH",
"893.5 846.667 OFFCURVE",
"921 893 OFFCURVE",
"937 957 CURVE SMOOTH",
"945 989 OFFCURVE",
"949 1026.333 OFFCURVE",
"949 1069 CURVE SMOOTH",
"949 1330.333 OFFCURVE",
"818.667 1458 OFFCURVE",
"532 1458 CURVE SMOOTH",
"424 1458 OFFCURVE",
"329 1439.667 OFFCURVE",
"257 1421 CURVE SMOOTH",
"215.667 1409.667 OFFCURVE",
"177.333 1397.333 OFFCURVE",
"142 1384 CURVE",
"142 1212 LINE",
"174 1217.333 OFFCURVE",
"206.333 1222 OFFCURVE",
"239 1226 CURVE SMOOTH",
"295 1232.667 OFFCURVE",
"364.333 1241 OFFCURVE",
"423 1241 CURVE SMOOTH",
"525.667 1241 OFFCURVE",
"595 1228.167 OFFCURVE",
"639 1199.5 CURVE SMOOTH",
"683 1170.833 OFFCURVE",
"700.667 1125 OFFCURVE",
"702 1057 CURVE SMOOTH",
"703.333 974.333 OFFCURVE",
"690.833 919.5 OFFCURVE",
"635.5 885.5 CURVE SMOOTH",
"580.167 851.5 OFFCURVE",
"481.333 838 OFFCURVE",
"312 838 CURVE",
"310 625 LINE",
"475.333 621 OFFCURVE",
"582.667 616.167 OFFCURVE",
"648 587.5 CURVE SMOOTH",
"713.333 558.833 OFFCURVE",
"737.333 503.667 OFFCURVE",
"736 397 CURVE SMOOTH",
"734.667 307.667 OFFCURVE",
"706 256.333 OFFCURVE",
"654 227 CURVE SMOOTH",
"602 197.667 OFFCURVE",
"526.333 190 OFFCURVE",
"433 190 CURVE SMOOTH",
"366.333 190 OFFCURVE",
"292 194.333 OFFCURVE",
"232 201 CURVE SMOOTH",
"197.333 204.333 OFFCURVE",
"163.333 208.333 OFFCURVE",
"130 213 CURVE",
"130 33 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01255 11 10 4 \012CALL[ ]	/* CallFunction */\012NPUSHB[ ]	/* 11 values pushed */\0129 10 25 10 41 10 57 10 73 10 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01240 10 55 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01240 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01221 12 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0129 21 25 21 41 21 57 21 73 21 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01248 40 21 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01255 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01267 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01237 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01237 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01260 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01260 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\01216 3 15 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01260 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0122 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 2 23 2 39 2 55 2 71 2 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01237 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01226 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0128 26 24 26 40 26 56 26 72 26 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01248 15 16 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1135;
}
);
leftKerningGroup = three;
note = three;
rightKerningGroup = three;
unicode = 0033;
},
{
glyphname = four;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"733 292 LINE",
"733 0 LINE",
"971 0 LINE",
"971 292 LINE",
"1124 292 LINE",
"1124 505 LINE",
"971 505 LINE",
"971 1427 LINE",
"612 1427 LINE",
"65 450 LINE",
"65 292 LINE"
);
},
{
closed = 1;
nodes = (
"729 1237 LINE",
"735 1237 LINE",
"733 505 LINE",
"330 505 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\0127 13 8 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0127 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0122 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0128 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01211 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0127 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01216 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0121 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0127 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0127 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\0124 3 5 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0125 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0129 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0124 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01211 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01212 8 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 3 values pushed */\01214 7 1 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1224;
}
);
leftKerningGroup = four;
note = four;
rightKerningGroup = four;
unicode = 0034;
},
{
glyphname = five;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"175.667 22.333 OFFCURVE",
"210.333 11.333 OFFCURVE",
"249 2 CURVE SMOOTH",
"315.667 -15.333 OFFCURVE",
"407.333 -31 OFFCURVE",
"518 -31 CURVE SMOOTH",
"654 -31 OFFCURVE",
"773.833 -8.167 OFFCURVE",
"858.5 60.5 CURVE SMOOTH",
"943.167 129.167 OFFCURVE",
"995 242.667 OFFCURVE",
"995 424 CURVE SMOOTH",
"995 612 OFFCURVE",
"961.833 730.333 OFFCURVE",
"894.5 801 CURVE SMOOTH",
"827.167 871.667 OFFCURVE",
"727 895 OFFCURVE",
"591 895 CURVE SMOOTH",
"548.333 895 OFFCURVE",
"506.667 891.667 OFFCURVE",
"476 889 CURVE SMOOTH",
"458 887 OFFCURVE",
"441 885 OFFCURVE",
"425 883 CURVE",
"425 1204 LINE",
"948 1204 LINE",
"948 1430 LINE",
"188 1430 LINE",
"188 649 LINE",
"219.333 654.333 OFFCURVE",
"253.333 659 OFFCURVE",
"290 663 CURVE SMOOTH",
"352.667 669.667 OFFCURVE",
"435.333 678 OFFCURVE",
"522 678 CURVE SMOOTH",
"701.38 678 OFFCURVE",
"749 619.974 OFFCURVE",
"749 442 CURVE SMOOTH",
"749 352.667 OFFCURVE",
"727.333 290.167 OFFCURVE",
"678 249.5 CURVE SMOOTH",
"628.667 208.833 OFFCURVE",
"552 190 OFFCURVE",
"440 190 CURVE SMOOTH",
"372 190 OFFCURVE",
"299.333 194.667 OFFCURVE",
"242 200 CURVE SMOOTH",
"208.667 202.667 OFFCURVE",
"176.333 206.333 OFFCURVE",
"145 211 CURVE",
"145 35 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01246 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHB[ ]	/* 11 values pushed */\0129 10 25 10 41 10 57 10 73 10 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01246 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01220 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01220 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01225 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01235 12 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01247 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01221 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01240 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01240 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\01230 3 15 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01240 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0122 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 2 23 2 39 2 55 2 71 2 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01221 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01223 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01230 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01225 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01230 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01227 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01227 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1129;
}
);
leftKerningGroup = five;
note = five;
rightKerningGroup = five;
unicode = 0035;
},
{
glyphname = six;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"155 245.667 OFFCURVE",
"199.167 138.333 OFFCURVE",
"278.5 69 CURVE SMOOTH",
"357.833 -0.333 OFFCURVE",
"471.333 -31 OFFCURVE",
"610 -31 CURVE SMOOTH",
"760.667 -31 OFFCURVE",
"878.833 1.167 OFFCURVE",
"959.5 76.5 CURVE SMOOTH",
"1040.167 151.833 OFFCURVE",
"1083 271.333 OFFCURVE",
"1083 446 CURVE SMOOTH",
"1083 624.667 OFFCURVE",
"1048 741.833 OFFCURVE",
"988 814.5 CURVE SMOOTH",
"928 887.167 OFFCURVE",
"841.667 915 OFFCURVE",
"739 915 CURVE SMOOTH",
"636.463 915 OFFCURVE",
"497.381 886.918 OFFCURVE",
"393 836 CURVE",
"393 969 LINE SMOOTH",
"393 1085 OFFCURVE",
"413.5 1151.833 OFFCURVE",
"463.5 1188.5 CURVE SMOOTH",
"513.5 1225.167 OFFCURVE",
"592 1233 OFFCURVE",
"708 1233 CURVE SMOOTH",
"780 1233 OFFCURVE",
"848.333 1226.667 OFFCURVE",
"899 1220 CURVE SMOOTH",
"929 1216.667 OFFCURVE",
"957 1212.667 OFFCURVE",
"983 1208 CURVE",
"983 1386 LINE",
"956.333 1398.667 OFFCURVE",
"924.667 1410.333 OFFCURVE",
"888 1421 CURVE SMOOTH",
"825.333 1438.333 OFFCURVE",
"736.667 1456 OFFCURVE",
"622 1456 CURVE SMOOTH",
"446 1456 OFFCURVE",
"329.167 1406 OFFCURVE",
"256.5 1318 CURVE SMOOTH",
"183.833 1230 OFFCURVE",
"155 1103.333 OFFCURVE",
"155 950 CURVE SMOOTH",
"155 399 LINE"
);
},
{
closed = 1;
nodes = (
"387.948 662 OFFCURVE",
"427.001 673.771 OFFCURVE",
"458.5 681 CURVE SMOOTH",
"499.167 690.333 OFFCURVE",
"554 700 OFFCURVE",
"610 700 CURVE SMOOTH",
"691.333 700 OFFCURVE",
"748 690.833 OFFCURVE",
"784 655.5 CURVE SMOOTH",
"820 620.167 OFFCURVE",
"835 559 OFFCURVE",
"835 455 CURVE SMOOTH",
"835 265.34 OFFCURVE",
"789.192 190 OFFCURVE",
"610 190 CURVE SMOOTH",
"430.453 190 OFFCURVE",
"393 265.859 OFFCURVE",
"393 449 CURVE SMOOTH",
"393 662 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01264 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01253 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01264 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01221 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0129 53 25 53 41 53 57 53 73 53 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01253 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01232 12 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01221 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01243 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01232 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01265 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0125 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01237 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01237 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\01227 3 58 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0125 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01213 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0128 13 24 13 40 13 56 13 72 13 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01216 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 3 values pushed */\01222 58 27 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01237 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01248 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 48 23 48 39 48 55 48 71 48 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1187;
}
);
leftKerningGroup = six;
note = six;
rightKerningGroup = six;
unicode = 0036;
},
{
glyphname = seven;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"475 0 LINE",
"1003 1270 LINE",
"1003 1427 LINE",
"65 1427 LINE",
"65 1204 LINE",
"720 1204 LINE",
"720 1200 LINE",
"198 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0123 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0126 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0121 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1073;
}
);
leftKerningGroup = seven;
note = seven;
rightKerningGroup = seven;
unicode = 0037;
},
{
glyphname = eight;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"149 227.333 OFFCURVE",
"197.833 119 OFFCURVE",
"282.5 55 CURVE SMOOTH",
"367.167 -9 OFFCURVE",
"486 -29 OFFCURVE",
"626 -29 CURVE SMOOTH",
"766 -29 OFFCURVE",
"885.833 -9 OFFCURVE",
"970.5 55 CURVE SMOOTH",
"1055.167 119 OFFCURVE",
"1105 227.333 OFFCURVE",
"1105 406 CURVE SMOOTH",
"1105 491.333 OFFCURVE",
"1086.5 556.667 OFFCURVE",
"1060.5 606 CURVE SMOOTH",
"1047.5 630.667 OFFCURVE",
"1033.167 651.333 OFFCURVE",
"1017.5 668 CURVE SMOOTH",
"975.28 712.915 OFFCURVE",
"931.669 734.466 OFFCURVE",
"899 741 CURVE",
"899 743 LINE",
"925.667 751 OFFCURVE",
"968.667 770 OFFCURVE",
"1006 814 CURVE SMOOTH",
"1043.333 858 OFFCURVE",
"1073 928.667 OFFCURVE",
"1073 1038 CURVE SMOOTH",
"1073 1159.333 OFFCURVE",
"1048.667 1264.5 OFFCURVE",
"982 1338.5 CURVE SMOOTH",
"915.333 1412.5 OFFCURVE",
"803.333 1456 OFFCURVE",
"630 1456 CURVE SMOOTH",
"455.333 1456 OFFCURVE",
"344 1412.5 OFFCURVE",
"276 1338.5 CURVE SMOOTH",
"208 1264.5 OFFCURVE",
"184 1159.333 OFFCURVE",
"184 1038 CURVE SMOOTH",
"184 928.667 OFFCURVE",
"214.667 857.167 OFFCURVE",
"252 812.5 CURVE SMOOTH",
"289.333 767.833 OFFCURVE",
"332.667 748.333 OFFCURVE",
"358 743 CURVE",
"358 741 LINE",
"325.993 734.599 OFFCURVE",
"280.891 712.679 OFFCURVE",
"238 668 CURVE SMOOTH",
"206 634.667 OFFCURVE",
"178.167 585.5 OFFCURVE",
"161.5 519.5 CURVE SMOOTH",
"153.167 486.5 OFFCURVE",
"149 448.667 OFFCURVE",
"149 406 CURVE"
);
},
{
closed = 1;
nodes = (
"473.279 827 OFFCURVE",
"415 885.318 OFFCURVE",
"415 1038 CURVE SMOOTH",
"415 1190.382 OFFCURVE",
"474.209 1243 OFFCURVE",
"628 1243 CURVE SMOOTH",
"782.633 1243 OFFCURVE",
"839 1191.051 OFFCURVE",
"839 1038 CURVE SMOOTH",
"839 884.644 OFFCURVE",
"783.571 827 OFFCURVE",
"628 827 CURVE"
);
},
{
closed = 1;
nodes = (
"393 588.514 OFFCURVE",
"463.524 641 OFFCURVE",
"628 641 CURVE SMOOTH",
"793.409 641 OFFCURVE",
"864 589.145 OFFCURVE",
"864 406 CURVE SMOOTH",
"864 220.974 OFFCURVE",
"795.436 188 OFFCURVE",
"628 188 CURVE SMOOTH",
"461.512 188 OFFCURVE",
"393 221.609 OFFCURVE",
"393 406 CURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01266 12 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01236 12 76 4 \012CALL[ ]	/* CallFunction */\012NPUSHB[ ]	/* 11 values pushed */\0126 66 22 66 38 66 54 66 70 66 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\0128 0 66 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 3 values pushed */\01213 0 66 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01213 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHB[ ]	/* 11 values pushed */\0129 76 25 76 41 76 57 76 73 76 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01223 76 36 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01223 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 3 values pushed */\01229 76 36 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 2 values pushed */\01251 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0129 51 25 51 41 51 57 51 73 51 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01213 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01261 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01236 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01287 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01218 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01241 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01241 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\01246 4 81 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\0128 81 46 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 3 values pushed */\01229 81 46 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01218 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01256 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0128 56 24 56 40 56 56 56 72 56 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01241 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01271 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 71 23 71 39 71 55 71 71 71 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1254;
}
);
leftKerningGroup = eight;
note = eight;
rightKerningGroup = eight;
unicode = 0038;
},
{
glyphname = nine;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"239 15.667 OFFCURVE",
"275 6 OFFCURVE",
"313 -2 CURVE SMOOTH",
"378.333 -16.667 OFFCURVE",
"464.333 -31 OFFCURVE",
"551 -31 CURVE SMOOTH",
"724.333 -31 OFFCURVE",
"848 -3.167 OFFCURVE",
"928 57.5 CURVE SMOOTH",
"1008 118.167 OFFCURVE",
"1045 214 OFFCURVE",
"1045 350 CURVE SMOOTH",
"1045 799 LINE SMOOTH",
"1045 972.333 OFFCURVE",
"1038.167 1102.667 OFFCURVE",
"1013.5 1200 CURVE SMOOTH",
"1001.167 1248.667 OFFCURVE",
"984.333 1289.5 OFFCURVE",
"963 1322.5 CURVE SMOOTH",
"920.333 1388.5 OFFCURVE",
"852.833 1426.833 OFFCURVE",
"757.5 1443.5 CURVE SMOOTH",
"709.833 1451.833 OFFCURVE",
"653.333 1456 OFFCURVE",
"588 1456 CURVE SMOOTH",
"437.333 1456 OFFCURVE",
"319.167 1431.333 OFFCURVE",
"238.5 1358 CURVE SMOOTH",
"157.833 1284.667 OFFCURVE",
"115 1165 OFFCURVE",
"115 973 CURVE SMOOTH",
"115 794.333 OFFCURVE",
"150 675.5 OFFCURVE",
"210 601.5 CURVE SMOOTH",
"270 527.5 OFFCURVE",
"356.333 498 OFFCURVE",
"459 498 CURVE SMOOTH",
"561.271 498 OFFCURVE",
"700.163 518.417 OFFCURVE",
"805 567 CURVE",
"805 389 LINE SMOOTH",
"805 313 OFFCURVE",
"781.833 264.333 OFFCURVE",
"730.5 235 CURVE SMOOTH",
"679.167 205.667 OFFCURVE",
"598.667 195 OFFCURVE",
"484 195 CURVE SMOOTH",
"412 195 OFFCURVE",
"342 199.333 OFFCURVE",
"290 206 CURVE SMOOTH",
"259.333 208.667 OFFCURVE",
"231 212.333 OFFCURVE",
"205 217 CURVE",
"205 27 LINE"
);
},
{
closed = 1;
nodes = (
"505.333 713 OFFCURVE",
"449.333 723.667 OFFCURVE",
"412 761 CURVE SMOOTH",
"374.667 798.333 OFFCURVE",
"359 863.667 OFFCURVE",
"359 973 CURVE SMOOTH",
"359 1081 OFFCURVE",
"373 1145.5 OFFCURVE",
"409 1183.5 CURVE SMOOTH",
"445 1221.5 OFFCURVE",
"501.333 1233 OFFCURVE",
"588 1233 CURVE SMOOTH",
"673.333 1233 OFFCURVE",
"726.667 1220.333 OFFCURVE",
"760 1183 CURVE SMOOTH",
"793.333 1145.667 OFFCURVE",
"805 1083 OFFCURVE",
"805 983 CURVE SMOOTH",
"805 741 LINE",
"809.836 741 OFFCURVE",
"770.922 732.151 OFFCURVE",
"739.5 727 CURVE SMOOTH",
"698.833 720.333 OFFCURVE",
"644 713 OFFCURVE",
"588 713 CURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01266 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01266 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01221 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01234 12 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01250 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01221 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01261 12 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0126 61 22 61 38 61 54 61 70 61 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01234 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01267 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01226 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01226 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01239 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01239 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\01245 3 16 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01239 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0122 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 2 23 2 39 2 55 2 71 2 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 3 values pushed */\01211 16 45 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01226 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01256 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0128 56 24 56 40 56 56 56 72 56 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1200;
}
);
leftKerningGroup = nine;
note = nine;
rightKerningGroup = nine;
unicode = 0039;
},
{
glyphname = zero.zero;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = zero;
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1375;
}
);
leftKerningGroup = zero;
leftMetricsKey = zero;
rightKerningGroup = zero;
rightMetricsKey = zero;
},
{
glyphname = zero.lf;
lastChange = "2022-05-11 05:09:25 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"813.333 -31 OFFCURVE",
"914.333 -11.667 OFFCURVE",
"993 35 CURVE SMOOTH",
"1032.333 58.333 OFFCURVE",
"1066.333 89.167 OFFCURVE",
"1095 127.5 CURVE SMOOTH",
"1152.333 204.167 OFFCURVE",
"1188.5 315.167 OFFCURVE",
"1206.5 466.5 CURVE SMOOTH",
"1215.5 542.167 OFFCURVE",
"1220 629 OFFCURVE",
"1220 727 CURVE SMOOTH",
"1220 1021.667 OFFCURVE",
"1180.5 1204.833 OFFCURVE",
"1094.5 1313.5 CURVE SMOOTH",
"1008.5 1422.167 OFFCURVE",
"874.667 1458 OFFCURVE",
"688 1458 CURVE SMOOTH",
"500 1458 OFFCURVE",
"367.667 1422.167 OFFCURVE",
"281 1313.5 CURVE SMOOTH",
"194.333 1204.833 OFFCURVE",
"155 1021.667 OFFCURVE",
"155 727 CURVE SMOOTH",
"155 531 OFFCURVE",
"172.833 381 OFFCURVE",
"209.5 269 CURVE SMOOTH",
"227.833 213 OFFCURVE",
"251.333 165.833 OFFCURVE",
"280 127.5 CURVE SMOOTH",
"337.333 50.833 OFFCURVE",
"415.5 5.167 OFFCURVE",
"517.5 -15.5 CURVE SMOOTH",
"568.5 -25.833 OFFCURVE",
"625.333 -31 OFFCURVE",
"688 -31 CURVE"
);
},
{
closed = 1;
nodes = (
"574.667 190 OFFCURVE",
"506.167 232 OFFCURVE",
"465.5 320 CURVE SMOOTH",
"424.833 408 OFFCURVE",
"413 543 OFFCURVE",
"413 727 CURVE SMOOTH",
"413 912.333 OFFCURVE",
"424.833 1039 OFFCURVE",
"465.5 1119 CURVE SMOOTH",
"506.167 1199 OFFCURVE",
"574.667 1233 OFFCURVE",
"688 1233 CURVE SMOOTH",
"801.333 1233 OFFCURVE",
"870.833 1199.167 OFFCURVE",
"911.5 1118.5 CURVE SMOOTH",
"952.167 1037.833 OFFCURVE",
"964 911 OFFCURVE",
"964 727 CURVE SMOOTH",
"964 543 OFFCURVE",
"952.167 409 OFFCURVE",
"911.5 321 CURVE SMOOTH",
"870.833 233 OFFCURVE",
"801.333 190 OFFCURVE",
"688 190 CURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01244 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01229 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01244 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0127 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0127 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHB[ ]	/* 11 values pushed */\0129 29 25 29 41 29 57 29 73 29 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01229 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01217 11 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0127 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01239 11 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0126 39 22 39 38 39 54 39 70 39 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01217 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01245 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01212 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 2 values pushed */\01224 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 24 23 24 39 24 55 24 71 24 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01234 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0128 34 24 34 40 34 56 34 72 34 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1375;
}
);
leftKerningGroup = zero;
note = zero;
rightKerningGroup = zero;
},
{
glyphname = zero.zero.lf;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = zero;
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1375;
}
);
leftKerningGroup = zero;
leftMetricsKey = zero;
rightKerningGroup = zero;
rightMetricsKey = zero;
},
{
glyphname = one.lf;
lastChange = "2022-05-11 05:09:25 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"587 0 LINE",
"587 1427 LINE",
"153 1427 LINE",
"86 1204 LINE",
"348 1204 LINE",
"348 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\0123 12 0 4 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0122 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0124 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0122 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0120 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 816;
}
);
leftKerningGroup = one;
note = one;
rightKerningGroup = one;
},
{
glyphname = two.lf;
lastChange = "2022-05-11 05:09:25 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"987 0 LINE",
"987 223 LINE",
"459 223 LINE",
"459 225 LINE",
"659 410.333 OFFCURVE",
"791.5 567.167 OFFCURVE",
"873.5 702.5 CURVE SMOOTH",
"955.5 837.833 OFFCURVE",
"987 952.333 OFFCURVE",
"987 1055 CURVE SMOOTH",
"987 1188.333 OFFCURVE",
"958.5 1290.333 OFFCURVE",
"888.5 1357 CURVE SMOOTH",
"818.5 1423.667 OFFCURVE",
"707.667 1458 OFFCURVE",
"545 1458 CURVE SMOOTH",
"427.667 1458 OFFCURVE",
"329.667 1439.667 OFFCURVE",
"259 1421 CURVE SMOOTH",
"217.667 1409.667 OFFCURVE",
"180.667 1397.333 OFFCURVE",
"148 1384 CURVE",
"148 1200 LINE",
"180.667 1206 OFFCURVE",
"214.667 1211.333 OFFCURVE",
"250 1216 CURVE SMOOTH",
"310 1224 OFFCURVE",
"387 1233 OFFCURVE",
"463 1233 CURVE SMOOTH",
"571 1233 OFFCURVE",
"640.667 1216.167 OFFCURVE",
"682 1183.5 CURVE SMOOTH",
"723.333 1150.833 OFFCURVE",
"738 1101.333 OFFCURVE",
"738 1036 CURVE SMOOTH",
"738 942.667 OFFCURVE",
"695 839.833 OFFCURVE",
"595 700.5 CURVE SMOOTH",
"495 561.167 OFFCURVE",
"337 384.333 OFFCURVE",
"105 143 CURVE",
"105 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01226 11 5 4 \012CALL[ ]	/* CallFunction */\012NPUSHB[ ]	/* 11 values pushed */\0129 5 25 5 41 5 57 5 73 5 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01226 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01233 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01226 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01237 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01221 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01234 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01234 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01221 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01210 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0128 10 24 10 40 10 56 10 72 10 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01234 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01232 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1151;
}
);
leftKerningGroup = two;
note = two;
rightKerningGroup = two;
},
{
glyphname = three.lf;
lastChange = "2022-05-11 05:09:25 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"168 20.333 OFFCURVE",
"208.333 9.333 OFFCURVE",
"251 0 CURVE SMOOTH",
"324.333 -17.333 OFFCURVE",
"423 -33 OFFCURVE",
"523 -33 CURVE SMOOTH",
"664.333 -33 OFFCURVE",
"779.833 -7.667 OFFCURVE",
"860.5 59 CURVE SMOOTH",
"941.167 125.667 OFFCURVE",
"986 233.667 OFFCURVE",
"986 399 CURVE SMOOTH",
"986 503 OFFCURVE",
"962.333 576.167 OFFCURVE",
"929 627.5 CURVE SMOOTH",
"912.333 653.167 OFFCURVE",
"893.5 673.667 OFFCURVE",
"872.5 689 CURVE SMOOTH",
"812.713 732.654 OFFCURVE",
"753.647 742.484 OFFCURVE",
"704 748 CURVE",
"704 750 LINE",
"752.96 752.225 OFFCURVE",
"811.644 772.836 OFFCURVE",
"859.5 816 CURVE SMOOTH",
"893.5 846.667 OFFCURVE",
"921 893 OFFCURVE",
"937 957 CURVE SMOOTH",
"945 989 OFFCURVE",
"949 1026.333 OFFCURVE",
"949 1069 CURVE SMOOTH",
"949 1330.333 OFFCURVE",
"818.667 1458 OFFCURVE",
"532 1458 CURVE SMOOTH",
"424 1458 OFFCURVE",
"329 1439.667 OFFCURVE",
"257 1421 CURVE SMOOTH",
"215.667 1409.667 OFFCURVE",
"177.333 1397.333 OFFCURVE",
"142 1384 CURVE",
"142 1212 LINE",
"174 1217.333 OFFCURVE",
"206.333 1222 OFFCURVE",
"239 1226 CURVE SMOOTH",
"295 1232.667 OFFCURVE",
"364.333 1241 OFFCURVE",
"423 1241 CURVE SMOOTH",
"525.667 1241 OFFCURVE",
"595 1228.167 OFFCURVE",
"639 1199.5 CURVE SMOOTH",
"683 1170.833 OFFCURVE",
"700.667 1125 OFFCURVE",
"702 1057 CURVE SMOOTH",
"703.333 974.333 OFFCURVE",
"690.833 919.5 OFFCURVE",
"635.5 885.5 CURVE SMOOTH",
"580.167 851.5 OFFCURVE",
"481.333 838 OFFCURVE",
"312 838 CURVE",
"310 625 LINE",
"475.333 621 OFFCURVE",
"582.667 616.167 OFFCURVE",
"648 587.5 CURVE SMOOTH",
"713.333 558.833 OFFCURVE",
"737.333 503.667 OFFCURVE",
"736 397 CURVE SMOOTH",
"734.667 307.667 OFFCURVE",
"706 256.333 OFFCURVE",
"654 227 CURVE SMOOTH",
"602 197.667 OFFCURVE",
"526.333 190 OFFCURVE",
"433 190 CURVE SMOOTH",
"366.333 190 OFFCURVE",
"292 194.333 OFFCURVE",
"232 201 CURVE SMOOTH",
"197.333 204.333 OFFCURVE",
"163.333 208.333 OFFCURVE",
"130 213 CURVE",
"130 33 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01255 11 10 4 \012CALL[ ]	/* CallFunction */\012NPUSHB[ ]	/* 11 values pushed */\0129 10 25 10 41 10 57 10 73 10 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01240 10 55 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01240 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01221 12 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0129 21 25 21 41 21 57 21 73 21 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01248 40 21 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01255 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01267 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01237 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01237 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01260 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01260 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\01216 3 15 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01260 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0122 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 2 23 2 39 2 55 2 71 2 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01237 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01226 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0128 26 24 26 40 26 56 26 72 26 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01248 15 16 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1135;
}
);
leftKerningGroup = three;
note = three;
rightKerningGroup = three;
},
{
glyphname = four.lf;
lastChange = "2022-05-11 05:09:25 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"733 292 LINE",
"733 0 LINE",
"971 0 LINE",
"971 292 LINE",
"1124 292 LINE",
"1124 505 LINE",
"971 505 LINE",
"971 1427 LINE",
"612 1427 LINE",
"65 450 LINE",
"65 292 LINE"
);
},
{
closed = 1;
nodes = (
"729 1237 LINE",
"735 1237 LINE",
"733 505 LINE",
"330 505 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\0127 13 8 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0127 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0122 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0128 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01211 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0127 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01216 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0121 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0127 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0127 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\0124 3 5 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0125 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0129 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0124 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01211 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01212 8 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 3 values pushed */\01214 7 1 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1224;
}
);
leftKerningGroup = four;
note = four;
rightKerningGroup = four;
},
{
glyphname = five.lf;
lastChange = "2022-05-11 05:09:25 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"175.667 22.333 OFFCURVE",
"210.333 11.333 OFFCURVE",
"249 2 CURVE SMOOTH",
"315.667 -15.333 OFFCURVE",
"407.333 -31 OFFCURVE",
"518 -31 CURVE SMOOTH",
"654 -31 OFFCURVE",
"773.833 -8.167 OFFCURVE",
"858.5 60.5 CURVE SMOOTH",
"943.167 129.167 OFFCURVE",
"995 242.667 OFFCURVE",
"995 424 CURVE SMOOTH",
"995 612 OFFCURVE",
"961.833 730.333 OFFCURVE",
"894.5 801 CURVE SMOOTH",
"827.167 871.667 OFFCURVE",
"727 895 OFFCURVE",
"591 895 CURVE SMOOTH",
"548.333 895 OFFCURVE",
"506.667 891.667 OFFCURVE",
"476 889 CURVE SMOOTH",
"458 887 OFFCURVE",
"441 885 OFFCURVE",
"425 883 CURVE",
"425 1204 LINE",
"948 1204 LINE",
"948 1430 LINE",
"188 1430 LINE",
"188 649 LINE",
"219.333 654.333 OFFCURVE",
"253.333 659 OFFCURVE",
"290 663 CURVE SMOOTH",
"352.667 669.667 OFFCURVE",
"435.333 678 OFFCURVE",
"522 678 CURVE SMOOTH",
"701.38 678 OFFCURVE",
"749 619.974 OFFCURVE",
"749 442 CURVE SMOOTH",
"749 352.667 OFFCURVE",
"727.333 290.167 OFFCURVE",
"678 249.5 CURVE SMOOTH",
"628.667 208.833 OFFCURVE",
"552 190 OFFCURVE",
"440 190 CURVE SMOOTH",
"372 190 OFFCURVE",
"299.333 194.667 OFFCURVE",
"242 200 CURVE SMOOTH",
"208.667 202.667 OFFCURVE",
"176.333 206.333 OFFCURVE",
"145 211 CURVE",
"145 35 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01246 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHB[ ]	/* 11 values pushed */\0129 10 25 10 41 10 57 10 73 10 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01246 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01220 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01220 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01225 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01235 12 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01247 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01221 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01240 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01240 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\01230 3 15 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01240 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0122 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 2 23 2 39 2 55 2 71 2 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01221 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01223 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01230 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01225 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01230 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01227 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01227 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1129;
}
);
leftKerningGroup = five;
note = five;
rightKerningGroup = five;
},
{
glyphname = six.lf;
lastChange = "2022-05-11 05:09:25 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"155 245.667 OFFCURVE",
"199.167 138.333 OFFCURVE",
"278.5 69 CURVE SMOOTH",
"357.833 -0.333 OFFCURVE",
"471.333 -31 OFFCURVE",
"610 -31 CURVE SMOOTH",
"760.667 -31 OFFCURVE",
"878.833 1.167 OFFCURVE",
"959.5 76.5 CURVE SMOOTH",
"1040.167 151.833 OFFCURVE",
"1083 271.333 OFFCURVE",
"1083 446 CURVE SMOOTH",
"1083 624.667 OFFCURVE",
"1048 741.833 OFFCURVE",
"988 814.5 CURVE SMOOTH",
"928 887.167 OFFCURVE",
"841.667 915 OFFCURVE",
"739 915 CURVE SMOOTH",
"636.463 915 OFFCURVE",
"497.381 886.918 OFFCURVE",
"393 836 CURVE",
"393 969 LINE SMOOTH",
"393 1085 OFFCURVE",
"413.5 1151.833 OFFCURVE",
"463.5 1188.5 CURVE SMOOTH",
"513.5 1225.167 OFFCURVE",
"592 1233 OFFCURVE",
"708 1233 CURVE SMOOTH",
"780 1233 OFFCURVE",
"848.333 1226.667 OFFCURVE",
"899 1220 CURVE SMOOTH",
"929 1216.667 OFFCURVE",
"957 1212.667 OFFCURVE",
"983 1208 CURVE",
"983 1386 LINE",
"956.333 1398.667 OFFCURVE",
"924.667 1410.333 OFFCURVE",
"888 1421 CURVE SMOOTH",
"825.333 1438.333 OFFCURVE",
"736.667 1456 OFFCURVE",
"622 1456 CURVE SMOOTH",
"446 1456 OFFCURVE",
"329.167 1406 OFFCURVE",
"256.5 1318 CURVE SMOOTH",
"183.833 1230 OFFCURVE",
"155 1103.333 OFFCURVE",
"155 950 CURVE SMOOTH",
"155 399 LINE"
);
},
{
closed = 1;
nodes = (
"387.948 662 OFFCURVE",
"427.001 673.771 OFFCURVE",
"458.5 681 CURVE SMOOTH",
"499.167 690.333 OFFCURVE",
"554 700 OFFCURVE",
"610 700 CURVE SMOOTH",
"691.333 700 OFFCURVE",
"748 690.833 OFFCURVE",
"784 655.5 CURVE SMOOTH",
"820 620.167 OFFCURVE",
"835 559 OFFCURVE",
"835 455 CURVE SMOOTH",
"835 265.34 OFFCURVE",
"789.192 190 OFFCURVE",
"610 190 CURVE SMOOTH",
"430.453 190 OFFCURVE",
"393 265.859 OFFCURVE",
"393 449 CURVE SMOOTH",
"393 662 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01264 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01253 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01264 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01221 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0129 53 25 53 41 53 57 53 73 53 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01253 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01232 12 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01221 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01243 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01232 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01265 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0125 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01237 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01237 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\01227 3 58 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0125 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01213 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0128 13 24 13 40 13 56 13 72 13 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01216 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 3 values pushed */\01222 58 27 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01237 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01248 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 48 23 48 39 48 55 48 71 48 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1187;
}
);
leftKerningGroup = six;
note = six;
rightKerningGroup = six;
},
{
glyphname = seven.lf;
lastChange = "2022-05-11 05:09:25 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"475 0 LINE",
"1003 1270 LINE",
"1003 1427 LINE",
"65 1427 LINE",
"65 1204 LINE",
"720 1204 LINE",
"720 1200 LINE",
"198 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0123 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0126 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0121 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1073;
}
);
leftKerningGroup = seven;
note = seven;
rightKerningGroup = seven;
},
{
glyphname = eight.lf;
lastChange = "2022-05-11 05:09:25 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"149 227.333 OFFCURVE",
"197.833 119 OFFCURVE",
"282.5 55 CURVE SMOOTH",
"367.167 -9 OFFCURVE",
"486 -29 OFFCURVE",
"626 -29 CURVE SMOOTH",
"766 -29 OFFCURVE",
"885.833 -9 OFFCURVE",
"970.5 55 CURVE SMOOTH",
"1055.167 119 OFFCURVE",
"1105 227.333 OFFCURVE",
"1105 406 CURVE SMOOTH",
"1105 491.333 OFFCURVE",
"1086.5 556.667 OFFCURVE",
"1060.5 606 CURVE SMOOTH",
"1047.5 630.667 OFFCURVE",
"1033.167 651.333 OFFCURVE",
"1017.5 668 CURVE SMOOTH",
"975.28 712.915 OFFCURVE",
"931.669 734.466 OFFCURVE",
"899 741 CURVE",
"899 743 LINE",
"925.667 751 OFFCURVE",
"968.667 770 OFFCURVE",
"1006 814 CURVE SMOOTH",
"1043.333 858 OFFCURVE",
"1073 928.667 OFFCURVE",
"1073 1038 CURVE SMOOTH",
"1073 1159.333 OFFCURVE",
"1048.667 1264.5 OFFCURVE",
"982 1338.5 CURVE SMOOTH",
"915.333 1412.5 OFFCURVE",
"803.333 1456 OFFCURVE",
"630 1456 CURVE SMOOTH",
"455.333 1456 OFFCURVE",
"344 1412.5 OFFCURVE",
"276 1338.5 CURVE SMOOTH",
"208 1264.5 OFFCURVE",
"184 1159.333 OFFCURVE",
"184 1038 CURVE SMOOTH",
"184 928.667 OFFCURVE",
"214.667 857.167 OFFCURVE",
"252 812.5 CURVE SMOOTH",
"289.333 767.833 OFFCURVE",
"332.667 748.333 OFFCURVE",
"358 743 CURVE",
"358 741 LINE",
"325.993 734.599 OFFCURVE",
"280.891 712.679 OFFCURVE",
"238 668 CURVE SMOOTH",
"206 634.667 OFFCURVE",
"178.167 585.5 OFFCURVE",
"161.5 519.5 CURVE SMOOTH",
"153.167 486.5 OFFCURVE",
"149 448.667 OFFCURVE",
"149 406 CURVE"
);
},
{
closed = 1;
nodes = (
"473.279 827 OFFCURVE",
"415 885.318 OFFCURVE",
"415 1038 CURVE SMOOTH",
"415 1190.382 OFFCURVE",
"474.209 1243 OFFCURVE",
"628 1243 CURVE SMOOTH",
"782.633 1243 OFFCURVE",
"839 1191.051 OFFCURVE",
"839 1038 CURVE SMOOTH",
"839 884.644 OFFCURVE",
"783.571 827 OFFCURVE",
"628 827 CURVE"
);
},
{
closed = 1;
nodes = (
"393 588.514 OFFCURVE",
"463.524 641 OFFCURVE",
"628 641 CURVE SMOOTH",
"793.409 641 OFFCURVE",
"864 589.145 OFFCURVE",
"864 406 CURVE SMOOTH",
"864 220.974 OFFCURVE",
"795.436 188 OFFCURVE",
"628 188 CURVE SMOOTH",
"461.512 188 OFFCURVE",
"393 221.609 OFFCURVE",
"393 406 CURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01266 12 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01236 12 76 4 \012CALL[ ]	/* CallFunction */\012NPUSHB[ ]	/* 11 values pushed */\0126 66 22 66 38 66 54 66 70 66 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\0128 0 66 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 3 values pushed */\01213 0 66 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01213 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHB[ ]	/* 11 values pushed */\0129 76 25 76 41 76 57 76 73 76 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01223 76 36 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01223 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 3 values pushed */\01229 76 36 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 2 values pushed */\01251 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0129 51 25 51 41 51 57 51 73 51 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01213 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01261 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01236 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01287 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01218 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01241 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01241 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\01246 4 81 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\0128 81 46 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 3 values pushed */\01229 81 46 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01218 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01256 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0128 56 24 56 40 56 56 56 72 56 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01241 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01271 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 71 23 71 39 71 55 71 71 71 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1254;
}
);
leftKerningGroup = eight;
note = eight;
rightKerningGroup = eight;
},
{
glyphname = nine.lf;
lastChange = "2022-05-11 05:09:25 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"239 15.667 OFFCURVE",
"275 6 OFFCURVE",
"313 -2 CURVE SMOOTH",
"378.333 -16.667 OFFCURVE",
"464.333 -31 OFFCURVE",
"551 -31 CURVE SMOOTH",
"724.333 -31 OFFCURVE",
"848 -3.167 OFFCURVE",
"928 57.5 CURVE SMOOTH",
"1008 118.167 OFFCURVE",
"1045 214 OFFCURVE",
"1045 350 CURVE SMOOTH",
"1045 799 LINE SMOOTH",
"1045 972.333 OFFCURVE",
"1038.167 1102.667 OFFCURVE",
"1013.5 1200 CURVE SMOOTH",
"1001.167 1248.667 OFFCURVE",
"984.333 1289.5 OFFCURVE",
"963 1322.5 CURVE SMOOTH",
"920.333 1388.5 OFFCURVE",
"852.833 1426.833 OFFCURVE",
"757.5 1443.5 CURVE SMOOTH",
"709.833 1451.833 OFFCURVE",
"653.333 1456 OFFCURVE",
"588 1456 CURVE SMOOTH",
"437.333 1456 OFFCURVE",
"319.167 1431.333 OFFCURVE",
"238.5 1358 CURVE SMOOTH",
"157.833 1284.667 OFFCURVE",
"115 1165 OFFCURVE",
"115 973 CURVE SMOOTH",
"115 794.333 OFFCURVE",
"150 675.5 OFFCURVE",
"210 601.5 CURVE SMOOTH",
"270 527.5 OFFCURVE",
"356.333 498 OFFCURVE",
"459 498 CURVE SMOOTH",
"561.271 498 OFFCURVE",
"700.163 518.417 OFFCURVE",
"805 567 CURVE",
"805 389 LINE SMOOTH",
"805 313 OFFCURVE",
"781.833 264.333 OFFCURVE",
"730.5 235 CURVE SMOOTH",
"679.167 205.667 OFFCURVE",
"598.667 195 OFFCURVE",
"484 195 CURVE SMOOTH",
"412 195 OFFCURVE",
"342 199.333 OFFCURVE",
"290 206 CURVE SMOOTH",
"259.333 208.667 OFFCURVE",
"231 212.333 OFFCURVE",
"205 217 CURVE",
"205 27 LINE"
);
},
{
closed = 1;
nodes = (
"505.333 713 OFFCURVE",
"449.333 723.667 OFFCURVE",
"412 761 CURVE SMOOTH",
"374.667 798.333 OFFCURVE",
"359 863.667 OFFCURVE",
"359 973 CURVE SMOOTH",
"359 1081 OFFCURVE",
"373 1145.5 OFFCURVE",
"409 1183.5 CURVE SMOOTH",
"445 1221.5 OFFCURVE",
"501.333 1233 OFFCURVE",
"588 1233 CURVE SMOOTH",
"673.333 1233 OFFCURVE",
"726.667 1220.333 OFFCURVE",
"760 1183 CURVE SMOOTH",
"793.333 1145.667 OFFCURVE",
"805 1083 OFFCURVE",
"805 983 CURVE SMOOTH",
"805 741 LINE",
"809.836 741 OFFCURVE",
"770.922 732.151 OFFCURVE",
"739.5 727 CURVE SMOOTH",
"698.833 720.333 OFFCURVE",
"644 713 OFFCURVE",
"588 713 CURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01266 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01266 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01221 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01234 12 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01250 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01221 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01261 12 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0126 61 22 61 38 61 54 61 70 61 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01234 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01267 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01226 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01226 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01239 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01239 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\01245 3 16 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01239 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0122 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 2 23 2 39 2 55 2 71 2 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 3 values pushed */\01211 16 45 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01226 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01256 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0128 56 24 56 40 56 56 56 72 56 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1200;
}
);
leftKerningGroup = nine;
note = nine;
rightKerningGroup = nine;
},
{
color = 0;
glyphname = zero.tf;
lastChange = "2022-05-11 05:13:45 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"753 -31 OFFCURVE",
"854 -12 OFFCURVE",
"933 35 CURVE SMOOTH",
"972 58 OFFCURVE",
"1006 89 OFFCURVE",
"1035 128 CURVE SMOOTH",
"1092 204 OFFCURVE",
"1129 315 OFFCURVE",
"1147 467 CURVE SMOOTH",
"1156 542 OFFCURVE",
"1160 629 OFFCURVE",
"1160 727 CURVE SMOOTH",
"1160 1022 OFFCURVE",
"1121 1205 OFFCURVE",
"1035 1314 CURVE SMOOTH",
"949 1422 OFFCURVE",
"815 1458 OFFCURVE",
"629 1458 CURVE SMOOTH",
"443 1458 OFFCURVE",
"311 1422 OFFCURVE",
"224 1314 CURVE SMOOTH",
"137 1205 OFFCURVE",
"98 1022 OFFCURVE",
"98 727 CURVE SMOOTH",
"98 531 OFFCURVE",
"116 381 OFFCURVE",
"153 269 CURVE SMOOTH",
"171 213 OFFCURVE",
"194 166 OFFCURVE",
"223 128 CURVE SMOOTH",
"280 51 OFFCURVE",
"359 5 OFFCURVE",
"461 -16 CURVE SMOOTH",
"512 -26 OFFCURVE",
"568 -31 OFFCURVE",
"629 -31 CURVE"
);
},
{
closed = 1;
nodes = (
"518 190 OFFCURVE",
"449 232 OFFCURVE",
"409 320 CURVE SMOOTH",
"368 408 OFFCURVE",
"356 543 OFFCURVE",
"356 727 CURVE SMOOTH",
"356 912 OFFCURVE",
"368 1039 OFFCURVE",
"409 1119 CURVE SMOOTH",
"449 1199 OFFCURVE",
"518 1233 OFFCURVE",
"629 1233 CURVE SMOOTH",
"741 1233 OFFCURVE",
"811 1199 OFFCURVE",
"851 1119 CURVE SMOOTH",
"892 1038 OFFCURVE",
"904 911 OFFCURVE",
"904 727 CURVE SMOOTH",
"904 543 OFFCURVE",
"892 409 OFFCURVE",
"852 321 CURVE SMOOTH",
"811 233 OFFCURVE",
"741 190 OFFCURVE",
"629 190 CURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01244 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01229 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01244 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0127 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0127 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHB[ ]	/* 11 values pushed */\0129 29 25 29 41 29 57 29 73 29 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01229 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01217 11 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0127 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01239 11 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0126 39 22 39 38 39 54 39 70 39 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01217 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01245 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01212 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 2 values pushed */\01224 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 24 23 24 39 24 55 24 71 24 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01234 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0128 34 24 34 40 34 56 34 72 34 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1258;
}
);
leftKerningGroup = zero;
note = zero;
rightKerningGroup = zero;
},
{
color = 0;
glyphname = one.tf;
lastChange = "2022-05-11 05:13:45 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"797 30 LINE",
"797 1427 LINE",
"283 1427 LINE",
"216 1204 LINE",
"558 1204 LINE",
"558 30 LINE"
);
},
{
closed = 1;
nodes = (
"132 0 LINE",
"1143 0 LINE",
"1143 223 LINE",
"132 223 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\0123 12 0 4 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0122 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0124 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0122 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0120 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1258;
}
);
leftKerningGroup = one;
note = one;
rightKerningGroup = one;
},
{
color = 0;
glyphname = two.tf;
lastChange = "2022-05-11 05:13:45 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"1057 0 LINE",
"1057 223 LINE",
"529 223 LINE",
"529 225 LINE",
"729 410 OFFCURVE",
"862 567 OFFCURVE",
"944 703 CURVE SMOOTH",
"1026 838 OFFCURVE",
"1057 952 OFFCURVE",
"1057 1055 CURVE SMOOTH",
"1057 1188 OFFCURVE",
"1029 1290 OFFCURVE",
"959 1357 CURVE SMOOTH",
"889 1424 OFFCURVE",
"778 1458 OFFCURVE",
"615 1458 CURVE SMOOTH",
"498 1458 OFFCURVE",
"400 1440 OFFCURVE",
"329 1421 CURVE SMOOTH",
"288 1410 OFFCURVE",
"251 1397 OFFCURVE",
"218 1384 CURVE",
"218 1200 LINE",
"251 1206 OFFCURVE",
"285 1211 OFFCURVE",
"320 1216 CURVE SMOOTH",
"380 1224 OFFCURVE",
"457 1233 OFFCURVE",
"533 1233 CURVE SMOOTH",
"641 1233 OFFCURVE",
"711 1216 OFFCURVE",
"752 1184 CURVE SMOOTH",
"793 1151 OFFCURVE",
"808 1101 OFFCURVE",
"808 1036 CURVE SMOOTH",
"808 943 OFFCURVE",
"765 840 OFFCURVE",
"665 701 CURVE SMOOTH",
"565 561 OFFCURVE",
"407 384 OFFCURVE",
"175 143 CURVE",
"175 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01226 11 5 4 \012CALL[ ]	/* CallFunction */\012NPUSHB[ ]	/* 11 values pushed */\0129 5 25 5 41 5 57 5 73 5 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01226 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01233 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01226 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01237 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01221 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01234 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01234 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01221 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01210 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0128 10 24 10 40 10 56 10 72 10 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01234 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01232 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1258;
}
);
leftKerningGroup = two;
note = two;
rightKerningGroup = two;
},
{
color = 0;
glyphname = three.tf;
lastChange = "2022-05-11 05:13:45 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"238 20 OFFCURVE",
"278 9 OFFCURVE",
"321 0 CURVE SMOOTH",
"394 -17 OFFCURVE",
"493 -33 OFFCURVE",
"593 -33 CURVE SMOOTH",
"734 -33 OFFCURVE",
"850 -8 OFFCURVE",
"931 59 CURVE SMOOTH",
"1011 126 OFFCURVE",
"1056 234 OFFCURVE",
"1056 399 CURVE SMOOTH",
"1056 503 OFFCURVE",
"1032 576 OFFCURVE",
"999 628 CURVE SMOOTH",
"982 653 OFFCURVE",
"964 674 OFFCURVE",
"943 689 CURVE SMOOTH",
"883 733 OFFCURVE",
"824 742 OFFCURVE",
"774 748 CURVE",
"774 750 LINE",
"823 752 OFFCURVE",
"882 773 OFFCURVE",
"930 816 CURVE SMOOTH",
"964 847 OFFCURVE",
"991 893 OFFCURVE",
"1007 957 CURVE SMOOTH",
"1015 989 OFFCURVE",
"1019 1026 OFFCURVE",
"1019 1069 CURVE SMOOTH",
"1019 1330 OFFCURVE",
"889 1458 OFFCURVE",
"602 1458 CURVE SMOOTH",
"494 1458 OFFCURVE",
"399 1440 OFFCURVE",
"327 1421 CURVE SMOOTH",
"286 1410 OFFCURVE",
"247 1397 OFFCURVE",
"212 1384 CURVE",
"212 1212 LINE",
"244 1217 OFFCURVE",
"276 1222 OFFCURVE",
"309 1226 CURVE SMOOTH",
"365 1233 OFFCURVE",
"434 1241 OFFCURVE",
"493 1241 CURVE SMOOTH",
"596 1241 OFFCURVE",
"665 1228 OFFCURVE",
"709 1200 CURVE SMOOTH",
"753 1171 OFFCURVE",
"771 1125 OFFCURVE",
"772 1057 CURVE SMOOTH",
"773 974 OFFCURVE",
"761 920 OFFCURVE",
"706 886 CURVE SMOOTH",
"650 852 OFFCURVE",
"551 838 OFFCURVE",
"382 838 CURVE",
"380 625 LINE",
"545 621 OFFCURVE",
"653 616 OFFCURVE",
"718 588 CURVE SMOOTH",
"783 559 OFFCURVE",
"807 504 OFFCURVE",
"806 397 CURVE SMOOTH",
"805 308 OFFCURVE",
"776 256 OFFCURVE",
"724 227 CURVE SMOOTH",
"672 198 OFFCURVE",
"596 190 OFFCURVE",
"503 190 CURVE SMOOTH",
"436 190 OFFCURVE",
"362 194 OFFCURVE",
"302 201 CURVE SMOOTH",
"267 204 OFFCURVE",
"233 208 OFFCURVE",
"200 213 CURVE",
"200 33 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01255 11 10 4 \012CALL[ ]	/* CallFunction */\012NPUSHB[ ]	/* 11 values pushed */\0129 10 25 10 41 10 57 10 73 10 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01240 10 55 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01240 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01221 12 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0129 21 25 21 41 21 57 21 73 21 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01248 40 21 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01255 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01267 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01237 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01237 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01260 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01260 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\01216 3 15 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01260 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0122 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 2 23 2 39 2 55 2 71 2 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01237 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01226 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0128 26 24 26 40 26 56 26 72 26 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01248 15 16 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1258;
}
);
leftKerningGroup = three;
note = three;
rightKerningGroup = three;
},
{
color = 0;
glyphname = four.tf;
lastChange = "2022-05-11 05:13:45 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"773 292 LINE",
"773 0 LINE",
"1011 0 LINE",
"1011 292 LINE",
"1164 292 LINE",
"1164 505 LINE",
"1011 505 LINE",
"1011 1427 LINE",
"652 1427 LINE",
"105 450 LINE",
"105 292 LINE"
);
},
{
closed = 1;
nodes = (
"769 1237 LINE",
"775 1237 LINE",
"773 505 LINE",
"370 505 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\0127 13 8 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0127 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0122 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0128 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01211 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0127 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01216 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0121 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0127 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0127 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\0124 3 5 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0125 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0129 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0124 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01211 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01212 8 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 3 values pushed */\01214 7 1 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1258;
}
);
leftKerningGroup = four;
note = four;
rightKerningGroup = four;
},
{
color = 0;
glyphname = five.tf;
lastChange = "2022-05-11 05:13:45 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"236 22 OFFCURVE",
"270 11 OFFCURVE",
"309 2 CURVE SMOOTH",
"376 -15 OFFCURVE",
"467 -31 OFFCURVE",
"578 -31 CURVE SMOOTH",
"764 -31 OFFCURVE",
"884 -8 OFFCURVE",
"969 61 CURVE SMOOTH",
"1053 129 OFFCURVE",
"1105 243 OFFCURVE",
"1105 424 CURVE SMOOTH",
"1105 612 OFFCURVE",
"1072 730 OFFCURVE",
"1005 801 CURVE SMOOTH",
"937 872 OFFCURVE",
"837 895 OFFCURVE",
"651 895 CURVE SMOOTH",
"608 895 OFFCURVE",
"567 892 OFFCURVE",
"536 889 CURVE SMOOTH",
"518 887 OFFCURVE",
"501 885 OFFCURVE",
"485 883 CURVE",
"485 1204 LINE",
"1058 1204 LINE",
"1058 1430 LINE",
"248 1430 LINE",
"248 649 LINE",
"279 654 OFFCURVE",
"313 659 OFFCURVE",
"350 663 CURVE SMOOTH",
"413 670 OFFCURVE",
"495 678 OFFCURVE",
"582 678 CURVE SMOOTH",
"811 678 OFFCURVE",
"859 620 OFFCURVE",
"859 442 CURVE SMOOTH",
"859 353 OFFCURVE",
"837 290 OFFCURVE",
"788 250 CURVE SMOOTH",
"739 209 OFFCURVE",
"662 190 OFFCURVE",
"500 190 CURVE SMOOTH",
"432 190 OFFCURVE",
"359 195 OFFCURVE",
"302 200 CURVE SMOOTH",
"269 203 OFFCURVE",
"236 206 OFFCURVE",
"205 211 CURVE",
"205 35 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01246 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHB[ ]	/* 11 values pushed */\0129 10 25 10 41 10 57 10 73 10 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01246 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01220 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01220 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01225 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01235 12 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01247 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01221 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01240 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01240 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\01230 3 15 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01240 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0122 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 2 23 2 39 2 55 2 71 2 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01221 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01223 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01230 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01225 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01230 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01227 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01227 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1258;
}
);
leftKerningGroup = five;
note = five;
rightKerningGroup = five;
},
{
color = 0;
glyphname = six.tf;
lastChange = "2022-05-11 05:13:45 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"155 245.667 OFFCURVE",
"199.167 138.333 OFFCURVE",
"278.5 69 CURVE SMOOTH",
"357.833 -0.333 OFFCURVE",
"471.333 -31 OFFCURVE",
"610 -31 CURVE SMOOTH",
"791 -31 OFFCURVE",
"909 1 OFFCURVE",
"990 77 CURVE SMOOTH",
"1070 152 OFFCURVE",
"1113 271 OFFCURVE",
"1113 446 CURVE SMOOTH",
"1113 625 OFFCURVE",
"1078 742 OFFCURVE",
"1018 815 CURVE SMOOTH",
"958 887 OFFCURVE",
"872 915 OFFCURVE",
"769 915 CURVE SMOOTH",
"636.463 915 OFFCURVE",
"497.381 886.918 OFFCURVE",
"393 836 CURVE",
"393 969 LINE SMOOTH",
"393 1085 OFFCURVE",
"413.5 1151.833 OFFCURVE",
"463.5 1188.5 CURVE SMOOTH",
"513.5 1225.167 OFFCURVE",
"592 1233 OFFCURVE",
"738 1233 CURVE SMOOTH",
"810 1233 OFFCURVE",
"878 1227 OFFCURVE",
"929 1221 CURVE SMOOTH",
"959 1217 OFFCURVE",
"987 1213 OFFCURVE",
"1013 1208 CURVE",
"1013 1386 LINE",
"986 1399 OFFCURVE",
"955 1410 OFFCURVE",
"918 1420 CURVE SMOOTH",
"855 1438 OFFCURVE",
"767 1456 OFFCURVE",
"622 1456 CURVE SMOOTH",
"446 1456 OFFCURVE",
"329.167 1406 OFFCURVE",
"256.5 1318 CURVE SMOOTH",
"183.833 1230 OFFCURVE",
"155 1103.333 OFFCURVE",
"155 950 CURVE SMOOTH",
"155 399 LINE"
);
},
{
closed = 1;
nodes = (
"387.948 662 OFFCURVE",
"427.001 673.771 OFFCURVE",
"458.5 681 CURVE SMOOTH",
"499.167 690.333 OFFCURVE",
"554 700 OFFCURVE",
"610 700 CURVE SMOOTH",
"721 700 OFFCURVE",
"778 691 OFFCURVE",
"814 656 CURVE SMOOTH",
"850 620 OFFCURVE",
"865 559 OFFCURVE",
"865 455 CURVE SMOOTH",
"865 265 OFFCURVE",
"819 190 OFFCURVE",
"610 190 CURVE SMOOTH",
"430.453 190 OFFCURVE",
"393 265.859 OFFCURVE",
"393 449 CURVE SMOOTH",
"393 662 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01264 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01253 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01264 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01221 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0129 53 25 53 41 53 57 53 73 53 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01253 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01232 12 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01221 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01243 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01232 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01265 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0125 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01237 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01237 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\01227 3 58 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0125 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01213 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0128 13 24 13 40 13 56 13 72 13 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01216 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 3 values pushed */\01222 58 27 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01237 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01248 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 48 23 48 39 48 55 48 71 48 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1258;
}
);
leftKerningGroup = six;
note = six;
rightKerningGroup = six;
},
{
color = 0;
glyphname = seven.tf;
lastChange = "2022-05-11 05:13:45 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"595 0 LINE",
"1123 1270 LINE",
"1123 1427 LINE",
"185 1427 LINE",
"185 1204 LINE",
"840 1204 LINE",
"840 1200 LINE",
"318 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0123 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0126 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0121 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1258;
}
);
leftKerningGroup = seven;
note = seven;
rightKerningGroup = seven;
},
{
color = 0;
glyphname = eight.tf;
lastChange = "2022-05-11 05:13:45 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"151 227 OFFCURVE",
"200 119 OFFCURVE",
"285 55 CURVE SMOOTH",
"369 -9 OFFCURVE",
"488 -29 OFFCURVE",
"628 -29 CURVE SMOOTH",
"768 -29 OFFCURVE",
"888 -9 OFFCURVE",
"973 55 CURVE SMOOTH",
"1057 119 OFFCURVE",
"1107 227 OFFCURVE",
"1107 406 CURVE SMOOTH",
"1107 491 OFFCURVE",
"1089 557 OFFCURVE",
"1063 606 CURVE SMOOTH",
"1050 631 OFFCURVE",
"1035 651 OFFCURVE",
"1020 668 CURVE SMOOTH",
"977 713 OFFCURVE",
"934 734 OFFCURVE",
"901 741 CURVE",
"901 743 LINE",
"928 751 OFFCURVE",
"971 770 OFFCURVE",
"1008 814 CURVE SMOOTH",
"1045 858 OFFCURVE",
"1075 929 OFFCURVE",
"1075 1038 CURVE SMOOTH",
"1075 1159 OFFCURVE",
"1051 1265 OFFCURVE",
"984 1339 CURVE SMOOTH",
"917 1413 OFFCURVE",
"805 1456 OFFCURVE",
"632 1456 CURVE SMOOTH",
"457 1456 OFFCURVE",
"346 1413 OFFCURVE",
"278 1339 CURVE SMOOTH",
"210 1265 OFFCURVE",
"186 1159 OFFCURVE",
"186 1038 CURVE SMOOTH",
"186 929 OFFCURVE",
"217 857 OFFCURVE",
"254 813 CURVE SMOOTH",
"291 768 OFFCURVE",
"335 748 OFFCURVE",
"360 743 CURVE",
"360 741 LINE",
"328 735 OFFCURVE",
"283 713 OFFCURVE",
"240 668 CURVE SMOOTH",
"208 635 OFFCURVE",
"180 586 OFFCURVE",
"164 520 CURVE SMOOTH",
"155 487 OFFCURVE",
"151 449 OFFCURVE",
"151 406 CURVE"
);
},
{
closed = 1;
nodes = (
"475 827 OFFCURVE",
"417 885 OFFCURVE",
"417 1038 CURVE SMOOTH",
"417 1190 OFFCURVE",
"476 1243 OFFCURVE",
"630 1243 CURVE SMOOTH",
"785 1243 OFFCURVE",
"841 1191 OFFCURVE",
"841 1038 CURVE SMOOTH",
"841 885 OFFCURVE",
"786 827 OFFCURVE",
"630 827 CURVE"
);
},
{
closed = 1;
nodes = (
"395 589 OFFCURVE",
"466 641 OFFCURVE",
"630 641 CURVE SMOOTH",
"795 641 OFFCURVE",
"866 589 OFFCURVE",
"866 406 CURVE SMOOTH",
"866 221 OFFCURVE",
"797 188 OFFCURVE",
"630 188 CURVE SMOOTH",
"464 188 OFFCURVE",
"395 222 OFFCURVE",
"395 406 CURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01266 12 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01236 12 76 4 \012CALL[ ]	/* CallFunction */\012NPUSHB[ ]	/* 11 values pushed */\0126 66 22 66 38 66 54 66 70 66 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\0128 0 66 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 3 values pushed */\01213 0 66 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01213 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHB[ ]	/* 11 values pushed */\0129 76 25 76 41 76 57 76 73 76 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01223 76 36 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01223 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 3 values pushed */\01229 76 36 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 2 values pushed */\01251 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0129 51 25 51 41 51 57 51 73 51 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01213 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01261 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01236 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01287 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01218 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01241 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01241 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\01246 4 81 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\0128 81 46 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 3 values pushed */\01229 81 46 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01218 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01256 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0128 56 24 56 40 56 56 56 72 56 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01241 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01271 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 71 23 71 39 71 55 71 71 71 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1258;
}
);
leftKerningGroup = eight;
note = eight;
rightKerningGroup = eight;
},
{
color = 0;
glyphname = nine.tf;
lastChange = "2022-05-11 05:13:45 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"279 16 OFFCURVE",
"315 6 OFFCURVE",
"353 -2 CURVE SMOOTH",
"418 -17 OFFCURVE",
"504 -31 OFFCURVE",
"591 -31 CURVE SMOOTH",
"794 -31 OFFCURVE",
"918 -3 OFFCURVE",
"998 58 CURVE SMOOTH",
"1078 118 OFFCURVE",
"1115 214 OFFCURVE",
"1115 350 CURVE SMOOTH",
"1115 799 LINE SMOOTH",
"1115 972 OFFCURVE",
"1108 1103 OFFCURVE",
"1083 1200 CURVE SMOOTH",
"1071 1249 OFFCURVE",
"1054 1290 OFFCURVE",
"1033 1323 CURVE SMOOTH",
"990 1389 OFFCURVE",
"923 1427 OFFCURVE",
"828 1444 CURVE SMOOTH",
"780 1452 OFFCURVE",
"723 1456 OFFCURVE",
"628 1456 CURVE SMOOTH",
"477 1456 OFFCURVE",
"359 1431 OFFCURVE",
"279 1358 CURVE SMOOTH",
"198 1285 OFFCURVE",
"155 1165 OFFCURVE",
"155 973 CURVE SMOOTH",
"155 794 OFFCURVE",
"190 676 OFFCURVE",
"250 602 CURVE SMOOTH",
"310 528 OFFCURVE",
"396 498 OFFCURVE",
"499 498 CURVE SMOOTH",
"601 498 OFFCURVE",
"770 518 OFFCURVE",
"875 567 CURVE",
"875 389 LINE SMOOTH",
"875 313 OFFCURVE",
"852 264 OFFCURVE",
"801 235 CURVE SMOOTH",
"749 206 OFFCURVE",
"639 195 OFFCURVE",
"524 195 CURVE SMOOTH",
"452 195 OFFCURVE",
"382 199 OFFCURVE",
"330 206 CURVE SMOOTH",
"299 209 OFFCURVE",
"271 212 OFFCURVE",
"245 217 CURVE",
"245 27 LINE"
);
},
{
closed = 1;
nodes = (
"545 713 OFFCURVE",
"489 724 OFFCURVE",
"452 761 CURVE SMOOTH",
"415 798 OFFCURVE",
"399 864 OFFCURVE",
"399 973 CURVE SMOOTH",
"399 1081 OFFCURVE",
"413 1146 OFFCURVE",
"449 1184 CURVE SMOOTH",
"485 1222 OFFCURVE",
"541 1233 OFFCURVE",
"628 1233 CURVE SMOOTH",
"743 1233 OFFCURVE",
"797 1220 OFFCURVE",
"830 1183 CURVE SMOOTH",
"863 1146 OFFCURVE",
"875 1083 OFFCURVE",
"875 983 CURVE SMOOTH",
"875 741 LINE",
"880 741 OFFCURVE",
"841 732 OFFCURVE",
"810 727 CURVE SMOOTH",
"769 720 OFFCURVE",
"714 713 OFFCURVE",
"628 713 CURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01266 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01266 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01221 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01234 12 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01250 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01221 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01261 12 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0126 61 22 61 38 61 54 61 70 61 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01234 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01267 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01226 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01226 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01239 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01239 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\01245 3 16 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01239 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0122 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 2 23 2 39 2 55 2 71 2 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 3 values pushed */\01211 16 45 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01226 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01256 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0128 56 24 56 40 56 56 56 72 56 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1258;
}
);
leftKerningGroup = nine;
note = nine;
rightKerningGroup = nine;
},
{
glyphname = zero.tf.zero;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = zero;
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1375;
}
);
leftKerningGroup = zero;
leftMetricsKey = zero;
rightKerningGroup = zero;
rightMetricsKey = zero;
},
{
glyphname = onesuperior;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"446 672 LINE",
"446 1554 LINE",
"106 1554 LINE",
"65 1386 LINE",
"259 1386 LINE",
"259 672 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\0123 14 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0123 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0127 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 4 values pushed */\0122 7 1 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 574;
}
);
leftKerningGroup = onesuperior;
note = onesuperior;
rightKerningGroup = onesuperior;
unicode = 00B9;
},
{
glyphname = twosuperior;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"651 672 LINE",
"651 840 LINE",
"342 840 LINE",
"342 842 LINE",
"414 899.333 OFFCURVE",
"490.5 969.5 OFFCURVE",
"548.5 1047.5 CURVE SMOOTH",
"606.5 1125.5 OFFCURVE",
"647 1213 OFFCURVE",
"647 1309 CURVE SMOOTH",
"647 1478.401 OFFCURVE",
"533.249 1567 OFFCURVE",
"362 1567 CURVE SMOOTH",
"274 1567 OFFCURVE",
"208.667 1555.667 OFFCURVE",
"162 1545 CURVE SMOOTH",
"135.333 1538.333 OFFCURVE",
"112 1531.333 OFFCURVE",
"92 1524 CURVE",
"92 1393 LINE",
"111.333 1395 OFFCURVE",
"132 1397.333 OFFCURVE",
"154 1400 CURVE SMOOTH",
"172.667 1401.333 OFFCURVE",
"193.5 1402.833 OFFCURVE",
"216.5 1404.5 CURVE SMOOTH",
"239.5 1406.167 OFFCURVE",
"262.667 1407 OFFCURVE",
"286 1407 CURVE SMOOTH",
"399.333 1407 OFFCURVE",
"456 1362.667 OFFCURVE",
"456 1274 CURVE SMOOTH",
"456 1218 OFFCURVE",
"423.167 1155.5 OFFCURVE",
"358.5 1077.5 CURVE SMOOTH",
"293.833 999.5 OFFCURVE",
"195.667 907 OFFCURVE",
"65 791 CURVE",
"65 672 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01223 16 5 4 \012CALL[ ]	/* CallFunction */\012NPUSHB[ ]	/* 11 values pushed */\0129 5 25 5 41 5 57 5 73 5 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01230 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01230 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01234 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 4 values pushed */\01230 7 31 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01218 7 7 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0127 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01210 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0127 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01212 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 711;
}
);
leftKerningGroup = twosuperior;
note = twosuperior;
rightKerningGroup = twosuperior;
unicode = 00B2;
},
{
glyphname = threesuperior;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"88 688.667 OFFCURVE",
"112.333 682.333 OFFCURVE",
"139 677 CURVE SMOOTH",
"185.667 667.667 OFFCURVE",
"248 659 OFFCURVE",
"320 659 CURVE SMOOTH",
"414.667 659 OFFCURVE",
"492.5 674.833 OFFCURVE",
"546.5 715.5 CURVE SMOOTH",
"600.5 756.167 OFFCURVE",
"631 822.667 OFFCURVE",
"631 924 CURVE SMOOTH",
"631 1056.075 OFFCURVE",
"574.601 1099.58 OFFCURVE",
"500 1128 CURVE",
"500 1133 LINE",
"558.401 1145.978 OFFCURVE",
"607 1213.677 OFFCURVE",
"607 1317 CURVE SMOOTH",
"607 1504.432 OFFCURVE",
"492.054 1567 OFFCURVE",
"310 1567 CURVE SMOOTH",
"243.333 1567 OFFCURVE",
"184 1555.667 OFFCURVE",
"140 1545 CURVE SMOOTH",
"114 1538.333 OFFCURVE",
"90 1531.333 OFFCURVE",
"68 1524 CURVE",
"68 1399 LINE",
"88.667 1401 OFFCURVE",
"110.333 1403.333 OFFCURVE",
"133 1406 CURVE SMOOTH",
"171.667 1408.667 OFFCURVE",
"222.333 1413 OFFCURVE",
"273 1413 CURVE SMOOTH",
"377 1413 OFFCURVE",
"429 1383 OFFCURVE",
"429 1303 CURVE SMOOTH",
"429 1214.225 OFFCURVE",
"358.44 1192.324 OFFCURVE",
"212 1190 CURVE",
"212 1049 LINE",
"372.005 1041.941 OFFCURVE",
"443 1030.115 OFFCURVE",
"443 934 CURVE SMOOTH",
"443 845.504 OFFCURVE",
"394.082 819 OFFCURVE",
"255 819 CURVE SMOOTH",
"215 819 OFFCURVE",
"167.333 821.333 OFFCURVE",
"130 824 CURVE SMOOTH",
"108 825.333 OFFCURVE",
"86.667 827 OFFCURVE",
"66 829 CURVE",
"66 696 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01251 14 10 4 \012CALL[ ]	/* CallFunction */\012NPUSHB[ ]	/* 11 values pushed */\0129 10 25 10 41 10 57 10 73 10 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01221 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01240 14 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 3 values pushed */\01246 10 51 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01251 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01263 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 4 values pushed */\0125 7 56 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01235 7 24 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01216 7 15 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0125 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0125 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0122 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01224 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01227 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01227 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01224 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01229 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01229 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 3 values pushed */\01246 15 16 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 676;
}
);
leftKerningGroup = threesuperior;
note = threesuperior;
rightKerningGroup = threesuperior;
unicode = 00B3;
},
{
glyphname = foursuperior;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"446 825 LINE",
"446 669 LINE",
"633 669 LINE",
"633 825 LINE",
"747 825 LINE",
"747 981 LINE",
"633 981 LINE",
"633 1552 LINE",
"340 1552 LINE",
"45 948 LINE",
"45 825 LINE"
);
},
{
closed = 1;
nodes = (
"440 1410 LINE",
"446 1410 LINE",
"446 981 LINE",
"246 981 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01251 14 10 4 \012CALL[ ]	/* CallFunction */\012NPUSHB[ ]	/* 11 values pushed */\0129 10 25 10 41 10 57 10 73 10 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01221 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01240 14 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 3 values pushed */\01246 10 51 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01251 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01263 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 4 values pushed */\0125 7 56 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01235 7 24 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01216 7 15 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0125 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0125 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0122 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01224 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01227 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01227 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01224 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01229 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01229 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 3 values pushed */\01246 15 16 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 767;
}
);
leftKerningGroup = foursuperior;
note = threesuperior;
rightKerningGroup = foursuperior;
unicode = 2074;
},
{
glyphname = fraction;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"251 0 LINE",
"894 1554 LINE",
"653 1554 LINE",
"10 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0122 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 924;
}
);
leftKerningGroup = fraction;
note = fraction;
rightKerningGroup = fraction;
unicode = 2044;
},
{
glyphname = onehalf;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"442 0 LINE",
"1147 1554 LINE",
"961 1554 LINE",
"256 0 LINE"
);
},
{
closed = 1;
nodes = (
"1548 0 LINE",
"1548 168 LINE",
"1239 168 LINE",
"1239 170 LINE",
"1311 228.667 OFFCURVE",
"1387.5 297.5 OFFCURVE",
"1445.5 375.5 CURVE SMOOTH",
"1503.5 453.5 OFFCURVE",
"1544 541 OFFCURVE",
"1544 637 CURVE SMOOTH",
"1544 806.401 OFFCURVE",
"1430.249 895 OFFCURVE",
"1259 895 CURVE SMOOTH",
"1171 895 OFFCURVE",
"1105.667 883.667 OFFCURVE",
"1059 873 CURVE SMOOTH",
"1032.333 866.333 OFFCURVE",
"1009 859.333 OFFCURVE",
"989 852 CURVE",
"989 721 LINE",
"1009 723 OFFCURVE",
"1030 725.333 OFFCURVE",
"1052 728 CURVE SMOOTH",
"1070.667 729.333 OFFCURVE",
"1091.5 730.833 OFFCURVE",
"1114.5 732.5 CURVE SMOOTH",
"1137.5 734.167 OFFCURVE",
"1160.667 735 OFFCURVE",
"1184 735 CURVE SMOOTH",
"1297.333 735 OFFCURVE",
"1354 690.667 OFFCURVE",
"1354 602 CURVE SMOOTH",
"1354 547.333 OFFCURVE",
"1321.167 483.5 OFFCURVE",
"1256.5 405.5 CURVE SMOOTH",
"1191.833 327.5 OFFCURVE",
"1094 235 OFFCURVE",
"962 119 CURVE",
"962 0 LINE"
);
},
{
closed = 1;
nodes = (
"373 672 LINE",
"373 1554 LINE",
"33 1554 LINE",
"-8 1386 LINE",
"186 1386 LINE",
"186 672 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01243 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0129 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01243 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01237 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01237 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHB[ ]	/* 11 values pushed */\0129 9 25 9 41 9 57 9 73 9 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\0129 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01227 14 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01234 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01234 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 3 values pushed */\0121 37 34 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01237 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01240 14 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 3 values pushed */\0123 37 40 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01227 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01244 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0122 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01235 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01235 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\01239 7 38 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01222 7 11 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01239 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01211 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01214 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01214 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01211 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01216 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01216 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01235 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01233 7 \012MIRP[10100]	/* MoveIndirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1559;
}
);
leftKerningGroup = onehalf;
note = onehalf;
rightKerningGroup = onehalf;
unicode = 00BD;
},
{
glyphname = onequarter;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"428 0 LINE",
"1132 1554 LINE",
"946 1554 LINE",
"241 0 LINE"
);
},
{
closed = 1;
nodes = (
"1188 156 LINE",
"1188 0 LINE",
"1375 0 LINE",
"1375 156 LINE",
"1489 156 LINE",
"1489 312 LINE",
"1375 312 LINE",
"1375 883 LINE",
"1082 883 LINE",
"787 279 LINE",
"787 156 LINE"
);
},
{
closed = 1;
nodes = (
"1182 741 LINE",
"1188 741 LINE",
"1188 312 LINE",
"988 312 LINE"
);
},
{
closed = 1;
nodes = (
"381 672 LINE",
"381 1554 LINE",
"41 1554 LINE",
"0 1386 LINE",
"194 1386 LINE",
"194 672 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01225 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01219 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01211 14 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 3 values pushed */\0121 19 11 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01219 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01222 14 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 3 values pushed */\0123 19 22 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01211 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0126 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01215 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01217 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01217 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01211 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01226 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0122 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01211 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01211 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\01221 7 20 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\0125 7 17 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01221 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01211 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0127 9 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01215 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01218 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1499;
}
);
leftKerningGroup = onequarter;
note = onequarter;
rightKerningGroup = onequarter;
unicode = 00BC;
},
{
glyphname = threequarters;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"584 0 LINE",
"1289 1554 LINE",
"1102 1554 LINE",
"398 0 LINE"
);
},
{
closed = 1;
nodes = (
"1321 156 LINE",
"1321 0 LINE",
"1508 0 LINE",
"1508 156 LINE",
"1622 156 LINE",
"1622 312 LINE",
"1508 312 LINE",
"1508 883 LINE",
"1215 883 LINE",
"920 279 LINE",
"920 156 LINE"
);
},
{
closed = 1;
nodes = (
"1315 741 LINE",
"1321 741 LINE",
"1321 312 LINE",
"1121 312 LINE"
);
},
{
closed = 1;
nodes = (
"62 688.667 OFFCURVE",
"86.333 682.333 OFFCURVE",
"113 677 CURVE SMOOTH",
"159.667 667.667 OFFCURVE",
"222 659 OFFCURVE",
"294 659 CURVE SMOOTH",
"388.667 659 OFFCURVE",
"466.5 674.833 OFFCURVE",
"520.5 715.5 CURVE SMOOTH",
"574.5 756.167 OFFCURVE",
"605 822.667 OFFCURVE",
"605 924 CURVE SMOOTH",
"605 1056.075 OFFCURVE",
"548.601 1099.58 OFFCURVE",
"474 1128 CURVE",
"474 1133 LINE",
"532.401 1145.978 OFFCURVE",
"581 1213.677 OFFCURVE",
"581 1317 CURVE SMOOTH",
"581 1504.432 OFFCURVE",
"466.054 1567 OFFCURVE",
"284 1567 CURVE SMOOTH",
"217.333 1567 OFFCURVE",
"158 1555.667 OFFCURVE",
"114 1545 CURVE SMOOTH",
"88 1538.333 OFFCURVE",
"64 1531.333 OFFCURVE",
"42 1524 CURVE",
"42 1399 LINE",
"62.667 1401 OFFCURVE",
"84.333 1403.333 OFFCURVE",
"107 1406 CURVE SMOOTH",
"145.667 1408.667 OFFCURVE",
"196.333 1413 OFFCURVE",
"247 1413 CURVE SMOOTH",
"351 1413 OFFCURVE",
"403 1383 OFFCURVE",
"403 1303 CURVE SMOOTH",
"403 1214.225 OFFCURVE",
"332.44 1192.324 OFFCURVE",
"186 1190 CURVE",
"186 1049 LINE",
"346.005 1041.941 OFFCURVE",
"417 1030.115 OFFCURVE",
"417 934 CURVE SMOOTH",
"417 845.504 OFFCURVE",
"368.082 819 OFFCURVE",
"229 819 CURVE SMOOTH",
"189 819 OFFCURVE",
"141.333 821.333 OFFCURVE",
"104 824 CURVE SMOOTH",
"82 825.333 OFFCURVE",
"60.667 827 OFFCURVE",
"40 829 CURVE",
"40 696 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01211 14 12 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01270 14 29 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01229 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01240 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01240 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 3 values pushed */\0121 40 11 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01211 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0126 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01215 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 3 values pushed */\01217 40 11 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 3 values pushed */\01218 40 11 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01229 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01259 14 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0126 70 22 70 38 70 54 70 70 70 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01265 29 70 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01211 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01282 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0122 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01211 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01211 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\01254 7 43 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01235 7 34 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01224 7 75 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\0125 7 17 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01254 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 3 values pushed */\0121 43 54 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01211 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0127 9 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01215 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01218 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01224 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01219 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01224 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01221 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01243 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01246 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01246 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01243 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01248 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01248 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 3 values pushed */\01265 34 35 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1632;
}
);
leftKerningGroup = threequarters;
note = threequarters;
rightKerningGroup = threequarters;
unicode = 00BE;
},
{
glyphname = period;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"103 16.741 OFFCURVE",
"133.818 -14 OFFCURVE",
"255 -14 CURVE SMOOTH",
"376.452 -14 OFFCURVE",
"409 15.607 OFFCURVE",
"409 139 CURVE SMOOTH",
"409 264.449 OFFCURVE",
"377.276 291 OFFCURVE",
"255 291 CURVE SMOOTH",
"133 291 OFFCURVE",
"103 263.311 OFFCURVE",
"103 139 CURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01210 15 0 4 \012CALL[ ]	/* CallFunction */\012NPUSHB[ ]	/* 11 values pushed */\0126 10 22 10 38 10 54 10 70 10 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01221 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01215 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01215 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 2 values pushed */\0125 9 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 5 23 5 39 5 55 5 71 5 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 512;
}
);
leftKerningGroup = period;
note = period;
rightKerningGroup = period;
unicode = 002E;
},
{
glyphname = comma;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"105 29.667 OFFCURVE",
"138 -8.333 OFFCURVE",
"218 -19 CURVE",
"215.411 -119.963 OFFCURVE",
"160.153 -256.064 OFFCURVE",
"103 -334 CURVE",
"193 -399 LINE",
"231.667 -375 OFFCURVE",
"286.833 -306.5 OFFCURVE",
"331.5 -220.5 CURVE SMOOTH",
"376.167 -134.5 OFFCURVE",
"411 -30 OFFCURVE",
"411 70 CURVE SMOOTH",
"411 205.565 OFFCURVE",
"390.339 281 OFFCURVE",
"257 281 CURVE SMOOTH",
"137.257 281 OFFCURVE",
"105 247.156 OFFCURVE",
"105 127 CURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01210 16 21 4 \012CALL[ ]	/* CallFunction */\012NPUSHB[ ]	/* 11 values pushed */\0129 21 25 21 41 21 57 21 73 21 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01225 \012MDRP[11100]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 512;
}
);
leftKerningGroup = period;
note = comma;
rightKerningGroup = period;
unicode = 002C;
},
{
glyphname = colon;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
components = (
{
name = period;
},
{
name = period;
transform = "{1, 0, 0, 1, 0, 680}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 512;
}
);
leftKerningGroup = period;
note = colon;
rightKerningGroup = period;
unicode = 003A;
},
{
glyphname = semicolon;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
components = (
{
name = period;
transform = "{1, 0, 0, 1, 2, 680}";
},
{
name = comma;
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 512;
}
);
leftKerningGroup = period;
note = semicolon;
rightKerningGroup = period;
unicode = 003B;
},
{
glyphname = ellipsis;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"1042 13.014 OFFCURVE",
"1070.315 -16 OFFCURVE",
"1175 -16 CURVE SMOOTH",
"1281.343 -16 OFFCURVE",
"1310 12.657 OFFCURVE",
"1310 119 CURVE SMOOTH",
"1310 224.15 OFFCURVE",
"1281.331 252 OFFCURVE",
"1175 252 CURVE SMOOTH",
"1070.328 252 OFFCURVE",
"1042 223.794 OFFCURVE",
"1042 119 CURVE"
);
},
{
closed = 1;
nodes = (
"575 13.014 OFFCURVE",
"603.315 -16 OFFCURVE",
"708 -16 CURVE SMOOTH",
"814.343 -16 OFFCURVE",
"843 12.657 OFFCURVE",
"843 119 CURVE SMOOTH",
"843 224.15 OFFCURVE",
"814.331 252 OFFCURVE",
"708 252 CURVE SMOOTH",
"603.328 252 OFFCURVE",
"575 223.794 OFFCURVE",
"575 119 CURVE"
);
},
{
closed = 1;
nodes = (
"102 13.014 OFFCURVE",
"130.315 -16 OFFCURVE",
"235 -16 CURVE SMOOTH",
"341.343 -16 OFFCURVE",
"370 12.657 OFFCURVE",
"370 119 CURVE SMOOTH",
"370 224.15 OFFCURVE",
"341.331 252 OFFCURVE",
"235 252 CURVE SMOOTH",
"130.328 252 OFFCURVE",
"102 223.794 OFFCURVE",
"102 119 CURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01250 15 40 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01230 15 20 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01210 15 0 4 \012CALL[ ]	/* CallFunction */\012NPUSHB[ ]	/* 11 values pushed */\0129 0 25 0 41 0 57 0 73 0 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHB[ ]	/* 11 values pushed */\0129 20 25 20 41 20 57 20 73 20 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHB[ ]	/* 11 values pushed */\0126 50 22 50 38 50 54 50 70 50 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01261 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01215 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01215 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01235 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01235 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01255 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01255 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01215 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0125 6 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 5 23 5 39 5 55 5 71 5 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01225 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01245 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1412;
}
);
leftKerningGroup = period;
note = ellipsis;
rightKerningGroup = period;
unicode = 2026;
},
{
glyphname = exclam;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"412 436 LINE",
"412 1427 LINE",
"172 1427 LINE",
"172 436 LINE"
);
},
{
closed = 1;
nodes = (
"139 16.741 OFFCURVE",
"169.818 -14 OFFCURVE",
"291 -14 CURVE SMOOTH",
"412.452 -14 OFFCURVE",
"445 15.607 OFFCURVE",
"445 139 CURVE SMOOTH",
"445 264.449 OFFCURVE",
"413.276 291 OFFCURVE",
"291 291 CURVE SMOOTH",
"169 291 OFFCURVE",
"139 263.311 OFFCURVE",
"139 139 CURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01214 15 4 4 \012CALL[ ]	/* CallFunction */\012NPUSHB[ ]	/* 11 values pushed */\0126 14 22 14 38 14 54 14 70 14 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\0120 4 14 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\0121 12 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01214 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01225 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01219 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 2 values pushed */\0129 9 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 9 23 9 39 9 55 9 71 9 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 513;
}
);
leftKerningGroup = exclam;
note = exclam;
rightKerningGroup = exclam;
unicode = 0021;
},
{
glyphname = exclamdown;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
components = (
{
name = exclam;
transform = "{-0.99994, 0, 0, -0.99994, 584, 1424}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 584;
}
);
leftKerningGroup = exclamdown;
note = exclamdown;
rightKerningGroup = exclamdown;
unicode = 00A1;
},
{
glyphname = question;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"583 422 LINE",
"583 600 LINE",
"668.333 617.333 OFFCURVE",
"754.667 649.167 OFFCURVE",
"820 712.5 CURVE SMOOTH",
"885.333 775.833 OFFCURVE",
"929 872 OFFCURVE",
"929 1020 CURVE SMOOTH",
"929 1192 OFFCURVE",
"877 1300 OFFCURVE",
"797 1364 CURVE SMOOTH",
"717 1428 OFFCURVE",
"610.333 1450 OFFCURVE",
"501 1450 CURVE SMOOTH",
"386.333 1450 OFFCURVE",
"290 1434.833 OFFCURVE",
"222 1419.5 CURVE SMOOTH",
"170.077 1407.792 OFFCURVE",
"109.002 1389 OFFCURVE",
"116 1389 CURVE",
"116 1208 LINE",
"147.333 1213.333 OFFCURVE",
"179 1218 OFFCURVE",
"211 1222 CURVE SMOOTH",
"267 1228.667 OFFCURVE",
"334 1237 OFFCURVE",
"394 1237 CURVE SMOOTH",
"490 1237 OFFCURVE",
"561.667 1227.167 OFFCURVE",
"611 1194.5 CURVE SMOOTH",
"660.333 1161.833 OFFCURVE",
"685 1106.667 OFFCURVE",
"685 1016 CURVE SMOOTH",
"685 922.667 OFFCURVE",
"657 865.167 OFFCURVE",
"601 828.5 CURVE SMOOTH",
"545 791.833 OFFCURVE",
"459.667 777.333 OFFCURVE",
"345 768 CURVE",
"345 422 LINE"
);
},
{
closed = 1;
nodes = (
"312 16.741 OFFCURVE",
"342.818 -14 OFFCURVE",
"464 -14 CURVE SMOOTH",
"585.452 -14 OFFCURVE",
"618 15.607 OFFCURVE",
"618 139 CURVE SMOOTH",
"618 264.449 OFFCURVE",
"586.276 291 OFFCURVE",
"464 291 CURVE SMOOTH",
"342 291 OFFCURVE",
"312 263.311 OFFCURVE",
"312 139 CURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01226 12 5 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01244 15 34 4 \012CALL[ ]	/* CallFunction */\012NPUSHB[ ]	/* 11 values pushed */\0126 44 22 44 38 44 54 44 70 44 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\0120 34 44 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHB[ ]	/* 11 values pushed */\0129 5 25 5 41 5 57 5 73 5 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 2 values pushed */\01231 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01226 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01255 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01221 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01249 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01249 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01221 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01210 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0128 10 24 10 40 10 56 10 72 10 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01249 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01239 9 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 39 23 39 39 39 55 39 71 39 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1026;
}
);
leftKerningGroup = question;
note = question;
rightKerningGroup = question;
unicode = 003F;
},
{
glyphname = questiondown;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"586.276 1145 OFFCURVE",
"618 1171.551 OFFCURVE",
"618 1297 CURVE SMOOTH",
"618 1420.393 OFFCURVE",
"585.452 1450 OFFCURVE",
"464 1450 CURVE SMOOTH",
"342.818 1450 OFFCURVE",
"312 1419.259 OFFCURVE",
"312 1297 CURVE SMOOTH",
"312 1172.689 OFFCURVE",
"342 1145 OFFCURVE",
"464 1145 CURVE"
);
},
{
closed = 1;
nodes = (
"109.002 47 OFFCURVE",
"170.077 28.208 OFFCURVE",
"222 16.5 CURVE SMOOTH",
"290 1.167 OFFCURVE",
"386.333 -14 OFFCURVE",
"501 -14 CURVE SMOOTH",
"610.333 -14 OFFCURVE",
"717 8 OFFCURVE",
"797 72 CURVE SMOOTH",
"877 136 OFFCURVE",
"929 244 OFFCURVE",
"929 416 CURVE SMOOTH",
"929 564 OFFCURVE",
"885.333 660.167 OFFCURVE",
"820 723.5 CURVE SMOOTH",
"754.667 786.833 OFFCURVE",
"668.333 818.667 OFFCURVE",
"583 836 CURVE",
"583 1014 LINE",
"345 1014 LINE",
"345 668 LINE",
"459.667 658.667 OFFCURVE",
"545 644.167 OFFCURVE",
"601 607.5 CURVE SMOOTH",
"657 570.833 OFFCURVE",
"685 513.333 OFFCURVE",
"685 420 CURVE SMOOTH",
"685 329.333 OFFCURVE",
"660.333 274.167 OFFCURVE",
"611 241.5 CURVE SMOOTH",
"561.667 208.833 OFFCURVE",
"490 199 OFFCURVE",
"394 199 CURVE SMOOTH",
"334 199 OFFCURVE",
"267 206.333 OFFCURVE",
"211 213 CURVE SMOOTH",
"179 217 OFFCURVE",
"147.333 222 OFFCURVE",
"116 228 CURVE",
"116 47 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01243 12 30 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01215 15 5 4 \012CALL[ ]	/* CallFunction */\012NPUSHB[ ]	/* 11 values pushed */\0126 15 22 15 38 15 54 15 70 15 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHB[ ]	/* 11 values pushed */\0129 30 25 30 41 30 57 30 73 30 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01235 5 15 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01235 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01238 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01243 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01255 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01210 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01248 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01248 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0120 9 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 7 values pushed */\01240 0 56 0 72 0 3 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 5 values pushed */\0128 0 24 0 2 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01248 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01222 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 22 23 22 39 22 55 22 71 22 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01225 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1031;
}
);
leftKerningGroup = questiondown;
note = questiondown;
rightKerningGroup = questiondown;
unicode = 00BF;
},
{
glyphname = periodcentered;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
components = (
{
name = period;
transform = "{1, 0, 0, 1, 0, 553}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 510;
}
);
leftKerningGroup = period;
note = periodcentered;
rightKerningGroup = period;
unicode = 00B7;
},
{
glyphname = bullet;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"505.918 344 OFFCURVE",
"553 390.264 OFFCURVE",
"553 569 CURVE SMOOTH",
"553 748.93 OFFCURVE",
"506.035 795 OFFCURVE",
"326 795 CURVE SMOOTH",
"151.125 795 OFFCURVE",
"102 748.249 OFFCURVE",
"102 569 CURVE SMOOTH",
"102 390.946 OFFCURVE",
"151.249 344 OFFCURVE",
"326 344 CURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01215 15 5 4 \012CALL[ ]	/* CallFunction */\012NPUSHB[ ]	/* 11 values pushed */\0129 5 25 5 41 5 57 5 73 5 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01215 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01221 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 4 values pushed */\01210 9 0 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 689;
}
);
leftKerningGroup = bullet;
note = bullet;
rightKerningGroup = bullet;
unicode = 2022;
},
{
glyphname = asterisk;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"428 979 LINE",
"592 739 LINE",
"758 860 LINE",
"577 1085 LINE",
"860 1165 LINE",
"797 1362 LINE",
"526 1260 LINE",
"537 1554 LINE",
"334 1554 LINE",
"342 1268 LINE",
"68 1366 LINE",
"6 1174 LINE",
"283 1094 LINE",
"102 862 LINE",
"268 741 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0121 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01210 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 866;
}
);
leftKerningGroup = asterisk;
note = asterisk;
rightKerningGroup = asterisk;
unicode = 002A;
},
{
glyphname = numbersign;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"381 0 LINE",
"467 376 LINE",
"741 376 LINE",
"655 0 LINE",
"865 0 LINE",
"951 376 LINE",
"1203 376 LINE",
"1203 560 LINE",
"993 560 LINE",
"1064 869 LINE",
"1307 869 LINE",
"1307 1053 LINE",
"1107 1053 LINE",
"1193 1428 LINE",
"983 1428 LINE",
"897 1053 LINE",
"623 1053 LINE",
"709 1428 LINE",
"499 1428 LINE",
"413 1053 LINE",
"164 1053 LINE",
"164 869 LINE",
"370 869 LINE",
"299 560 LINE",
"60 560 LINE",
"60 376 LINE",
"257 376 LINE",
"171 0 LINE"
);
},
{
closed = 1;
nodes = (
"580 869 LINE",
"854 869 LINE",
"783 560 LINE",
"509 560 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0128 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0128 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01212 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0126 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01210 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01214 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01214 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01222 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01226 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01226 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\0123 4 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0124 4 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01216 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01217 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0123 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01218 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01220 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01224 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0123 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01228 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01217 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01229 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01230 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1319;
}
);
leftKerningGroup = numbersign;
note = numbersign;
rightKerningGroup = numbersign;
unicode = 0023;
},
{
glyphname = slash;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"251 0 LINE",
"894 1554 LINE",
"653 1554 LINE",
"10 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0122 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 924;
}
);
leftKerningGroup = slash;
note = slash;
rightKerningGroup = slash;
unicode = 002F;
},
{
glyphname = backslash;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"915 0 LINE",
"272 1554 LINE",
"30 1554 LINE",
"673 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0122 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 925;
}
);
leftKerningGroup = backslash;
note = backslash;
rightKerningGroup = backslash;
unicode = 005C;
},
{
glyphname = parenleft;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"608 -266 LINE",
"565.333 -189.333 OFFCURVE",
"527.333 -100.667 OFFCURVE",
"494 0 CURVE SMOOTH",
"466 85.333 OFFCURVE",
"437.333 190.5 OFFCURVE",
"416 312.5 CURVE SMOOTH",
"394.667 434.5 OFFCURVE",
"381 573.667 OFFCURVE",
"381 727 CURVE SMOOTH",
"381 880.333 OFFCURVE",
"394.667 1019.5 OFFCURVE",
"416 1141.5 CURVE SMOOTH",
"437.333 1263.5 OFFCURVE",
"466 1368.333 OFFCURVE",
"494 1455 CURVE SMOOTH",
"527.333 1555.667 OFFCURVE",
"565.333 1644.667 OFFCURVE",
"608 1722 CURVE",
"422 1722 LINE",
"368 1665.333 OFFCURVE",
"320 1590.667 OFFCURVE",
"278 1498 CURVE SMOOTH",
"242 1419.333 OFFCURVE",
"206.833 1317 OFFCURVE",
"179.5 1189 CURVE SMOOTH",
"152.167 1061 OFFCURVE",
"135 907.667 OFFCURVE",
"135 725 CURVE SMOOTH",
"135 543.667 OFFCURVE",
"152.167 390.667 OFFCURVE",
"179.5 264 CURVE SMOOTH",
"206.833 137.333 OFFCURVE",
"242 36.667 OFFCURVE",
"278 -42 CURVE SMOOTH",
"320 -134 OFFCURVE",
"368 -208.667 OFFCURVE",
"422 -266 CURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01222 12 7 4 \012CALL[ ]	/* CallFunction */\012NPUSHB[ ]	/* 11 values pushed */\0126 22 22 22 38 22 54 22 70 22 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 3 values pushed */\01214 0 3 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01229 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 648;
}
);
leftKerningGroup = parenleft;
note = parenleft;
rightKerningGroup = parenleft;
unicode = 0028;
},
{
glyphname = parenright;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"226 -266 LINE",
"279.333 -208.667 OFFCURVE",
"326.667 -134 OFFCURVE",
"368 -42 CURVE SMOOTH",
"404 36.667 OFFCURVE",
"439.333 137.333 OFFCURVE",
"466 264 CURVE SMOOTH",
"492.667 390.667 OFFCURVE",
"511 543.667 OFFCURVE",
"511 725 CURVE SMOOTH",
"511 907.667 OFFCURVE",
"492.667 1061 OFFCURVE",
"466 1189 CURVE SMOOTH",
"439.333 1317 OFFCURVE",
"404 1419.333 OFFCURVE",
"368 1498 CURVE SMOOTH",
"326.667 1590.667 OFFCURVE",
"279.333 1665.333 OFFCURVE",
"226 1722 CURVE",
"40 1722 LINE",
"82 1644.667 OFFCURVE",
"119.667 1555.667 OFFCURVE",
"153 1455 CURVE SMOOTH",
"181 1368.333 OFFCURVE",
"209.667 1263.5 OFFCURVE",
"231 1141.5 CURVE SMOOTH",
"252.333 1019.5 OFFCURVE",
"267 880.333 OFFCURVE",
"267 727 CURVE SMOOTH",
"267 573.667 OFFCURVE",
"252.333 434.5 OFFCURVE",
"231 312.5 CURVE SMOOTH",
"209.667 190.5 OFFCURVE",
"181 85.333 OFFCURVE",
"153 0 CURVE SMOOTH",
"119.667 -100.667 OFFCURVE",
"82 -189.333 OFFCURVE",
"40 -266 CURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01222 12 7 4 \012CALL[ ]	/* CallFunction */\012NPUSHB[ ]	/* 11 values pushed */\0129 7 25 7 41 7 57 7 73 7 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01222 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01232 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 3 values pushed */\01214 0 3 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01229 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 646;
}
);
leftKerningGroup = parenright;
note = parenright;
rightKerningGroup = parenright;
unicode = 0029;
},
{
glyphname = braceleft;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"256 -90.667 OFFCURVE",
"272.333 -168.167 OFFCURVE",
"311 -219.5 CURVE SMOOTH",
"349.667 -270.833 OFFCURVE",
"412.667 -297 OFFCURVE",
"506 -297 CURVE SMOOTH",
"586 -297 OFFCURVE",
"647.333 -290.667 OFFCURVE",
"690 -284 CURVE SMOOTH",
"715.333 -280 OFFCURVE",
"737.333 -275.333 OFFCURVE",
"756 -270 CURVE",
"756 -100 LINE",
"633.333 -100 OFFCURVE",
"565.333 -96.333 OFFCURVE",
"528 -71 CURVE SMOOTH",
"490.667 -45.667 OFFCURVE",
"485 0 OFFCURVE",
"485 84 CURVE SMOOTH",
"485 582 LINE SMOOTH",
"485 664.667 OFFCURVE",
"448.833 719.5 OFFCURVE",
"409.5 753.5 CURVE SMOOTH",
"376.138 782.338 OFFCURVE",
"332.808 801.043 OFFCURVE",
"315 805 CURVE",
"373.927 822.678 OFFCURVE",
"485 887.467 OFFCURVE",
"485 1030 CURVE SMOOTH",
"485 1528 LINE SMOOTH",
"485 1610.667 OFFCURVE",
"490.667 1656.667 OFFCURVE",
"528 1682 CURVE SMOOTH",
"565.333 1707.333 OFFCURVE",
"633.333 1712 OFFCURVE",
"756 1712 CURVE",
"756 1882 LINE",
"737.333 1886.667 OFFCURVE",
"715.333 1890.667 OFFCURVE",
"690 1894 CURVE SMOOTH",
"647.333 1900.667 OFFCURVE",
"586 1907 OFFCURVE",
"506 1907 CURVE SMOOTH",
"412.667 1907 OFFCURVE",
"349.667 1880.833 OFFCURVE",
"311 1829.5 CURVE SMOOTH",
"272.333 1778.167 OFFCURVE",
"256 1701.667 OFFCURVE",
"256 1599 CURVE SMOOTH",
"256 1165 LINE SMOOTH",
"256 1065 OFFCURVE",
"242.333 1007.833 OFFCURVE",
"213 972.5 CURVE SMOOTH",
"183.667 937.167 OFFCURVE",
"140.667 923 OFFCURVE",
"82 911 CURVE",
"82 700 LINE",
"140.667 688 OFFCURVE",
"183.667 674 OFFCURVE",
"213 638 CURVE SMOOTH",
"242.333 602 OFFCURVE",
"256 544 OFFCURVE",
"256 444 CURVE SMOOTH",
"256 12 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01239 13 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01211 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01239 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01228 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 3 values pushed */\01234 0 39 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 4 values pushed */\01245 8 51 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01217 8 23 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01217 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01220 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01220 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 772;
}
);
leftKerningGroup = braceleft;
note = braceleft;
rightKerningGroup = braceleft;
unicode = 007B;
},
{
glyphname = braceright;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"34.667 -275.333 OFFCURVE",
"56.667 -280 OFFCURVE",
"82 -284 CURVE SMOOTH",
"124.667 -290.667 OFFCURVE",
"186 -297 OFFCURVE",
"266 -297 CURVE SMOOTH",
"359.333 -297 OFFCURVE",
"421.167 -270.833 OFFCURVE",
"460.5 -219.5 CURVE SMOOTH",
"499.833 -168.167 OFFCURVE",
"516 -90.667 OFFCURVE",
"516 12 CURVE SMOOTH",
"516 444 LINE SMOOTH",
"516 544 OFFCURVE",
"529.667 602 OFFCURVE",
"559 638 CURVE SMOOTH",
"588.333 674 OFFCURVE",
"631.333 688 OFFCURVE",
"690 700 CURVE",
"690 911 LINE",
"631.333 923 OFFCURVE",
"588.333 937.167 OFFCURVE",
"559 972.5 CURVE SMOOTH",
"529.667 1007.833 OFFCURVE",
"516 1065 OFFCURVE",
"516 1165 CURVE SMOOTH",
"516 1599 LINE SMOOTH",
"516 1701.667 OFFCURVE",
"499.833 1778.167 OFFCURVE",
"460.5 1829.5 CURVE SMOOTH",
"421.167 1880.833 OFFCURVE",
"359.333 1907 OFFCURVE",
"266 1907 CURVE SMOOTH",
"186 1907 OFFCURVE",
"124.667 1900.667 OFFCURVE",
"82 1894 CURVE SMOOTH",
"56.667 1890.667 OFFCURVE",
"34.667 1886.667 OFFCURVE",
"16 1882 CURVE",
"16 1712 LINE",
"138.667 1712 OFFCURVE",
"206.833 1707.333 OFFCURVE",
"243.5 1682 CURVE SMOOTH",
"280.167 1656.667 OFFCURVE",
"286 1610.667 OFFCURVE",
"286 1528 CURVE SMOOTH",
"286 1030 LINE SMOOTH",
"286 887.748 OFFCURVE",
"397.841 822.448 OFFCURVE",
"456 805 CURVE",
"438.645 801.143 OFFCURVE",
"395.549 782.017 OFFCURVE",
"362 753.5 CURVE SMOOTH",
"322 719.5 OFFCURVE",
"286 664.667 OFFCURVE",
"286 582 CURVE SMOOTH",
"286 84 LINE SMOOTH",
"286 0 OFFCURVE",
"280.167 -45.667 OFFCURVE",
"243.5 -71 CURVE SMOOTH",
"206.833 -96.333 OFFCURVE",
"138.667 -100 OFFCURVE",
"16 -100 CURVE",
"16 -270 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 3 values pushed */\01228 51 3 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\01211 51 28 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01228 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01225 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 772;
}
);
leftKerningGroup = braceright;
note = braceright;
rightKerningGroup = braceright;
unicode = 007D;
},
{
glyphname = bracketleft;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"680 -330 LINE",
"680 -104 LINE",
"416 -104 LINE",
"416 1718 LINE",
"680 1718 LINE",
"680 1944 LINE",
"182 1944 LINE",
"182 -330 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\0123 13 0 4 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 4 values pushed */\0125 3 6 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\0121 3 2 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 680;
}
);
leftKerningGroup = bracketleft;
note = bracketleft;
rightKerningGroup = bracketleft;
unicode = 005B;
},
{
glyphname = bracketright;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"0 -330 LINE",
"498 -330 LINE",
"498 1944 LINE",
"0 1944 LINE",
"0 1718 LINE",
"262 1718 LINE",
"262 -104 LINE",
"0 -104 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\0125 13 0 4 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 4 values pushed */\0120 3 5 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\0124 3 1 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 680;
}
);
leftKerningGroup = bracketright;
note = bracketright;
rightKerningGroup = bracketright;
unicode = 005D;
},
{
glyphname = hyphen;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"734 475 LINE",
"734 702 LINE",
"60 702 LINE",
"60 475 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 4 values pushed */\0121 3 2 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 794;
}
);
leftKerningGroup = hyphen;
note = hyphen;
rightKerningGroup = hyphen;
unicode = 002D;
},
{
glyphname = softhyphen;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
components = (
{
name = hyphen;
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 794;
}
);
leftKerningGroup = hyphen;
rightKerningGroup = hyphen;
unicode = 00AD;
},
{
glyphname = endash;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"1080 475 LINE",
"1080 702 LINE",
"60 702 LINE",
"60 475 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 4 values pushed */\0121 3 2 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1140;
}
);
leftKerningGroup = hyphen;
note = endash;
rightKerningGroup = hyphen;
unicode = 2013;
},
{
glyphname = emdash;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"2106 475 LINE",
"2106 702 LINE",
"60 702 LINE",
"60 475 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 4 values pushed */\0121 3 2 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 2166;
}
);
leftKerningGroup = hyphen;
note = emdash;
rightKerningGroup = hyphen;
unicode = 2014;
},
{
glyphname = underscore;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"-10 -248 LINE",
"985 -248 LINE",
"985 -78 LINE",
"-10 -78 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 4 values pushed */\0120 7 1 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 975;
}
);
leftKerningGroup = underscore;
note = underscore;
rightKerningGroup = underscore;
unicode = 005F;
},
{
glyphname = quotesinglbase;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
components = (
{
name = comma;
transform = "{1, 0, 0, 1, -2, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 508;
}
);
leftKerningGroup = comma;
note = quotesinglbase;
rightKerningGroup = period;
unicode = 201A;
},
{
glyphname = quotedblbase;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
components = (
{
name = comma;
transform = "{1, 0, 0, 1, 505, -7}";
},
{
name = comma;
transform = "{1, 0, 0, 1, 38, -7}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1026;
}
);
leftKerningGroup = comma;
note = quotedblbase;
rightKerningGroup = period;
unicode = 201E;
},
{
glyphname = quotedblleft;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
components = (
{
name = comma;
transform = "{-0.99994, 0, 0, -0.99994, 515, 1300}";
},
{
name = comma;
transform = "{-0.99994, 0, 0, -0.99994, 982, 1300}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1026;
}
);
leftKerningGroup = quotedblleft;
note = quotedblleft;
rightKerningGroup = quotedblleft;
unicode = 201C;
},
{
glyphname = quotedblright;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
components = (
{
name = comma;
transform = "{1, 0, 0, 1, 38, 1343}";
},
{
name = comma;
transform = "{1, 0, 0, 1, 505, 1343}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1026;
}
);
leftKerningGroup = comma;
note = quotedblright;
rightKerningGroup = period;
unicode = 201D;
},
{
glyphname = quoteleft;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
components = (
{
name = comma;
transform = "{-0.99994, 0, 0, -0.99994, 505, 1300}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 508;
}
);
leftKerningGroup = quotedblleft;
note = quoteleft;
rightKerningGroup = quotedblleft;
unicode = 2018;
},
{
glyphname = quoteright;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
components = (
{
name = comma;
transform = "{1, 0, 0, 1, -2, 1348}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 508;
}
);
leftKerningGroup = comma;
note = quoteright;
rightKerningGroup = period;
unicode = 2019;
},
{
glyphname = guillemetleft;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
components = (
{
name = guilsinglleft;
transform = "{1, 0, 0, 1, -35, 0}";
},
{
name = guilsinglleft;
transform = "{1, 0, 0, 1, 542, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1197;
}
);
leftKerningGroup = guilsinglleft;
note = guillemotleft;
rightKerningGroup = guilsinglleft;
unicode = 00AB;
},
{
glyphname = guillemetright;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
components = (
{
name = guilsinglleft;
transform = "{-0.99994, 0, 0, 1, 655, 0}";
},
{
name = guilsinglleft;
transform = "{-0.99994, 0, 0, 1, 1233, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1197;
}
);
leftKerningGroup = guillemetright;
note = guillemotright;
rightKerningGroup = guillemetright;
unicode = 00BB;
},
{
glyphname = guilsinglleft;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"570 86 LINE",
"570 358 LINE",
"297 532 LINE",
"297 557 LINE",
"570 731 LINE",
"570 1004 LINE",
"113 688 LINE",
"113 401 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\0123 14 0 4 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 3 values pushed */\0121 6 3 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 684;
}
);
leftKerningGroup = guillemotleft;
note = guilsinglleft;
rightKerningGroup = guillemotleft;
unicode = 2039;
},
{
glyphname = guilsinglright;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"570 688 LINE",
"113 1004 LINE",
"113 731 LINE",
"386 557 LINE",
"386 532 LINE",
"113 358 LINE",
"113 86 LINE",
"570 401 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\0127 15 1 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0127 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0129 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 3 values pushed */\0125 0 3 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 684;
}
);
leftKerningGroup = guillemotright;
note = guilsinglright;
rightKerningGroup = guillemotright;
unicode = 203A;
},
{
glyphname = quotedbl;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"722 1147 LINE",
"745 1630 LINE",
"507 1630 LINE",
"530 1147 LINE"
);
},
{
closed = 1;
nodes = (
"329 1147 LINE",
"352 1630 LINE",
"114 1630 LINE",
"137 1147 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 4 values pushed */\0121 9 2 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0122 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0126 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 860;
}
);
leftKerningGroup = quotedbl;
note = quotedbl;
rightKerningGroup = quotedbl;
unicode = 0022;
},
{
glyphname = quotesingle;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"352 1147 LINE",
"375 1630 LINE",
"137 1630 LINE",
"160 1147 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 4 values pushed */\0121 9 2 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 513;
}
);
leftKerningGroup = quotesingle;
note = quotesingle;
rightKerningGroup = quotesingle;
unicode = 0027;
},
{
glyphname = "mediumspace-math";
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 455;
}
);
leftKerningGroup = "mediumspace-math";
widthMetricsKey = "=455";
rightKerningGroup = "mediumspace-math";
unicode = 205F;
},
{
glyphname = emquad;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 2048;
}
);
leftKerningGroup = emquad;
widthMetricsKey = "=2048";
rightKerningGroup = emquad;
unicode = 2001;
},
{
glyphname = emspace;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 2048;
}
);
leftKerningGroup = emspace;
widthMetricsKey = "=2048";
rightKerningGroup = emspace;
unicode = 2003;
},
{
glyphname = enquad;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1024;
}
);
leftKerningGroup = enquad;
widthMetricsKey = "=1024";
rightKerningGroup = enquad;
unicode = 2000;
},
{
glyphname = enspace;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1024;
}
);
leftKerningGroup = enspace;
widthMetricsKey = "=1024";
rightKerningGroup = enspace;
unicode = 2002;
},
{
glyphname = figurespace;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1375;
}
);
leftKerningGroup = figurespace;
widthMetricsKey = "=zero";
rightKerningGroup = figurespace;
unicode = 2007;
},
{
glyphname = fourperemspace;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 512;
}
);
leftKerningGroup = fourperemspace;
widthMetricsKey = "=512";
rightKerningGroup = fourperemspace;
unicode = 2005;
},
{
glyphname = hairspace;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 143;
}
);
leftKerningGroup = hairspace;
widthMetricsKey = "=143";
rightKerningGroup = hairspace;
unicode = 200A;
},
{
glyphname = narrownbspace;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 102;
}
);
leftKerningGroup = narrownbspace;
widthMetricsKey = "=space*0.2";
rightKerningGroup = narrownbspace;
unicode = 202F;
},
{
glyphname = punctuationspace;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 512;
}
);
leftKerningGroup = punctuationspace;
widthMetricsKey = "=period";
rightKerningGroup = punctuationspace;
unicode = 2008;
},
{
glyphname = sixperemspace;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 341;
}
);
leftKerningGroup = sixperemspace;
widthMetricsKey = "=341";
rightKerningGroup = sixperemspace;
unicode = 2006;
},
{
glyphname = space;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 512;
}
);
leftKerningGroup = space;
note = space;
rightKerningGroup = space;
unicode = 0020;
},
{
glyphname = nbspace;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 512;
}
);
leftKerningGroup = nbspace;
widthMetricsKey = "=space";
note = nonbreakingspace;
rightKerningGroup = nbspace;
unicode = 00A0;
},
{
glyphname = thinspace;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 256;
}
);
leftKerningGroup = thinspace;
widthMetricsKey = "=256";
rightKerningGroup = thinspace;
unicode = 2009;
},
{
glyphname = threeperemspace;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 682;
}
);
leftKerningGroup = threeperemspace;
widthMetricsKey = "=682";
rightKerningGroup = threeperemspace;
unicode = 2004;
},
{
glyphname = zerowidthspace;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 0;
}
);
leftKerningGroup = zerowidthspace;
widthMetricsKey = "=0";
rightKerningGroup = zerowidthspace;
unicode = 200B;
},
{
glyphname = CR;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1178;
}
);
leftKerningGroup = CR;
note = CR;
rightKerningGroup = CR;
unicode = 000D;
},
{
glyphname = .notdef;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"817.322 22.962 OFFCURVE",
"857.748 -0.643 OFFCURVE",
"881 6 CURVE SMOOTH",
"895 11.333 OFFCURVE",
"906.833 23.833 OFFCURVE",
"916.5 43.5 CURVE SMOOTH",
"926.167 63.167 OFFCURVE",
"934 93.667 OFFCURVE",
"940 135 CURVE SMOOTH",
"1001 512 LINE SMOOTH",
"1003 528.667 OFFCURVE",
"1004 544 OFFCURVE",
"1004 558 CURVE SMOOTH",
"1004 587.333 OFFCURVE",
"999.667 616 OFFCURVE",
"981 664 CURVE SMOOTH",
"678 1432 LINE",
"436 1554 LINE",
"297 1501 LINE",
"166 1448 LINE",
"74 1188 LINE",
"373 422 LINE SMOOTH",
"393.921 366.21 OFFCURVE",
"422.969 329.884 OFFCURVE",
"459 299 CURVE",
"760 68 LINE"
);
},
{
closed = 1;
nodes = (
"174 1217 LINE",
"231 1378 LINE",
"334 1417 LINE",
"430 1456 LINE",
"584 1374 LINE",
"522 1227 LINE",
"326 1149 LINE"
);
},
{
closed = 1;
nodes = (
"278.667 1242.667 OFFCURVE",
"307 1229 OFFCURVE",
"343 1229 CURVE SMOOTH",
"363.667 1229 OFFCURVE",
"385.333 1233.667 OFFCURVE",
"408 1243 CURVE SMOOTH",
"463.156 1265.564 OFFCURVE",
"506.133 1316.022 OFFCURVE",
"489 1356 CURVE SMOOTH",
"479.667 1378.667 OFFCURVE",
"452.667 1392 OFFCURVE",
"418 1392 CURVE SMOOTH",
"398 1392 OFFCURVE",
"376.667 1387.333 OFFCURVE",
"354 1378 CURVE SMOOTH",
"297.056 1358.193 OFFCURVE",
"253.797 1304.927 OFFCURVE",
"268 1268 CURVE"
);
},
{
closed = 1;
nodes = (
"641 1276 LINE",
"899 610 LINE",
"895 604 OFFCURVE",
"890.667 597.667 OFFCURVE",
"886 591 CURVE SMOOTH",
"878 580.333 OFFCURVE",
"865.333 565.667 OFFCURVE",
"852 551 CURVE",
"598 1182 LINE"
);
},
{
closed = 1;
nodes = (
"599.667 546.667 OFFCURVE",
"556.833 652.833 OFFCURVE",
"514.5 756.5 CURVE SMOOTH",
"472.167 860.167 OFFCURVE",
"429.667 966.333 OFFCURVE",
"387 1075 CURVE",
"453 1104 LINE",
"524 1130 LINE",
"557.831 1042.251 OFFCURVE",
"617.44 892.949 OFFCURVE",
"650 810.5 CURVE SMOOTH",
"682.647 727.83 OFFCURVE",
"742.028 579.054 OFFCURVE",
"776 492 CURVE",
"770.667 488 OFFCURVE",
"764.333 484.333 OFFCURVE",
"757 481 CURVE SMOOTH",
"745 474.333 OFFCURVE",
"727.667 467.667 OFFCURVE",
"709 461 CURVE SMOOTH",
"686.333 450.333 OFFCURVE",
"670.5 443.833 OFFCURVE",
"661.5 441.5 CURVE SMOOTH",
"652.5 439.167 OFFCURVE",
"646.333 438 OFFCURVE",
"643 438 CURVE"
);
},
{
closed = 1;
nodes = (
"415.667 552.667 OFFCURVE",
"373.167 663.5 OFFCURVE",
"331.5 772.5 CURVE SMOOTH",
"289.833 881.5 OFFCURVE",
"247 992 OFFCURVE",
"203 1104 CURVE",
"295 1063 LINE",
"543 432 LINE",
"508.333 432 OFFCURVE",
"487 433.333 OFFCURVE",
"475 436 CURVE SMOOTH",
"467.667 437.333 OFFCURVE",
"462.333 438.667 OFFCURVE",
"459 440 CURVE"
);
},
{
closed = 1;
nodes = (
"573 334 LINE SMOOTH",
"618.333 334 OFFCURVE",
"677 340.333 OFFCURVE",
"745 367 CURVE SMOOTH",
"817 393.667 OFFCURVE",
"866.333 429.667 OFFCURVE",
"897 463 CURVE",
"891.667 429 OFFCURVE",
"886.667 397.333 OFFCURVE",
"882 368 CURVE SMOOTH",
"875.919 329.487 OFFCURVE",
"865.488 261.208 OFFCURVE",
"860 242 CURVE",
"860 244 LINE",
"852 214.667 OFFCURVE",
"844.333 199.333 OFFCURVE",
"811 186 CURVE",
"813 186 LINE",
"787.667 178 OFFCURVE",
"771.667 181.667 OFFCURVE",
"745 199 CURVE SMOOTH",
"748 197 LINE",
"567 334 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0129 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 4 values pushed */\01240 7 50 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\01259 50 40 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1092;
}
);
leftKerningGroup = .notdef;
note = .notdef;
rightKerningGroup = .notdef;
},
{
glyphname = .null;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 0;
}
);
leftKerningGroup = .null;
note = .null;
rightKerningGroup = .null;
},
{
glyphname = cent;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"450 -205 LINE",
"686 -205 LINE",
"686 -19 LINE",
"750 -9.667 OFFCURVE",
"797 4 OFFCURVE",
"829 16 CURVE SMOOTH",
"847.667 23.333 OFFCURVE",
"863.667 30.333 OFFCURVE",
"877 37 CURVE",
"877 203 LINE",
"857.667 199 OFFCURVE",
"836 195.667 OFFCURVE",
"812 193 CURVE SMOOTH",
"770.667 187.667 OFFCURVE",
"714.333 184 OFFCURVE",
"649 184 CURVE SMOOTH",
"545 184 OFFCURVE",
"469.667 196.5 OFFCURVE",
"419 246.5 CURVE SMOOTH",
"368.333 296.5 OFFCURVE",
"344 383.333 OFFCURVE",
"344 530 CURVE SMOOTH",
"344 674 OFFCURVE",
"364.667 758.833 OFFCURVE",
"410 807.5 CURVE SMOOTH",
"455.333 856.167 OFFCURVE",
"527 870 OFFCURVE",
"627 870 CURVE SMOOTH",
"689.667 870 OFFCURVE",
"748.667 865.667 OFFCURVE",
"794 863 CURVE SMOOTH",
"820.667 860.333 OFFCURVE",
"845.333 858 OFFCURVE",
"868 856 CURVE",
"868 1020 LINE",
"854 1026.667 OFFCURVE",
"838 1033 OFFCURVE",
"820 1039 CURVE SMOOTH",
"789.333 1049.667 OFFCURVE",
"743.333 1060.667 OFFCURVE",
"686 1070 CURVE",
"686 1270 LINE",
"450 1270 LINE",
"450 1069 LINE",
"347.333 1050.333 OFFCURVE",
"258.833 1001 OFFCURVE",
"195.5 913 CURVE SMOOTH",
"132.167 825 OFFCURVE",
"94 700 OFFCURVE",
"94 528 CURVE SMOOTH",
"94 345.333 OFFCURVE",
"132.167 218.667 OFFCURVE",
"195.5 132 CURVE SMOOTH",
"258.833 45.333 OFFCURVE",
"347.333 -0.667 OFFCURVE",
"450 -18 CURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01249 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01249 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01210 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01245 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01212 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0125 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01229 11 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0126 29 22 29 38 29 54 29 70 29 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01247 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 965;
}
);
leftKerningGroup = o;
note = cent;
rightKerningGroup = c;
unicode = 00A2;
},
{
glyphname = currency;
lastChange = "2022-05-11 04:40:54 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"221 -113 LINE",
"406 73 LINE",
"474.667 37.667 OFFCURVE",
"560.333 20 OFFCURVE",
"663 20 CURVE SMOOTH",
"767 20 OFFCURVE",
"853.667 37.667 OFFCURVE",
"923 73 CURVE",
"1110 -113 LINE",
"1286 63 LINE",
"1091 257 LINE",
"1119.667 326.333 OFFCURVE",
"1134 410.667 OFFCURVE",
"1134 510 CURVE SMOOTH",
"1134 607.333 OFFCURVE",
"1119.667 690 OFFCURVE",
"1091 758 CURVE",
"1286 952 LINE",
"1110 1128 LINE",
"922 941 LINE",
"852.667 975.667 OFFCURVE",
"766.333 993 OFFCURVE",
"663 993 CURVE SMOOTH",
"559 993 OFFCURVE",
"476 975.333 OFFCURVE",
"408 942 CURVE",
"221 1128 LINE",
"45 952 LINE",
"239 759 LINE",
"209.667 689.667 OFFCURVE",
"196 606 OFFCURVE",
"196 510 CURVE SMOOTH",
"196 410.667 OFFCURVE",
"210.333 326.333 OFFCURVE",
"239 257 CURVE",
"45 63 LINE"
);
},
{
closed = 1;
nodes = (
"442 692.547 OFFCURVE",
"481.022 793 OFFCURVE",
"663 793 CURVE SMOOTH",
"845.178 793 OFFCURVE",
"884 693.612 OFFCURVE",
"884 510 CURVE SMOOTH",
"884 418 OFFCURVE",
"875 346.167 OFFCURVE",
"843 297.5 CURVE SMOOTH",
"811 248.833 OFFCURVE",
"755 223 OFFCURVE",
"663 223 CURVE SMOOTH",
"571 223 OFFCURVE",
"516.167 248.833 OFFCURVE",
"483.5 297.5 CURVE SMOOTH",
"450.833 346.167 OFFCURVE",
"442 418 OFFCURVE",
"442 510 CURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01250 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01240 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01250 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0122 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHB[ ]	/* 11 values pushed */\0129 40 25 40 41 40 57 40 73 40 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01240 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01218 11 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0122 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01230 12 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0126 30 22 30 38 30 54 30 70 30 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01218 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01251 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 4 values pushed */\01235 5 25 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01211 1 45 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1331;
}
);
leftKerningGroup = currency;
note = currency;
rightKerningGroup = currency;
unicode = 00A4;
},
{
glyphname = dollar;
lastChange = "2022-05-11 04:40:55 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"137.333 25.667 OFFCURVE",
"161.333 15.667 OFFCURVE",
"192 7 CURVE SMOOTH",
"242.667 -7.667 OFFCURVE",
"325.667 -25 OFFCURVE",
"451 -29 CURVE",
"451 -205 LINE",
"686 -205 LINE",
"686 -22 LINE",
"816.667 -6 OFFCURVE",
"898 34.833 OFFCURVE",
"946 103.5 CURVE SMOOTH",
"994 172.167 OFFCURVE",
"1010 268.667 OFFCURVE",
"1010 398 CURVE SMOOTH",
"1010 495.333 OFFCURVE",
"1002.333 569.167 OFFCURVE",
"985 624.5 CURVE SMOOTH",
"976.333 652.167 OFFCURVE",
"964.833 676 OFFCURVE",
"950.5 696 CURVE SMOOTH",
"921.833 736 OFFCURVE",
"882.5 765.5 OFFCURVE",
"828.5 787.5 CURVE SMOOTH",
"801.5 798.5 OFFCURVE",
"770.667 809 OFFCURVE",
"736 819 CURVE SMOOTH",
"465 897 LINE SMOOTH",
"363.061 927.582 OFFCURVE",
"346 964.596 OFFCURVE",
"346 1057 CURVE SMOOTH",
"346 1134.333 OFFCURVE",
"361 1178.667 OFFCURVE",
"405 1204 CURVE SMOOTH",
"449 1229.333 OFFCURVE",
"522.333 1235 OFFCURVE",
"641 1235 CURVE SMOOTH",
"717 1235 OFFCURVE",
"790.667 1229.667 OFFCURVE",
"848 1223 CURVE SMOOTH",
"881.333 1219.667 OFFCURVE",
"913 1216 OFFCURVE",
"943 1212 CURVE",
"943 1397 LINE",
"923 1403.667 OFFCURVE",
"899.667 1410.333 OFFCURVE",
"873 1417 CURVE SMOOTH",
"827.667 1427.667 OFFCURVE",
"763.333 1441 OFFCURVE",
"686 1449 CURVE",
"686 1632 LINE",
"451 1632 LINE",
"451 1449 LINE",
"345.667 1434.333 OFFCURVE",
"259.833 1394.5 OFFCURVE",
"200.5 1328.5 CURVE SMOOTH",
"141.167 1262.5 OFFCURVE",
"108 1169.667 OFFCURVE",
"108 1047 CURVE SMOOTH",
"108 927 OFFCURVE",
"125.167 839.667 OFFCURVE",
"164.5 777 CURVE SMOOTH",
"203.833 714.333 OFFCURVE",
"267 675 OFFCURVE",
"359 651 CURVE SMOOTH",
"650 575 LINE SMOOTH",
"757.663 546.803 OFFCURVE",
"773 485.437 OFFCURVE",
"773 383 CURVE SMOOTH",
"773 320.333 OFFCURVE",
"766 272.167 OFFCURVE",
"726 239.5 CURVE SMOOTH",
"686 206.833 OFFCURVE",
"614.333 190 OFFCURVE",
"485 190 CURVE SMOOTH",
"387.667 190 OFFCURVE",
"298 194.333 OFFCURVE",
"230 201 CURVE SMOOTH",
"190.667 204.333 OFFCURVE",
"154 208.333 OFFCURVE",
"120 213 CURVE",
"120 37 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01229 13 26 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01245 13 21 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01258 13 10 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01221 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHB[ ]	/* 11 values pushed */\0129 10 25 10 41 10 57 10 73 10 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 5 values pushed */\01254 45 70 45 2 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 7 values pushed */\0126 45 22 45 38 45 3 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01229 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01263 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01226 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01265 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01258 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01273 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01263 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01263 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01266 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01266 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 2 values pushed */\0122 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 2 23 2 39 2 55 2 71 2 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1110;
}
);
leftKerningGroup = dollar;
note = dollar;
rightKerningGroup = dollar;
unicode = 0024;
},
{
glyphname = euro;
lastChange = "2022-05-11 04:40:55 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"233 466 LINE",
"267.667 267.333 OFFCURVE",
"343.833 143.667 OFFCURVE",
"440.5 69 CURVE SMOOTH",
"537.167 -5.667 OFFCURVE",
"655.333 -31 OFFCURVE",
"774 -31 CURVE SMOOTH",
"907.333 -31 OFFCURVE",
"1008.667 -14.333 OFFCURVE",
"1078 3 CURVE SMOOTH",
"1118.667 13 OFFCURVE",
"1153.333 24.333 OFFCURVE",
"1182 37 CURVE",
"1182 219 LINE",
"1158 213.667 OFFCURVE",
"1131 209.333 OFFCURVE",
"1101 206 CURVE SMOOTH",
"1049 199.333 OFFCURVE",
"977 193 OFFCURVE",
"889 193 CURVE SMOOTH",
"793 193 OFFCURVE",
"707.167 198.833 OFFCURVE",
"638.5 235.5 CURVE SMOOTH",
"569.833 272.167 OFFCURVE",
"518 340.667 OFFCURVE",
"490 466 CURVE",
"1032 466 LINE",
"1032 641 LINE",
"469 641 LINE",
"467.667 654.333 OFFCURVE",
"467 668.167 OFFCURVE",
"467 682.5 CURVE SMOOTH",
"467 696.833 OFFCURVE",
"467 711.667 OFFCURVE",
"467 727 CURVE SMOOTH",
"467 761 OFFCURVE",
"468 793.667 OFFCURVE",
"470 825 CURVE",
"1032 825 LINE",
"1032 999 LINE",
"496 999 LINE",
"525.333 1107 OFFCURVE",
"576.5 1165.167 OFFCURVE",
"642.5 1196.5 CURVE SMOOTH",
"708.5 1227.833 OFFCURVE",
"791.667 1233 OFFCURVE",
"885 1233 CURVE SMOOTH",
"958.333 1233 OFFCURVE",
"1030.667 1225.667 OFFCURVE",
"1084 1219 CURVE SMOOTH",
"1115.333 1215 OFFCURVE",
"1144.667 1210.667 OFFCURVE",
"1172 1206 CURVE",
"1172 1386 LINE",
"1148.667 1398.667 OFFCURVE",
"1119 1410.333 OFFCURVE",
"1083 1421 CURVE SMOOTH",
"1021.667 1438.333 OFFCURVE",
"928.333 1456 OFFCURVE",
"795 1456 CURVE SMOOTH",
"721.667 1456 OFFCURVE",
"644.333 1445.833 OFFCURVE",
"571 1418.5 CURVE SMOOTH",
"534.333 1404.833 OFFCURVE",
"499 1386.667 OFFCURVE",
"465 1364 CURVE SMOOTH",
"397 1318.667 OFFCURVE",
"339.333 1251 OFFCURVE",
"294 1159 CURVE SMOOTH",
"271.333 1113 OFFCURVE",
"253.333 1059.667 OFFCURVE",
"240 999 CURVE",
"72 999 LINE",
"72 825 LINE",
"216 825 LINE",
"214 793 OFFCURVE",
"213 759.667 OFFCURVE",
"213 725 CURVE SMOOTH",
"213 695.667 OFFCURVE",
"213.667 667.667 OFFCURVE",
"215 641 CURVE",
"72 641 LINE",
"72 466 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01237 11 4 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0124 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0124 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0126 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHB[ ]	/* 11 values pushed */\0126 37 22 37 38 37 54 37 70 37 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01237 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01235 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01235 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01237 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01240 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01240 \012MDAP[1]	/* MoveDirectAbsPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01216 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01216 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01259 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01259 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\01241 4 42 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\0129 7 6 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01241 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01216 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01224 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 5 values pushed */\01240 24 56 24 2 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 5 values pushed */\0128 24 24 24 2 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01272 24 1 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01227 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0129 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01232 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01234 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01259 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01248 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 48 23 48 39 48 55 48 71 48 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01251 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01251 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01242 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01264 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1237;
}
);
leftKerningGroup = euro;
note = Euro;
rightKerningGroup = euro;
unicode = 20AC;
},
{
glyphname = florin;
lastChange = "2022-05-11 04:40:55 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"369 -340 LINE",
"466 856 LINE",
"736 854 LINE",
"750 1051 LINE",
"480 1053 LINE",
"494 1239 LINE SMOOTH",
"502.544 1332.985 OFFCURVE",
"537.362 1359 OFFCURVE",
"649 1359 CURVE SMOOTH",
"697 1357.667 OFFCURVE",
"744.333 1356.667 OFFCURVE",
"779 1354 CURVE SMOOTH",
"799.667 1352.667 OFFCURVE",
"819 1351 OFFCURVE",
"837 1349 CURVE",
"850 1525 LINE",
"828.667 1532.333 OFFCURVE",
"804.333 1539 OFFCURVE",
"777 1545 CURVE SMOOTH",
"730.333 1555.667 OFFCURVE",
"663.667 1565.667 OFFCURVE",
"581 1567 CURVE SMOOTH",
"470.333 1568.333 OFFCURVE",
"392.833 1538.333 OFFCURVE",
"341.5 1481 CURVE SMOOTH",
"290.167 1423.667 OFFCURVE",
"265 1339 OFFCURVE",
"257 1231 CURVE SMOOTH",
"243 1055 LINE",
"95 1057 LINE",
"81 860 LINE",
"229 858 LINE",
"132 -339 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0122 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01226 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01226 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\0129 5 20 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0122 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0120 1 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01228 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01228 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01228 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01227 8 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01220 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01215 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01215 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01220 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01217 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01217 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01228 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01229 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01229 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 775;
}
);
leftKerningGroup = florin;
note = florin;
rightKerningGroup = florin;
unicode = 0192;
},
{
glyphname = sterling;
lastChange = "2022-05-11 04:40:55 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"1116 0 LINE",
"1116 219 LINE",
"414 219 LINE",
"414 229 LINE",
"500.36 280.276 OFFCURVE",
"508 430.565 OFFCURVE",
"508 547 CURVE SMOOTH",
"508 623 LINE",
"946 623 LINE",
"946 823 LINE",
"508 823 LINE",
"508 1024 LINE SMOOTH",
"508 1113.333 OFFCURVE",
"514.833 1164.667 OFFCURVE",
"551.5 1194 CURVE SMOOTH",
"588.167 1223.333 OFFCURVE",
"654 1229 OFFCURVE",
"770 1229 CURVE SMOOTH",
"875.333 1229 OFFCURVE",
"962 1224.333 OFFCURVE",
"1022 1219 CURVE SMOOTH",
"1057.333 1216.333 OFFCURVE",
"1088.667 1213.333 OFFCURVE",
"1116 1210 CURVE",
"1116 1386 LINE",
"1085.333 1396.667 OFFCURVE",
"1050.667 1406.333 OFFCURVE",
"1012 1415 CURVE SMOOTH",
"945.333 1429.667 OFFCURVE",
"854.333 1444 OFFCURVE",
"741 1444 CURVE SMOOTH",
"602.333 1444 OFFCURVE",
"504.5 1426.5 OFFCURVE",
"434.5 1392.5 CURVE SMOOTH",
"399.5 1375.5 OFFCURVE",
"371.333 1354.667 OFFCURVE",
"350 1330 CURVE SMOOTH",
"307.333 1280.667 OFFCURVE",
"284 1217 OFFCURVE",
"276 1141 CURVE SMOOTH",
"272 1103 OFFCURVE",
"270 1062 OFFCURVE",
"270 1018 CURVE SMOOTH",
"270 823 LINE",
"100 823 LINE",
"100 623 LINE",
"270 623 LINE",
"270 467 LINE SMOOTH",
"270 326.361 OFFCURVE",
"231.106 242.673 OFFCURVE",
"129 193 CURVE",
"129 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01244 15 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\0126 0 44 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0129 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01238 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01233 \012MDRP[10000]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01217 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01217 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01246 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01246 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\0129 1 6 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01217 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01225 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0128 25 24 25 40 25 56 25 72 25 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01228 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0129 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01234 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01236 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01246 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01244 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1189;
}
);
leftKerningGroup = sterling;
note = sterling;
rightKerningGroup = sterling;
unicode = 00A3;
},
{
glyphname = yen;
lastChange = "2022-05-11 04:40:55 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"481 182 LINE",
"481 0 LINE",
"721 0 LINE",
"721 182 LINE",
"1020 182 LINE",
"1020 350 LINE",
"721 350 LINE",
"721 489 LINE",
"1020 489 LINE",
"1020 657 LINE",
"754 657 LINE",
"1184 1427 LINE",
"918 1427 LINE",
"600 829 LINE",
"596 829 LINE",
"276 1427 LINE",
"10 1427 LINE",
"446 657 LINE",
"174 657 LINE",
"174 489 LINE",
"481 489 LINE",
"481 350 LINE",
"174 350 LINE",
"174 182 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01216 12 1 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\0129 1 16 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01216 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01219 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01221 \012MDRP[10000]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0126 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01210 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01220 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01220 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\0125 7 2 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01220 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0120 9 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01216 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01217 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 3 values pushed */\0129 20 6 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\0125 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01212 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0122 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01214 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01217 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01218 7 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01222 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1194;
}
);
leftKerningGroup = yen;
note = yen;
rightKerningGroup = yen;
unicode = 00A5;
},
{
glyphname = divisionslash;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"251 0 LINE",
"894 1554 LINE",
"653 1554 LINE",
"10 0 LINE"
);
}
);
width = 924;
}
);
leftKerningGroup = divisionslash;
rightKerningGroup = divisionslash;
unicode = 2215;
},
{
glyphname = plus;
lastChange = "2022-05-11 04:40:55 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"623 188 LINE",
"623 565 LINE",
"967 565 LINE",
"967 764 LINE",
"621 764 LINE",
"621 1141 LINE",
"399 1141 LINE",
"399 764 LINE",
"51 764 LINE",
"51 561 LINE",
"401 561 LINE",
"401 188 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\0126 10 3 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0123 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0129 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0129 \012MDAP[1]	/* MoveDirectAbsPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 4 values pushed */\0127 1 8 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0128 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0127 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0122 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1018;
}
);
leftKerningGroup = plus;
note = plus;
rightKerningGroup = plus;
unicode = 002B;
},
{
glyphname = minus;
lastChange = "2022-05-11 04:40:55 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"752 537 LINE",
"752 764 LINE",
"60 764 LINE",
"60 537 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 4 values pushed */\0121 3 2 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 812;
}
);
leftKerningGroup = minus;
note = minus;
rightKerningGroup = minus;
unicode = 2212;
},
{
glyphname = multiply;
lastChange = "2022-05-11 04:40:55 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"496 518 LINE",
"813 193 LINE",
"959 336 LINE",
"639 666 LINE",
"953 989 LINE",
"815 1128 LINE",
"504 807 LINE",
"191 1130 LINE",
"45 987 LINE",
"361 659 LINE",
"47 334 LINE",
"185 197 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 3 values pushed */\0123 9 3 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1004;
}
);
leftKerningGroup = multiply;
note = multiply;
rightKerningGroup = multiply;
unicode = 00D7;
},
{
glyphname = divide;
lastChange = "2022-05-11 04:40:55 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"679.623 850 OFFCURVE",
"710 881.176 OFFCURVE",
"710 999 CURVE SMOOTH",
"710 1116.366 OFFCURVE",
"679.366 1147 OFFCURVE",
"562 1147 CURVE SMOOTH",
"443.431 1147 OFFCURVE",
"413 1116.505 OFFCURVE",
"413 999 CURVE SMOOTH",
"413 881.037 OFFCURVE",
"443.177 850 OFFCURVE",
"562 850 CURVE"
);
},
{
closed = 1;
nodes = (
"1064 539 LINE",
"1064 733 LINE",
"60 733 LINE",
"60 539 LINE"
);
},
{
closed = 1;
nodes = (
"413 155.404 OFFCURVE",
"444.087 125 OFFCURVE",
"562 125 CURVE SMOOTH",
"678.706 125 OFFCURVE",
"710 155.544 OFFCURVE",
"710 272 CURVE SMOOTH",
"710 391.024 OFFCURVE",
"679.734 422 OFFCURVE",
"562 422 CURVE SMOOTH",
"443.066 422 OFFCURVE",
"413 391.164 OFFCURVE",
"413 272 CURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01215 15 5 4 \012CALL[ ]	/* CallFunction */\012NPUSHB[ ]	/* 11 values pushed */\0126 15 22 15 38 15 54 15 70 15 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\0125 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01224 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01215 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01234 \012MDRP[10000]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 4 values pushed */\01229 9 39 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01210 9 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01221 8 22 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1124;
}
);
leftKerningGroup = divide;
note = divide;
rightKerningGroup = divide;
unicode = 00F7;
},
{
glyphname = equal;
lastChange = "2022-05-11 04:40:55 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"971 729 LINE",
"971 934 LINE",
"60 934 LINE",
"60 729 LINE"
);
},
{
closed = 1;
nodes = (
"971 307 LINE",
"971 514 LINE",
"60 514 LINE",
"60 307 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 4 values pushed */\0125 5 6 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\0121 5 2 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1031;
}
);
leftKerningGroup = equal;
note = equal;
rightKerningGroup = equal;
unicode = 003D;
},
{
glyphname = notequal;
lastChange = "2022-05-11 04:40:55 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"369 0 LINE",
"498 307 LINE",
"992 307 LINE",
"992 506 LINE",
"581 506 LINE",
"678 737 LINE",
"992 737 LINE",
"992 934 LINE",
"761 934 LINE",
"890 1241 LINE",
"691 1241 LINE",
"562 934 LINE",
"70 934 LINE",
"70 737 LINE",
"480 737 LINE",
"383 506 LINE",
"70 506 LINE",
"70 307 LINE",
"299 307 LINE",
"171 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01218 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\0123 1 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\0127 8 4 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0127 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01210 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0124 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01212 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0123 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01214 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01216 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1062;
}
);
leftKerningGroup = notequal;
note = notequal;
rightKerningGroup = notequal;
unicode = 2260;
},
{
glyphname = greater;
lastChange = "2022-05-11 04:40:55 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"897 762 LINE",
"82 1126 LINE",
"82 858 LINE",
"702 606 LINE",
"702 590 LINE",
"82 338 LINE",
"82 68 LINE",
"897 426 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 3 values pushed */\0125 0 3 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 969;
}
);
leftKerningGroup = greater;
note = greater;
rightKerningGroup = greater;
unicode = 003E;
},
{
glyphname = less;
lastChange = "2022-05-11 04:40:55 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"887 59 LINE",
"887 330 LINE",
"266 582 LINE",
"266 598 LINE",
"887 850 LINE",
"887 1118 LINE",
"72 754 LINE",
"72 418 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\0123 16 0 4 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 3 values pushed */\0121 6 3 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 969;
}
);
leftKerningGroup = less;
note = less;
rightKerningGroup = less;
unicode = 003C;
},
{
glyphname = greaterequal;
lastChange = "2022-05-11 04:40:55 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"915 903 LINE",
"100 1282 LINE",
"100 1014 LINE",
"717 758 LINE",
"717 750 LINE",
"100 479 LINE",
"100 225 LINE",
"915 596 LINE"
);
},
{
closed = 1;
nodes = (
"903 221 LINE",
"100 221 LINE",
"100 0 LINE",
"903 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0128 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0128 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1005;
}
);
leftKerningGroup = greaterequal;
note = greaterequal;
rightKerningGroup = greaterequal;
unicode = 2265;
},
{
glyphname = lessequal;
lastChange = "2022-05-11 04:40:55 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"905 225 LINE",
"905 479 LINE",
"289 750 LINE",
"289 758 LINE",
"905 1014 LINE",
"905 1282 LINE",
"90 903 LINE",
"90 596 LINE"
);
},
{
closed = 1;
nodes = (
"905 0 LINE",
"905 221 LINE",
"102 221 LINE",
"102 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\0123 16 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0128 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0128 \012MDAP[1]	/* MoveDirectAbsPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01210 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 2 values pushed */\0128 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1005;
}
);
leftKerningGroup = lessequal;
note = lessequal;
rightKerningGroup = lessequal;
unicode = 2264;
},
{
glyphname = plusminus;
lastChange = "2022-05-11 04:40:55 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"626 270 LINE",
"626 616 LINE",
"970 616 LINE",
"970 817 LINE",
"624 817 LINE",
"624 1194 LINE",
"403 1194 LINE",
"403 817 LINE",
"55 817 LINE",
"55 614 LINE",
"405 614 LINE",
"405 270 LINE"
);
},
{
closed = 1;
nodes = (
"970 0 LINE",
"970 193 LINE",
"55 193 LINE",
"55 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\0126 10 3 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0123 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0129 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0129 \012MDAP[1]	/* MoveDirectAbsPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01214 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01214 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\0123 5 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0123 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0126 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0128 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0128 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01214 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01212 8 \012MIRP[10100]	/* MoveIndirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1025;
}
);
leftKerningGroup = plusminus;
note = plusminus;
rightKerningGroup = plusminus;
unicode = 00B1;
},
{
glyphname = approxequal;
lastChange = "2022-05-11 04:40:55 +0000";
layers = (
{
components = (
{
name = asciitilde;
transform = "{1, 0, 0, 0.95001, 0, 286}";
},
{
name = asciitilde;
transform = "{1, 0, 0, 0.95001, 0, -133}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 1382;
}
);
leftKerningGroup = asciitilde;
note = approxequal;
rightKerningGroup = asciitilde;
unicode = 2248;
},
{
glyphname = asciitilde;
lastChange = "2022-05-11 04:40:55 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"202 362 LINE",
"239.333 467.333 OFFCURVE",
"298 516 OFFCURVE",
"386 520 CURVE SMOOTH",
"443.333 524 OFFCURVE",
"504.167 501.833 OFFCURVE",
"567.5 470.5 CURVE SMOOTH",
"599.167 454.833 OFFCURVE",
"631.833 437.667 OFFCURVE",
"665.5 419 CURVE SMOOTH",
"732.833 381.667 OFFCURVE",
"804 349.5 OFFCURVE",
"880 331.5 CURVE SMOOTH",
"918 322.5 OFFCURVE",
"957.333 319.333 OFFCURVE",
"998 322 CURVE SMOOTH",
"1098 327.333 OFFCURVE",
"1177.167 364 OFFCURVE",
"1232.5 424 CURVE SMOOTH",
"1287.833 484 OFFCURVE",
"1318 567.333 OFFCURVE",
"1322 666 CURVE",
"1181 707 LINE",
"1131.357 607.715 OFFCURVE",
"1085.966 551.726 OFFCURVE",
"996 549 CURVE SMOOTH",
"952 546.333 OFFCURVE",
"889.333 569 OFFCURVE",
"820 601 CURVE SMOOTH",
"785.333 617 OFFCURVE",
"749 634.333 OFFCURVE",
"711 653 CURVE SMOOTH",
"635 690.333 OFFCURVE",
"558.167 723.167 OFFCURVE",
"485.5 742.5 CURVE SMOOTH",
"449.167 752.167 OFFCURVE",
"415.333 756 OFFCURVE",
"384 754 CURVE SMOOTH",
"284 748.667 OFFCURVE",
"204.667 710.5 OFFCURVE",
"150 648.5 CURVE SMOOTH",
"95.333 586.5 OFFCURVE",
"64 501.667 OFFCURVE",
"60 403 CURVE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 4 values pushed */\01212 3 23 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\0125 3 30 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1382;
}
);
leftKerningGroup = asciitilde;
note = asciitilde;
rightKerningGroup = asciitilde;
unicode = 007E;
},
{
glyphname = logicalnot;
lastChange = "2022-05-11 04:40:55 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"843 653 LINE",
"843 315 LINE",
"1081 315 LINE",
"1081 866 LINE",
"40 866 LINE",
"40 653 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\0122 13 3 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0122 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0127 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 4 values pushed */\0121 3 4 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1146;
}
);
leftKerningGroup = logicalnot;
note = logicalnot;
rightKerningGroup = logicalnot;
unicode = 00AC;
},
{
glyphname = asciicircum;
lastChange = "2022-05-11 04:40:55 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"281 647 LINE",
"477 1237 LINE",
"489 1237 LINE",
"690 647 LINE",
"950 647 LINE",
"655 1427 LINE",
"315 1427 LINE",
"20 647 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 2 values pushed */\0124 8 \012MIRP[10100]	/* MoveIndirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 970;
}
);
leftKerningGroup = asciicircum;
note = asciicircum;
rightKerningGroup = asciicircum;
unicode = 005E;
},
{
glyphname = infinity;
lastChange = "2022-05-11 04:40:55 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"681 284 OFFCURVE",
"736.833 301.833 OFFCURVE",
"781.5 326.5 CURVE SMOOTH",
"803.833 338.833 OFFCURVE",
"823.333 352.667 OFFCURVE",
"840 368 CURVE SMOOTH",
"883.08 407.633 OFFCURVE",
"912.041 453.207 OFFCURVE",
"918 483 CURVE",
"922 483 LINE",
"924.687 456.132 OFFCURVE",
"956.991 406.719 OFFCURVE",
"1000 369.5 CURVE SMOOTH",
"1034.667 339.5 OFFCURVE",
"1085.167 313.833 OFFCURVE",
"1152.5 298.5 CURVE SMOOTH",
"1186.167 290.833 OFFCURVE",
"1224.333 287 OFFCURVE",
"1267 287 CURVE SMOOTH",
"1445.667 287 OFFCURVE",
"1556.333 334.5 OFFCURVE",
"1623 416.5 CURVE SMOOTH",
"1689.667 498.5 OFFCURVE",
"1712 616 OFFCURVE",
"1712 756 CURVE SMOOTH",
"1712 896 OFFCURVE",
"1682.667 1012.5 OFFCURVE",
"1612 1094.5 CURVE SMOOTH",
"1541.333 1176.5 OFFCURVE",
"1431 1223 OFFCURVE",
"1267 1223 CURVE SMOOTH",
"1199 1223 OFFCURVE",
"1143.167 1205.167 OFFCURVE",
"1098.5 1180.5 CURVE SMOOTH",
"1076.167 1168.167 OFFCURVE",
"1056.667 1154.333 OFFCURVE",
"1040 1139 CURVE SMOOTH",
"999.093 1101.365 OFFCURVE",
"964.703 1051.027 OFFCURVE",
"962 1024 CURVE",
"958 1024 LINE",
"952.051 1053.743 OFFCURVE",
"925.211 1098.375 OFFCURVE",
"880 1137.5 CURVE SMOOTH",
"845.333 1167.5 OFFCURVE",
"794.833 1193.167 OFFCURVE",
"727.5 1208.5 CURVE SMOOTH",
"693.833 1216.167 OFFCURVE",
"655.667 1220 OFFCURVE",
"613 1220 CURVE SMOOTH",
"434.333 1220 OFFCURVE",
"323.667 1172.5 OFFCURVE",
"257 1090.5 CURVE SMOOTH",
"190.333 1008.5 OFFCURVE",
"168 891 OFFCURVE",
"168 751 CURVE SMOOTH",
"168 611 OFFCURVE",
"197.333 494.5 OFFCURVE",
"268 412.5 CURVE SMOOTH",
"338.667 330.5 OFFCURVE",
"449 284 OFFCURVE",
"613 284 CURVE"
);
},
{
closed = 1;
nodes = (
"1052 920.617 OFFCURVE",
"1085.039 1019 OFFCURVE",
"1267 1019 CURVE SMOOTH",
"1425.09 1019 OFFCURVE",
"1485 913.651 OFFCURVE",
"1485 754 CURVE SMOOTH",
"1485 587.262 OFFCURVE",
"1451.954 498 OFFCURVE",
"1267 498 CURVE SMOOTH",
"1203 498 OFFCURVE",
"1159 520.833 OFFCURVE",
"1127 553.5 CURVE SMOOTH",
"1111 569.833 OFFCURVE",
"1098.167 588 OFFCURVE",
"1088.5 608 CURVE SMOOTH",
"1062.163 662.49 OFFCURVE",
"1052 718.274 OFFCURVE",
"1052 754 CURVE"
);
},
{
closed = 1;
nodes = (
"454.478 498 OFFCURVE",
"395 593.863 OFFCURVE",
"395 753 CURVE SMOOTH",
"395 920.833 OFFCURVE",
"428.562 1019 OFFCURVE",
"613 1019 CURVE SMOOTH",
"675.667 1019 OFFCURVE",
"721 994.5 OFFCURVE",
"753 960.5 CURVE SMOOTH",
"769 943.5 OFFCURVE",
"781.833 924.5 OFFCURVE",
"791.5 903.5 CURVE SMOOTH",
"817.588 846.825 OFFCURVE",
"828 788.887 OFFCURVE",
"828 753 CURVE SMOOTH",
"828 586.637 OFFCURVE",
"794.98 498 OFFCURVE",
"613 498 CURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01294 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01277 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 3 values pushed */\012143 77 1 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01280 77 1 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01232 77 1 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01262 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 3 values pushed */\012143 62 1 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01232 62 1 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01280 62 1 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01218 77 62 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 2 values pushed */\01230 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 3 values pushed */\01243 77 62 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01277 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01250 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0125 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01289 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01230 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01295 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 4 values pushed */\01272 3 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01225 5 67 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01225 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01210 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01267 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01217 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01217 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01267 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01284 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01218 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01235 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01235 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 3 values pushed */\01243 0 72 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01272 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01257 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1881;
}
);
leftKerningGroup = infinity;
note = infinity;
rightKerningGroup = infinity;
unicode = 221E;
},
{
glyphname = integral;
lastChange = "2022-05-11 04:40:55 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"65 -482 LINE",
"105 -492.667 OFFCURVE",
"156.667 -500 OFFCURVE",
"182 -500 CURVE SMOOTH",
"287.333 -500 OFFCURVE",
"360.667 -478.667 OFFCURVE",
"410 -444 CURVE SMOOTH",
"434.667 -426.667 OFFCURVE",
"454.167 -406.167 OFFCURVE",
"468.5 -382.5 CURVE SMOOTH",
"497.167 -335.167 OFFCURVE",
"511.167 -279.833 OFFCURVE",
"514.5 -220.5 CURVE SMOOTH",
"516.167 -190.833 OFFCURVE",
"517 -161.333 OFFCURVE",
"517 -132 CURVE SMOOTH",
"517 1141 LINE",
"515 1153 OFFCURVE",
"514 1164 OFFCURVE",
"514 1174 CURVE SMOOTH",
"514 1301.019 OFFCURVE",
"645.152 1321 OFFCURVE",
"766 1321 CURVE",
"766 1472 LINE",
"727.333 1480 OFFCURVE",
"686.667 1483 OFFCURVE",
"656 1483 CURVE SMOOTH",
"546.667 1483 OFFCURVE",
"472.833 1461.667 OFFCURVE",
"421.5 1427 CURVE SMOOTH",
"395.833 1409.667 OFFCURVE",
"375.667 1389.167 OFFCURVE",
"361 1365.5 CURVE SMOOTH",
"331.667 1318.167 OFFCURVE",
"318 1262.833 OFFCURVE",
"314 1203.5 CURVE SMOOTH",
"312 1173.833 OFFCURVE",
"311 1144.333 OFFCURVE",
"311 1115 CURVE SMOOTH",
"311 -158 LINE SMOOTH",
"311 -321.991 OFFCURVE",
"218.282 -327 OFFCURVE",
"65 -327 CURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01225 10 5 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01225 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01222 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01232 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01232 19 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\01213 7 17 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01232 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0120 7 \012MIRP[10100]	/* MoveIndirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 852;
}
);
leftKerningGroup = integral;
note = integral;
rightKerningGroup = integral;
unicode = 222B;
},
{
glyphname = product;
lastChange = "2022-05-11 04:40:55 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"565 -328 LINE",
"565 1169 LINE",
"1109 1169 LINE",
"1109 -328 LINE",
"1347 -328 LINE",
"1347 1169 LINE",
"1482 1169 LINE",
"1482 1380 LINE",
"192 1380 LINE",
"192 1169 LINE",
"327 1169 LINE",
"327 -328 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0127 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0127 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0126 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0129 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01213 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 4 values pushed */\0122 5 1 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0128 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1706;
}
);
leftKerningGroup = product;
note = product;
rightKerningGroup = product;
unicode = 220F;
},
{
glyphname = summation;
lastChange = "2022-05-11 04:40:55 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"63 -328 LINE",
"1094 -328 LINE",
"1094 -140 LINE",
"373 -140 LINE",
"835 511 LINE",
"373 1161 LINE",
"1094 1161 LINE",
"1094 1349 LINE",
"63 1349 LINE",
"63 1214 LINE",
"569 511 LINE",
"63 -193 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 4 values pushed */\0128 4 9 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\0123 4 4 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1196;
}
);
leftKerningGroup = summation;
note = summation;
rightKerningGroup = summation;
unicode = 2211;
},
{
glyphname = radical;
lastChange = "2022-05-11 04:40:55 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"283 647 LINE",
"638 -196 LINE",
"828 -196 LINE",
"1370 1482 LINE",
"1132 1482 LINE",
"729 116 LINE",
"455 857 LINE",
"61 857 LINE",
"61 647 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 4 values pushed */\0121 5 7 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1361;
}
);
leftKerningGroup = radical;
note = radical;
rightKerningGroup = radical;
unicode = 221A;
},
{
glyphname = micro;
lastChange = "2022-05-11 04:40:55 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"432.333 -4 OFFCURVE",
"491 -20 OFFCURVE",
"571 -20 CURVE SMOOTH",
"647 -20 OFFCURVE",
"714.333 4.333 OFFCURVE",
"765 31 CURVE SMOOTH",
"806.293 52.733 OFFCURVE",
"847.481 83.171 OFFCURVE",
"861 95 CURVE",
"885 11 OFFCURVE",
"936 -31 OFFCURVE",
"1032 -31 CURVE SMOOTH",
"1085.333 -31 OFFCURVE",
"1140 -19.667 OFFCURVE",
"1180 -9 CURVE SMOOTH",
"1203.333 -2.333 OFFCURVE",
"1225.667 5.333 OFFCURVE",
"1247 14 CURVE",
"1247 158 LINE",
"1240.333 156.667 OFFCURVE",
"1231.333 155.667 OFFCURVE",
"1220 155 CURVE SMOOTH",
"1200.667 153 OFFCURVE",
"1170 152 OFFCURVE",
"1128 152 CURVE SMOOTH",
"1077.562 152 OFFCURVE",
"1065 184.028 OFFCURVE",
"1065 262 CURVE SMOOTH",
"1065 1055 LINE",
"831 1055 LINE",
"831 227 LINE",
"811 218.333 OFFCURVE",
"788.667 210.333 OFFCURVE",
"764 203 CURVE SMOOTH",
"721.333 191 OFFCURVE",
"662 180 OFFCURVE",
"594 180 CURVE SMOOTH",
"500.667 180 OFFCURVE",
"449.167 201.333 OFFCURVE",
"420.5 248 CURVE SMOOTH",
"391.833 294.667 OFFCURVE",
"387 365 OFFCURVE",
"387 465 CURVE SMOOTH",
"387 1055 LINE",
"166 1055 LINE",
"166 -485 LINE",
"387 -485 LINE",
"387 24 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01244 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01214 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01244 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\0120 10 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01214 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01217 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 3 values pushed */\01235 14 17 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01245 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0122 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01215 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01215 21 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 19 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01232 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01232 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01240 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01240 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01229 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01229 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01240 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\0129 1 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 9 23 9 39 9 55 9 71 9 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01232 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01222 4 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 22 23 22 39 22 55 22 71 22 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01224 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01224 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 3 values pushed */\01235 32 22 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 3 values pushed */\01243 32 22 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1298;
}
);
leftKerningGroup = micro;
note = mu;
rightKerningGroup = micro;
unicode = 00B5;
},
{
glyphname = partialdiff;
lastChange = "2022-05-11 04:40:55 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"97 309 OFFCURVE",
"134.333 189.167 OFFCURVE",
"213 108.5 CURVE SMOOTH",
"291.667 27.833 OFFCURVE",
"413.333 -15 OFFCURVE",
"584 -15 CURVE SMOOTH",
"704 -15 OFFCURVE",
"788 8.167 OFFCURVE",
"852 51.5 CURVE SMOOTH",
"916 94.833 OFFCURVE",
"961 158.333 OFFCURVE",
"1001 237 CURVE SMOOTH",
"1061 354.333 OFFCURVE",
"1084 502 OFFCURVE",
"1084 674 CURVE SMOOTH",
"1084 748.667 OFFCURVE",
"1077.5 849 OFFCURVE",
"1047.5 949 CURVE SMOOTH",
"1032.5 999 OFFCURVE",
"1011.333 1048 OFFCURVE",
"984 1096 CURVE SMOOTH",
"929.333 1192 OFFCURVE",
"838.5 1268.5 OFFCURVE",
"704.5 1314.5 CURVE SMOOTH",
"637.5 1337.5 OFFCURVE",
"557.333 1349 OFFCURVE",
"464 1349 CURVE SMOOTH",
"411.202 1349 OFFCURVE",
"297.662 1338.024 OFFCURVE",
"230 1328 CURVE",
"230 1108 LINE",
"276.26 1123.42 OFFCURVE",
"416.267 1147 OFFCURVE",
"464 1147 CURVE SMOOTH",
"601.333 1147 OFFCURVE",
"700.333 1103.167 OFFCURVE",
"767 1038.5 CURVE SMOOTH",
"833.667 973.833 OFFCURVE",
"869.333 886.333 OFFCURVE",
"880 801 CURVE",
"829.633 865.758 OFFCURVE",
"725.059 930 OFFCURVE",
"563 930 CURVE SMOOTH",
"403 930 OFFCURVE",
"287.167 887.833 OFFCURVE",
"210.5 808.5 CURVE SMOOTH",
"133.833 729.167 OFFCURVE",
"97 611.667 OFFCURVE",
"97 461 CURVE"
);
},
{
closed = 1;
nodes = (
"328 534.333 OFFCURVE",
"332.333 602.5 OFFCURVE",
"363 652.5 CURVE SMOOTH",
"393.667 702.5 OFFCURVE",
"452.667 735 OFFCURVE",
"562 735 CURVE SMOOTH",
"672.667 735 OFFCURVE",
"745.833 707 OFFCURVE",
"790.5 659 CURVE SMOOTH",
"835.167 611 OFFCURVE",
"853 542.333 OFFCURVE",
"853 461 CURVE SMOOTH",
"853 416.268 OFFCURVE",
"848.756 350.943 OFFCURVE",
"819 290.5 CURVE SMOOTH",
"797.667 247.167 OFFCURVE",
"760.667 210.667 OFFCURVE",
"702 188 CURVE SMOOTH",
"672.667 176.667 OFFCURVE",
"637 171 OFFCURVE",
"595 171 CURVE SMOOTH",
"480.333 171 OFFCURVE",
"414.667 207.5 OFFCURVE",
"376 261.5 CURVE SMOOTH",
"337.333 315.5 OFFCURVE",
"328 387.667 OFFCURVE",
"328 461 CURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01268 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01258 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01268 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHB[ ]	/* 11 values pushed */\0129 58 25 58 41 58 57 58 73 58 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01258 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01233 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 3 values pushed */\01210 58 33 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01246 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0126 46 22 46 38 46 54 46 70 46 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01220 0 46 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01233 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01269 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01241 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01241 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\01226 5 15 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\0125 8 63 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\01210 63 5 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01241 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01251 4 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 51 23 51 39 51 55 51 71 51 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1194;
}
);
leftKerningGroup = partialdiff;
note = partialdiff;
rightKerningGroup = partialdiff;
unicode = 2202;
},
{
glyphname = percent;
lastChange = "2022-05-11 04:40:55 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"405 0 LINE",
"1357 1554 LINE",
"1134 1554 LINE",
"184 0 LINE"
);
},
{
closed = 1;
nodes = (
"483.333 838 OFFCURVE",
"564 859.167 OFFCURVE",
"620 914.5 CURVE SMOOTH",
"676 969.833 OFFCURVE",
"708 1058.667 OFFCURVE",
"708 1196 CURVE SMOOTH",
"708 1334.667 OFFCURVE",
"676 1424.333 OFFCURVE",
"620 1479 CURVE SMOOTH",
"564 1533.667 OFFCURVE",
"483.333 1554 OFFCURVE",
"386 1554 CURVE SMOOTH",
"287.333 1554 OFFCURVE",
"208 1533.667 OFFCURVE",
"152 1479 CURVE SMOOTH",
"96 1424.333 OFFCURVE",
"65 1334.667 OFFCURVE",
"65 1196 CURVE SMOOTH",
"65 1058.667 OFFCURVE",
"96 969.833 OFFCURVE",
"152 914.5 CURVE SMOOTH",
"208 859.167 OFFCURVE",
"287.333 838 OFFCURVE",
"386 838 CURVE"
);
},
{
closed = 1;
nodes = (
"291.04 1022 OFFCURVE",
"259 1067.404 OFFCURVE",
"259 1196 CURVE SMOOTH",
"259 1324.596 OFFCURVE",
"291.04 1370 OFFCURVE",
"386 1370 CURVE SMOOTH",
"484.2 1370 OFFCURVE",
"513 1325.469 OFFCURVE",
"513 1196 CURVE SMOOTH",
"513 1066.531 OFFCURVE",
"484.2 1022 OFFCURVE",
"386 1022 CURVE"
);
},
{
closed = 1;
nodes = (
"822 189.333 OFFCURVE",
"854 99.833 OFFCURVE",
"910 44.5 CURVE SMOOTH",
"966 -10.833 OFFCURVE",
"1046.667 -31 OFFCURVE",
"1144 -31 CURVE SMOOTH",
"1242.667 -31 OFFCURVE",
"1324 -10.833 OFFCURVE",
"1380 44.5 CURVE SMOOTH",
"1436 99.833 OFFCURVE",
"1468 189.333 OFFCURVE",
"1468 328 CURVE SMOOTH",
"1468 465.333 OFFCURVE",
"1436 554.167 OFFCURVE",
"1380 609.5 CURVE SMOOTH",
"1324 664.833 OFFCURVE",
"1242.667 686 OFFCURVE",
"1144 686 CURVE SMOOTH",
"1046.667 686 OFFCURVE",
"966 664.833 OFFCURVE",
"910 609.5 CURVE SMOOTH",
"854 554.167 OFFCURVE",
"822 465.333 OFFCURVE",
"822 328 CURVE"
);
},
{
closed = 1;
nodes = (
"1017 457.469 OFFCURVE",
"1045.8 502 OFFCURVE",
"1144 502 CURVE SMOOTH",
"1242.2 502 OFFCURVE",
"1271 457.469 OFFCURVE",
"1271 328 CURVE SMOOTH",
"1271 196.08 OFFCURVE",
"1242.731 154 OFFCURVE",
"1144 154 CURVE SMOOTH",
"1045.269 154 OFFCURVE",
"1017 196.08 OFFCURVE",
"1017 328 CURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01239 16 9 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01219 16 29 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01264 16 44 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01254 16 74 4 \012CALL[ ]	/* CallFunction */\012NPUSHB[ ]	/* 11 values pushed */\0129 74 25 74 41 74 57 74 73 74 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\0121 74 54 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 7 values pushed */\0126 39 22 39 38 39 3 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 5 values pushed */\01254 39 70 39 2 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\0123 9 39 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHB[ ]	/* 11 values pushed */\0126 19 22 19 38 19 54 19 70 19 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHB[ ]	/* 11 values pushed */\0129 44 25 44 41 44 57 44 73 44 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01254 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01285 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0122 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01259 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01259 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\01214 4 34 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01249 4 79 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01224 4 4 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01214 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01259 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01269 4 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 69 23 69 39 69 55 69 71 69 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\0123 59 69 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1526;
}
);
leftKerningGroup = percent;
note = percent;
rightKerningGroup = percent;
unicode = 0025;
},
{
glyphname = perthousand;
lastChange = "2022-05-11 04:40:55 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"406 0 LINE",
"1358 1554 LINE",
"1135 1554 LINE",
"185 0 LINE"
);
},
{
closed = 1;
nodes = (
"484.333 838 OFFCURVE",
"565 859.167 OFFCURVE",
"621 914.5 CURVE SMOOTH",
"677 969.833 OFFCURVE",
"709 1058.667 OFFCURVE",
"709 1196 CURVE SMOOTH",
"709 1334.667 OFFCURVE",
"677 1424.333 OFFCURVE",
"621 1479 CURVE SMOOTH",
"565 1533.667 OFFCURVE",
"484.333 1554 OFFCURVE",
"387 1554 CURVE SMOOTH",
"288.333 1554 OFFCURVE",
"208 1533.667 OFFCURVE",
"152 1479 CURVE SMOOTH",
"96 1424.333 OFFCURVE",
"65 1334.667 OFFCURVE",
"65 1196 CURVE SMOOTH",
"65 1058.667 OFFCURVE",
"96 969.833 OFFCURVE",
"152 914.5 CURVE SMOOTH",
"208 859.167 OFFCURVE",
"288.333 838 OFFCURVE",
"387 838 CURVE"
);
},
{
closed = 1;
nodes = (
"292.04 1022 OFFCURVE",
"260 1067.404 OFFCURVE",
"260 1196 CURVE SMOOTH",
"260 1324.596 OFFCURVE",
"292.04 1370 OFFCURVE",
"387 1370 CURVE SMOOTH",
"485.2 1370 OFFCURVE",
"514 1325.469 OFFCURVE",
"514 1196 CURVE SMOOTH",
"514 1066.531 OFFCURVE",
"485.2 1022 OFFCURVE",
"387 1022 CURVE"
);
},
{
closed = 1;
nodes = (
"1571 189.333 OFFCURVE",
"1603 99.833 OFFCURVE",
"1659 44.5 CURVE SMOOTH",
"1715 -10.833 OFFCURVE",
"1794.667 -31 OFFCURVE",
"1892 -31 CURVE SMOOTH",
"1990.667 -31 OFFCURVE",
"2072 -10.833 OFFCURVE",
"2128 44.5 CURVE SMOOTH",
"2184 99.833 OFFCURVE",
"2216 189.333 OFFCURVE",
"2216 328 CURVE SMOOTH",
"2216 465.333 OFFCURVE",
"2184 554.167 OFFCURVE",
"2128 609.5 CURVE SMOOTH",
"2072 664.833 OFFCURVE",
"1990.667 686 OFFCURVE",
"1892 686 CURVE SMOOTH",
"1794.667 686 OFFCURVE",
"1715 664.833 OFFCURVE",
"1659 609.5 CURVE SMOOTH",
"1603 554.167 OFFCURVE",
"1571 465.333 OFFCURVE",
"1571 328 CURVE"
);
},
{
closed = 1;
nodes = (
"823 189.333 OFFCURVE",
"855 99.833 OFFCURVE",
"911 44.5 CURVE SMOOTH",
"967 -10.833 OFFCURVE",
"1047.667 -31 OFFCURVE",
"1145 -31 CURVE SMOOTH",
"1242.333 -31 OFFCURVE",
"1324 -10.833 OFFCURVE",
"1380 44.5 CURVE SMOOTH",
"1436 99.833 OFFCURVE",
"1468 189.333 OFFCURVE",
"1468 328 CURVE SMOOTH",
"1468 465.333 OFFCURVE",
"1436 554.167 OFFCURVE",
"1380 609.5 CURVE SMOOTH",
"1324 664.833 OFFCURVE",
"1242.333 686 OFFCURVE",
"1145 686 CURVE SMOOTH",
"1047.667 686 OFFCURVE",
"967 664.833 OFFCURVE",
"911 609.5 CURVE SMOOTH",
"855 554.167 OFFCURVE",
"823 465.333 OFFCURVE",
"823 328 CURVE"
);
},
{
closed = 1;
nodes = (
"1765 457.469 OFFCURVE",
"1793.8 502 OFFCURVE",
"1892 502 CURVE SMOOTH",
"1990.2 502 OFFCURVE",
"2019 457.469 OFFCURVE",
"2019 328 CURVE SMOOTH",
"2019 196.08 OFFCURVE",
"1990.731 154 OFFCURVE",
"1892 154 CURVE SMOOTH",
"1793.269 154 OFFCURVE",
"1765 196.08 OFFCURVE",
"1765 328 CURVE"
);
},
{
closed = 1;
nodes = (
"1018 457.469 OFFCURVE",
"1046.8 502 OFFCURVE",
"1145 502 CURVE SMOOTH",
"1243.2 502 OFFCURVE",
"1272 457.469 OFFCURVE",
"1272 328 CURVE SMOOTH",
"1272 196.08 OFFCURVE",
"1243.731 154 OFFCURVE",
"1145 154 CURVE SMOOTH",
"1046.269 154 OFFCURVE",
"1018 196.08 OFFCURVE",
"1018 328 CURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01239 16 9 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01219 16 29 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\012104 16 64 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01274 16 114 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01284 16 44 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01254 16 94 4 \012CALL[ ]	/* CallFunction */\012NPUSHB[ ]	/* 11 values pushed */\0129 114 25 114 41 114 57 114 73 114 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\0121 114 74 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHB[ ]	/* 11 values pushed */\0126 39 22 39 38 39 54 39 70 39 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\0123 9 39 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHB[ ]	/* 11 values pushed */\0126 19 22 19 38 19 54 19 70 19 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHB[ ]	/* 11 values pushed */\0129 44 25 44 41 44 57 44 73 44 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHB[ ]	/* 11 values pushed */\0129 94 25 94 41 94 57 94 73 94 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 5 values pushed */\01254 104 70 104 2 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 7 values pushed */\0126 104 22 104 38 104 3 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01254 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\012125 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0122 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01259 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01259 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01279 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01279 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\01214 4 34 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01249 4 99 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01224 4 4 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01214 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01259 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01289 4 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 89 23 89 39 89 55 89 71 89 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\0123 59 89 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01249 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01269 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01289 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\012109 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01299 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\012119 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 2257;
}
);
leftKerningGroup = percent;
note = perthousand;
rightKerningGroup = percent;
unicode = 2030;
},
{
glyphname = lozenge;
lastChange = "2022-05-11 04:40:55 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"658 0 LINE",
"1108 681 LINE",
"658 1360 LINE",
"538 1360 LINE",
"88 680 LINE",
"538 0 LINE"
);
},
{
closed = 1;
nodes = (
"298 680 LINE",
"598 1145 LINE",
"898 681 LINE",
"598 215 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0124 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1196;
}
);
leftKerningGroup = lozenge;
note = lozenge;
rightKerningGroup = lozenge;
unicode = 25CA;
},
{
glyphname = at;
lastChange = "2022-05-11 04:40:55 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"126 478.667 OFFCURVE",
"187.5 276.833 OFFCURVE",
"313.5 149.5 CURVE SMOOTH",
"439.5 22.167 OFFCURVE",
"627.333 -31 OFFCURVE",
"882 -31 CURVE SMOOTH",
"1072.667 -31 OFFCURVE",
"1212.333 -10.333 OFFCURVE",
"1307 11 CURVE SMOOTH",
"1362.333 23 OFFCURVE",
"1409 37 OFFCURVE",
"1447 53 CURVE",
"1447 221 LINE",
"1414.333 209 OFFCURVE",
"1372 198.667 OFFCURVE",
"1320 190 CURVE SMOOTH",
"1230.667 175.333 OFFCURVE",
"1091.333 160 OFFCURVE",
"882 160 CURVE SMOOTH",
"667.333 160 OFFCURVE",
"527.667 206.167 OFFCURVE",
"441 305.5 CURVE SMOOTH",
"354.333 404.833 OFFCURVE",
"321 557.333 OFFCURVE",
"321 772 CURVE SMOOTH",
"321 977.333 OFFCURVE",
"357 1125.833 OFFCURVE",
"445 1222.5 CURVE SMOOTH",
"533 1319.167 OFFCURVE",
"672.667 1364 OFFCURVE",
"882 1364 CURVE SMOOTH",
"1043.333 1364 OFFCURVE",
"1154.833 1343.5 OFFCURVE",
"1231.5 1301.5 CURVE SMOOTH",
"1269.833 1280.5 OFFCURVE",
"1300.167 1253.833 OFFCURVE",
"1322.5 1221.5 CURVE SMOOTH",
"1367.167 1156.833 OFFCURVE",
"1389.5 1069.833 OFFCURVE",
"1395.5 958.5 CURVE SMOOTH",
"1398.5 902.833 OFFCURVE",
"1400 840.667 OFFCURVE",
"1400 772 CURVE SMOOTH",
"1400 660 OFFCURVE",
"1389.333 590.333 OFFCURVE",
"1360 549 CURVE SMOOTH",
"1330.667 507.667 OFFCURVE",
"1283.333 494 OFFCURVE",
"1210 494 CURVE",
"1210 1174 LINE",
"1044 1174 LINE",
"1019 1112 LINE",
"995 1126 OFFCURVE",
"969 1138.667 OFFCURVE",
"941 1150 CURVE SMOOTH",
"893 1168.667 OFFCURVE",
"828.333 1188 OFFCURVE",
"759 1188 CURVE SMOOTH",
"568.333 1188 OFFCURVE",
"472 1050.667 OFFCURVE",
"472 756 CURVE SMOOTH",
"472 461.333 OFFCURVE",
"568.333 324 OFFCURVE",
"759 324 CURVE SMOOTH",
"855.483 324 OFFCURVE",
"945.972 378.583 OFFCURVE",
"1015 420 CURVE",
"1042 344 LINE",
"1055.333 339.333 OFFCURVE",
"1070.667 335.667 OFFCURVE",
"1088 333 CURVE SMOOTH",
"1117.333 327.667 OFFCURVE",
"1157.333 323 OFFCURVE",
"1208 323 CURVE SMOOTH",
"1213.333 323 OFFCURVE",
"1218.333 323.167 OFFCURVE",
"1223 323.5 CURVE SMOOTH",
"1227.667 323.833 OFFCURVE",
"1232.667 324 OFFCURVE",
"1238 324 CURVE SMOOTH",
"1336.667 325.333 OFFCURVE",
"1425.833 358 OFFCURVE",
"1490.5 430 CURVE SMOOTH",
"1555.167 502 OFFCURVE",
"1595 614.667 OFFCURVE",
"1595 776 CURVE SMOOTH",
"1595 969.333 OFFCURVE",
"1578.667 1120.167 OFFCURVE",
"1536 1235.5 CURVE SMOOTH",
"1514.667 1293.167 OFFCURVE",
"1486.167 1342.167 OFFCURVE",
"1450.5 1382.5 CURVE SMOOTH",
"1379.167 1463.167 OFFCURVE",
"1275 1513.167 OFFCURVE",
"1131 1536.5 CURVE SMOOTH",
"1059 1548.167 OFFCURVE",
"976 1554 OFFCURVE",
"882 1554 CURVE SMOOTH",
"642 1554 OFFCURVE",
"452.167 1502.833 OFFCURVE",
"323.5 1379.5 CURVE SMOOTH",
"194.833 1256.167 OFFCURVE",
"126 1061.333 OFFCURVE",
"126 776 CURVE"
);
},
{
closed = 1;
nodes = (
"791.667 502 OFFCURVE",
"753.833 513.667 OFFCURVE",
"726.5 551 CURVE SMOOTH",
"699.167 588.333 OFFCURVE",
"683 652 OFFCURVE",
"683 756 CURVE SMOOTH",
"683 924.712 OFFCURVE",
"735.352 1006 OFFCURVE",
"835 1006 CURVE SMOOTH",
"877.667 1006 OFFCURVE",
"917.333 997.333 OFFCURVE",
"948 988 CURVE SMOOTH",
"965.333 982.667 OFFCURVE",
"982.333 977 OFFCURVE",
"999 971 CURVE",
"999 528 LINE",
"983 522.667 OFFCURVE",
"966.333 518.333 OFFCURVE",
"949 515 CURVE SMOOTH",
"918.333 508.333 OFFCURVE",
"878.333 502 OFFCURVE",
"837 502 CURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01262 16 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01245 10 88 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01212 16 50 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01299 10 34 4 \012CALL[ ]	/* CallFunction */\012NPUSHB[ ]	/* 11 values pushed */\0129 50 25 50 41 50 57 50 73 50 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHB[ ]	/* 11 values pushed */\0126 62 22 62 38 62 54 62 70 62 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01272 50 12 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHB[ ]	/* 11 values pushed */\0126 99 22 99 38 99 54 99 70 99 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\012105 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01278 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01278 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\0125 8 57 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01245 7 17 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\01243 42 3 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01217 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01220 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01220 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01217 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01231 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01243 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01237 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01237 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01278 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01267 8 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 67 23 67 39 67 55 67 71 67 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01245 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01283 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01283 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01237 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01294 4 \012MIRP[10100]	/* MoveIndirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1660;
}
);
leftKerningGroup = at;
note = at;
rightKerningGroup = at;
unicode = 0040;
},
{
glyphname = ampersand;
lastChange = "2022-05-11 04:40:55 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"98 223 OFFCURVE",
"132.167 122.833 OFFCURVE",
"207.5 59.5 CURVE SMOOTH",
"282.833 -3.833 OFFCURVE",
"401 -29 OFFCURVE",
"569 -29 CURVE SMOOTH",
"710.333 -29 OFFCURVE",
"843 11 OFFCURVE",
"955 111 CURVE",
"1059 0 LINE",
"1343 0 LINE",
"1076 291 LINE",
"1107.744 388.675 OFFCURVE",
"1135.78 545.476 OFFCURVE",
"1141 629 CURVE",
"950 629 LINE",
"946 598.333 OFFCURVE",
"936.667 532 OFFCURVE",
"918 464 CURVE",
"680 727 LINE",
"796 803 OFFCURVE",
"864.167 852.5 OFFCURVE",
"903.5 906.5 CURVE SMOOTH",
"942.833 960.5 OFFCURVE",
"952 1018.667 OFFCURVE",
"952 1112 CURVE SMOOTH",
"952 1202.667 OFFCURVE",
"933.667 1289.167 OFFCURVE",
"875 1352.5 CURVE SMOOTH",
"816.333 1415.833 OFFCURVE",
"718.333 1456 OFFCURVE",
"557 1456 CURVE SMOOTH",
"391.667 1456 OFFCURVE",
"297.333 1415.333 OFFCURVE",
"244 1354 CURVE SMOOTH",
"190.667 1292.667 OFFCURVE",
"178 1210 OFFCURVE",
"178 1126 CURVE SMOOTH",
"178 1059.333 OFFCURVE",
"187.167 1005 OFFCURVE",
"214.5 949 CURVE SMOOTH",
"241.833 893 OFFCURVE",
"285 834 OFFCURVE",
"353 758 CURVE",
"249 686 OFFCURVE",
"185.5 626.167 OFFCURVE",
"147.5 565.5 CURVE SMOOTH",
"109.5 504.833 OFFCURVE",
"98 443 OFFCURVE",
"98 371 CURVE"
);
},
{
closed = 1;
nodes = (
"472.172 956.81 OFFCURVE",
"399 1045.941 OFFCURVE",
"399 1110 CURVE SMOOTH",
"399 1225.56 OFFCURVE",
"436.132 1268 OFFCURVE",
"563 1268 CURVE SMOOTH",
"692.681 1268 OFFCURVE",
"731 1230.988 OFFCURVE",
"731 1110 CURVE SMOOTH",
"731 1067.333 OFFCURVE",
"724.667 1036.333 OFFCURVE",
"698 1003 CURVE SMOOTH",
"671.333 969.667 OFFCURVE",
"623.333 933.333 OFFCURVE",
"542 880 CURVE"
);
},
{
closed = 1;
nodes = (
"336 461.167 OFFCURVE",
"367.965 507.81 OFFCURVE",
"497 604 CURVE",
"814 263 LINE",
"744.475 201.2 OFFCURVE",
"652.9 182 OFFCURVE",
"575 182 CURVE SMOOTH",
"397.894 182 OFFCURVE",
"336 228.693 OFFCURVE",
"336 365 CURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01251 15 61 4 \012CALL[ ]	/* CallFunction */\012NPUSHB[ ]	/* 11 values pushed */\0126 51 22 51 38 51 54 51 70 51 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01241 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01241 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01215 \012MDRP[11100]	/* MoveDirectRelPt */\012NPUSHB[ ]	/* 27 values pushed */\0127 15 23 15 39 15 55 15 71 15 87 15 103 15 119 15 135 15 151 15 167 15 183 15 199 15 13 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 5 values pushed */\012214 15 230 15 2 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01226 41 15 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 3 values pushed */\01236 41 15 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1263;
}
);
leftKerningGroup = ampersand;
note = ampersand;
rightKerningGroup = ampersand;
unicode = 0026;
},
{
glyphname = paragraph;
lastChange = "2022-05-11 04:40:55 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"770 0 LINE",
"770 1253 LINE",
"947 1253 LINE",
"947 0 LINE",
"1157 0 LINE",
"1157 1427 LINE",
"1107.667 1432.333 OFFCURVE",
"1059 1437.333 OFFCURVE",
"1011 1442 CURVE SMOOTH",
"927 1450 OFFCURVE",
"827.333 1458 OFFCURVE",
"750 1458 CURVE SMOOTH",
"528.667 1458 OFFCURVE",
"394 1412.167 OFFCURVE",
"314 1335.5 CURVE SMOOTH",
"234 1258.833 OFFCURVE",
"210 1151.333 OFFCURVE",
"210 1026 CURVE SMOOTH",
"210 868.667 OFFCURVE",
"241.333 766.833 OFFCURVE",
"300 703.5 CURVE SMOOTH",
"358.667 640.167 OFFCURVE",
"446.667 616 OFFCURVE",
"560 616 CURVE",
"560 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01215 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01215 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01210 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01216 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01216 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01220 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01220 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01218 5 \012MIRP[10100]	/* MoveIndirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1368;
}
);
leftKerningGroup = paragraph;
note = paragraph;
rightKerningGroup = paragraph;
unicode = 00B6;
},
{
glyphname = section;
lastChange = "2022-05-11 04:40:55 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"155 -330.333 OFFCURVE",
"187 -342 OFFCURVE",
"223 -352 CURVE SMOOTH",
"284.333 -370.667 OFFCURVE",
"371 -387 OFFCURVE",
"475 -387 CURVE SMOOTH",
"663 -387 OFFCURVE",
"784.5 -353.5 OFFCURVE",
"858.5 -295.5 CURVE SMOOTH",
"932.5 -237.5 OFFCURVE",
"960 -155 OFFCURVE",
"960 -59 CURVE SMOOTH",
"960 82.333 OFFCURVE",
"932 164.333 OFFCURVE",
"852 211 CURVE",
"876.667 244.333 OFFCURVE",
"898.667 281 OFFCURVE",
"918 321 CURVE SMOOTH",
"951.333 389 OFFCURVE",
"985 484 OFFCURVE",
"985 592 CURVE SMOOTH",
"985 746.346 OFFCURVE",
"923.603 829.058 OFFCURVE",
"756 860 CURVE SMOOTH",
"465 913 LINE SMOOTH",
"373.575 929.41 OFFCURVE",
"346 960.47 OFFCURVE",
"346 1016 CURVE SMOOTH",
"346 1110.387 OFFCURVE",
"403.811 1135 OFFCURVE",
"545 1135 CURVE SMOOTH",
"619.667 1135 OFFCURVE",
"703.667 1128.667 OFFCURVE",
"769 1122 CURVE SMOOTH",
"807 1118.667 OFFCURVE",
"844.333 1114.667 OFFCURVE",
"881 1110 CURVE",
"881 1282 LINE",
"848.333 1292 OFFCURVE",
"812.667 1300.667 OFFCURVE",
"774 1308 CURVE SMOOTH",
"707.333 1321.333 OFFCURVE",
"618 1335 OFFCURVE",
"522 1335 CURVE SMOOTH",
"396.667 1335 OFFCURVE",
"296.167 1308.5 OFFCURVE",
"227.5 1254.5 CURVE SMOOTH",
"158.833 1200.5 OFFCURVE",
"121 1118.667 OFFCURVE",
"121 1008 CURVE SMOOTH",
"121 873.333 OFFCURVE",
"148.333 795 OFFCURVE",
"223 743 CURVE",
"199 710.333 OFFCURVE",
"177.667 674.333 OFFCURVE",
"159 635 CURVE SMOOTH",
"127 567 OFFCURVE",
"96 475 OFFCURVE",
"96 371 CURVE SMOOTH",
"96 234.099 OFFCURVE",
"162.786 127.861 OFFCURVE",
"332 98 CURVE SMOOTH",
"637 45 LINE SMOOTH",
"713.805 32.612 OFFCURVE",
"727 1.56 OFFCURVE",
"727 -59 CURVE SMOOTH",
"727 -97.667 OFFCURVE",
"709.167 -129.667 OFFCURVE",
"664.5 -151 CURVE SMOOTH",
"619.833 -172.333 OFFCURVE",
"547.333 -184 OFFCURVE",
"438 -184 CURVE SMOOTH",
"340.667 -184 OFFCURVE",
"263.333 -175.333 OFFCURVE",
"210 -166 CURVE SMOOTH",
"178 -160.667 OFFCURVE",
"150.333 -154.333 OFFCURVE",
"127 -147 CURVE",
"127 -317 LINE"
);
},
{
closed = 1;
nodes = (
"347.682 319.577 OFFCURVE",
"324 372.925 OFFCURVE",
"324 440 CURVE SMOOTH",
"324 490.667 OFFCURVE",
"340.333 552.333 OFFCURVE",
"359 603 CURVE SMOOTH",
"369.667 632.333 OFFCURVE",
"381.667 661.333 OFFCURVE",
"395 690 CURVE",
"631 653 LINE SMOOTH",
"740.049 636.037 OFFCURVE",
"752 602.388 OFFCURVE",
"752 528 CURVE SMOOTH",
"752 468 OFFCURVE",
"732 403.667 OFFCURVE",
"712 353 CURVE SMOOTH",
"700 323.667 OFFCURVE",
"686.667 295.333 OFFCURVE",
"672 268 CURVE",
"440 305 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01250 13 29 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01261 13 85 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01229 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHB[ ]	/* 11 values pushed */\0129 85 25 85 41 85 57 85 73 85 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01269 85 61 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01269 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01210 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0129 10 25 10 41 10 57 10 73 10 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHB[ ]	/* 11 values pushed */\0126 50 22 50 38 50 54 50 70 50 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01296 29 50 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01296 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01221 13 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01261 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\012103 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 4 values pushed */\0125 5 74 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01234 1 45 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01245 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01242 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01242 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1055;
}
);
leftKerningGroup = section;
note = section;
rightKerningGroup = section;
unicode = 00A7;
},
{
glyphname = copyright;
lastChange = "2022-05-11 04:40:55 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"915.667 211 OFFCURVE",
"1087.667 287.667 OFFCURVE",
"1213 413 CURVE SMOOTH",
"1338.333 538.333 OFFCURVE",
"1415 710.333 OFFCURVE",
"1415 901 CURVE SMOOTH",
"1415 1093 OFFCURVE",
"1338.333 1264.833 OFFCURVE",
"1213 1389.5 CURVE SMOOTH",
"1087.667 1514.167 OFFCURVE",
"915.667 1591 OFFCURVE",
"725 1591 CURVE SMOOTH",
"534.333 1591 OFFCURVE",
"362.333 1514.167 OFFCURVE",
"237 1389.5 CURVE SMOOTH",
"111.667 1264.833 OFFCURVE",
"35 1093 OFFCURVE",
"35 901 CURVE SMOOTH",
"35 710.333 OFFCURVE",
"111.667 538.333 OFFCURVE",
"237 413 CURVE SMOOTH",
"362.333 287.667 OFFCURVE",
"534.333 211 OFFCURVE",
"725 211 CURVE"
);
},
{
closed = 1;
nodes = (
"585 393 OFFCURVE",
"458 451 OFFCURVE",
"366 543 CURVE SMOOTH",
"274 635 OFFCURVE",
"217 762.333 OFFCURVE",
"217 901 CURVE SMOOTH",
"217 1041 OFFCURVE",
"274 1168.833 OFFCURVE",
"366 1261.5 CURVE SMOOTH",
"458 1354.167 OFFCURVE",
"585 1411 OFFCURVE",
"725 1411 CURVE SMOOTH",
"865 1411 OFFCURVE",
"992.833 1354.167 OFFCURVE",
"1085.5 1261.5 CURVE SMOOTH",
"1178.167 1168.833 OFFCURVE",
"1235 1041 OFFCURVE",
"1235 901 CURVE SMOOTH",
"1235 762.333 OFFCURVE",
"1178.167 635 OFFCURVE",
"1085.5 543 CURVE SMOOTH",
"992.833 451 OFFCURVE",
"865 393 OFFCURVE",
"725 393 CURVE"
);
},
{
closed = 1;
nodes = (
"807 530 OFFCURVE",
"861.667 541.333 OFFCURVE",
"899 552 CURVE SMOOTH",
"921 558.667 OFFCURVE",
"940 566.333 OFFCURVE",
"956 575 CURVE",
"956 707 LINE",
"943.333 703 OFFCURVE",
"928 699.667 OFFCURVE",
"910 697 CURVE SMOOTH",
"879.333 691.667 OFFCURVE",
"834 688 OFFCURVE",
"774 688 CURVE SMOOTH",
"639.715 688 OFFCURVE",
"598 746.534 OFFCURVE",
"598 905 CURVE SMOOTH",
"598 1061.301 OFFCURVE",
"640.332 1116 OFFCURVE",
"774 1116 CURVE SMOOTH",
"834 1116 OFFCURVE",
"876.667 1111 OFFCURVE",
"906 1107 CURVE SMOOTH",
"923.333 1104.333 OFFCURVE",
"937.333 1101.333 OFFCURVE",
"948 1098 CURVE",
"948 1229 LINE",
"933.333 1237 OFFCURVE",
"915.667 1244.333 OFFCURVE",
"895 1251 CURVE SMOOTH",
"860.333 1261.667 OFFCURVE",
"807 1274 OFFCURVE",
"735 1274 CURVE SMOOTH",
"644.333 1274 OFFCURVE",
"565.167 1253.333 OFFCURVE",
"508.5 1196 CURVE SMOOTH",
"451.833 1138.667 OFFCURVE",
"418 1045 OFFCURVE",
"418 901 CURVE SMOOTH",
"418 759.667 OFFCURVE",
"451.833 666.333 OFFCURVE",
"508.5 609 CURVE SMOOTH",
"565.167 551.667 OFFCURVE",
"644.333 530 OFFCURVE",
"735 530 CURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01235 14 5 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01266 14 45 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01215 14 25 4 \012CALL[ ]	/* CallFunction */\012NPUSHB[ ]	/* 11 values pushed */\0129 25 25 25 41 25 57 25 73 25 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHB[ ]	/* 11 values pushed */\0126 35 22 35 38 35 54 35 70 35 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01256 5 15 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHB[ ]	/* 11 values pushed */\0126 66 22 66 38 66 54 66 70 66 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01276 5 15 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01215 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01283 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 4 values pushed */\01220 4 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01210 4 30 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01271 7 40 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01250 7 61 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1450;
}
);
leftKerningGroup = copyright;
note = copyright;
rightKerningGroup = copyright;
unicode = 00A9;
},
{
glyphname = registered;
lastChange = "2022-05-11 04:40:55 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"915.667 207 OFFCURVE",
"1087.667 283.667 OFFCURVE",
"1213 409 CURVE SMOOTH",
"1338.333 534.333 OFFCURVE",
"1415 706.333 OFFCURVE",
"1415 897 CURVE SMOOTH",
"1415 1087.667 OFFCURVE",
"1338.333 1259.667 OFFCURVE",
"1213 1385 CURVE SMOOTH",
"1087.667 1510.333 OFFCURVE",
"915.667 1587 OFFCURVE",
"725 1587 CURVE SMOOTH",
"534.333 1587 OFFCURVE",
"362.333 1510.333 OFFCURVE",
"237 1385 CURVE SMOOTH",
"111.667 1259.667 OFFCURVE",
"35 1087.667 OFFCURVE",
"35 897 CURVE SMOOTH",
"35 706.333 OFFCURVE",
"111.667 534.333 OFFCURVE",
"237 409 CURVE SMOOTH",
"362.333 283.667 OFFCURVE",
"534.333 207 OFFCURVE",
"725 207 CURVE"
);
},
{
closed = 1;
nodes = (
"585 389 OFFCURVE",
"458 446 OFFCURVE",
"366 538 CURVE SMOOTH",
"274 630 OFFCURVE",
"217 757 OFFCURVE",
"217 897 CURVE SMOOTH",
"217 1037 OFFCURVE",
"274 1164.833 OFFCURVE",
"366 1257.5 CURVE SMOOTH",
"458 1350.167 OFFCURVE",
"585 1407 OFFCURVE",
"725 1407 CURVE SMOOTH",
"865 1407 OFFCURVE",
"992.833 1350.167 OFFCURVE",
"1085.5 1257.5 CURVE SMOOTH",
"1178.167 1164.833 OFFCURVE",
"1235 1037 OFFCURVE",
"1235 897 CURVE SMOOTH",
"1235 757 OFFCURVE",
"1178.167 630 OFFCURVE",
"1085.5 538 CURVE SMOOTH",
"992.833 446 OFFCURVE",
"865 389 OFFCURVE",
"725 389 CURVE"
);
},
{
closed = 1;
nodes = (
"635 545 LINE",
"635 784 LINE",
"725 784 LINE",
"860 545 LINE",
"1053 545 LINE",
"901 815 LINE",
"923 820.333 OFFCURVE",
"942.667 831.333 OFFCURVE",
"960 848 CURVE SMOOTH",
"990.667 876 OFFCURVE",
"1020 926.667 OFFCURVE",
"1020 1020 CURVE SMOOTH",
"1020 1128 OFFCURVE",
"988.833 1188.833 OFFCURVE",
"945.5 1221.5 CURVE SMOOTH",
"902.167 1254.167 OFFCURVE",
"847 1260 OFFCURVE",
"799 1260 CURVE SMOOTH",
"465 1260 LINE",
"465 545 LINE"
);
},
{
closed = 1;
nodes = (
"635 1124 LINE",
"758 1124 LINE SMOOTH",
"827.333 1124 OFFCURVE",
"852 1100 OFFCURVE",
"852 1016 CURVE SMOOTH",
"852 935.217 OFFCURVE",
"830.309 907 OFFCURVE",
"764 907 CURVE SMOOTH",
"635 907 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01235 14 5 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01246 14 63 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01267 14 40 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01215 14 25 4 \012CALL[ ]	/* CallFunction */\012NPUSHB[ ]	/* 11 values pushed */\0129 25 25 25 41 25 57 25 73 25 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHB[ ]	/* 11 values pushed */\0126 35 22 35 38 35 54 35 70 35 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHB[ ]	/* 11 values pushed */\0129 63 25 63 41 63 57 63 73 63 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 3 values pushed */\01251 63 46 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 3 values pushed */\01252 5 15 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01267 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01255 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01215 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01270 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 4 values pushed */\01220 4 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01210 4 30 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01241 7 66 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01258 7 54 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\01251 54 58 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1450;
}
);
leftKerningGroup = registered;
note = registered;
rightKerningGroup = registered;
unicode = 00AE;
},
{
glyphname = trademark;
lastChange = "2022-05-11 04:40:55 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"1109 776 LINE",
"1109 1274 LINE",
"1121 1274 LINE",
"1122.333 1266 OFFCURVE",
"1123.667 1258.333 OFFCURVE",
"1125 1251 CURVE SMOOTH",
"1126.333 1244.333 OFFCURVE",
"1127.667 1236.833 OFFCURVE",
"1129 1228.5 CURVE SMOOTH",
"1130.333 1220.167 OFFCURVE",
"1132.333 1212 OFFCURVE",
"1135 1204 CURVE SMOOTH",
"1203 952 LINE",
"1414 952 LINE",
"1481 1214 LINE SMOOTH",
"1487 1236.667 OFFCURVE",
"1491 1254.333 OFFCURVE",
"1493 1267 CURVE SMOOTH",
"1494.333 1274.333 OFFCURVE",
"1495.333 1280.667 OFFCURVE",
"1496 1286 CURVE",
"1508 1286 LINE",
"1508 776 LINE",
"1680 776 LINE",
"1680 1427 LINE",
"1385 1427 LINE",
"1336 1221 LINE SMOOTH",
"1326.667 1186.333 OFFCURVE",
"1321.667 1153 OFFCURVE",
"1319 1129 CURVE SMOOTH",
"1317 1115 OFFCURVE",
"1315.333 1102 OFFCURVE",
"1314 1090 CURVE",
"1302 1090 LINE",
"1229 1427 LINE",
"937 1427 LINE",
"937 776 LINE"
);
},
{
closed = 1;
nodes = (
"596 776 LINE",
"596 1260 LINE",
"825 1260 LINE",
"825 1427 LINE",
"192 1427 LINE",
"192 1260 LINE",
"420 1260 LINE",
"420 776 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01235 14 30 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01227 14 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01211 14 12 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01214 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01214 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01211 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01239 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0129 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0129 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01232 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01232 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\0123 7 19 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0129 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01213 7 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01226 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01226 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01227 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01227 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01232 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01230 7 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01234 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01234 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01235 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01235 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1872;
}
);
leftKerningGroup = trademark;
note = trademark;
rightKerningGroup = trademark;
unicode = 2122;
},
{
glyphname = degree;
lastChange = "2022-05-11 04:40:55 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"606 852 OFFCURVE",
"679 872.833 OFFCURVE",
"731 925.5 CURVE SMOOTH",
"783 978.167 OFFCURVE",
"813 1061 OFFCURVE",
"813 1185 CURVE SMOOTH",
"813 1318.333 OFFCURVE",
"783 1404.833 OFFCURVE",
"731 1457.5 CURVE SMOOTH",
"679 1510.167 OFFCURVE",
"606 1529 OFFCURVE",
"518 1529 CURVE SMOOTH",
"428.667 1529 OFFCURVE",
"351.5 1510.167 OFFCURVE",
"297.5 1457.5 CURVE SMOOTH",
"243.5 1404.833 OFFCURVE",
"212 1318.333 OFFCURVE",
"212 1185 CURVE SMOOTH",
"212 1061 OFFCURVE",
"243.5 978.167 OFFCURVE",
"297.5 925.5 CURVE SMOOTH",
"351.5 872.833 OFFCURVE",
"428.667 852 OFFCURVE",
"518 852 CURVE"
);
},
{
closed = 1;
nodes = (
"431.047 1020 OFFCURVE",
"387 1062.833 OFFCURVE",
"387 1185 CURVE SMOOTH",
"387 1312.703 OFFCURVE",
"429.651 1363 OFFCURVE",
"518 1363 CURVE SMOOTH",
"600.293 1363 OFFCURVE",
"639 1310.733 OFFCURVE",
"639 1185 CURVE SMOOTH",
"639 1063.723 OFFCURVE",
"598.762 1020 OFFCURVE",
"518 1020 CURVE"
);
}
);
width = 1026;
}
);
leftKerningGroup = degree;
note = degree;
rightKerningGroup = degree;
unicode = 00B0;
},
{
glyphname = bar;
lastChange = "2022-05-11 04:40:55 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"456 -487 LINE",
"456 1589 LINE",
"227 1589 LINE",
"227 -487 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\0121 13 0 4 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0122 19 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 684;
}
);
leftKerningGroup = bar;
note = bar;
rightKerningGroup = bar;
unicode = 007C;
},
{
glyphname = brokenbar;
lastChange = "2022-05-11 04:40:55 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"456 594 LINE",
"456 1427 LINE",
"227 1427 LINE",
"227 594 LINE"
);
},
{
closed = 1;
nodes = (
"227 -487 LINE",
"456 -487 LINE",
"456 348 LINE",
"227 348 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\0121 13 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0126 \012MDRP[10000]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0120 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0125 19 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 684;
}
);
leftKerningGroup = brokenbar;
note = brokenbar;
rightKerningGroup = brokenbar;
unicode = 00A6;
},
{
glyphname = dagger;
lastChange = "2022-05-11 04:40:55 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"628 -162 LINE",
"628 817 LINE",
"968 817 LINE",
"968 1014 LINE",
"628 1014 LINE",
"628 1430 LINE",
"390 1427 LINE",
"390 1014 LINE",
"50 1014 LINE",
"50 817 LINE",
"390 817 LINE",
"390 -160 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\0129 13 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0129 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDRP[10000]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0125 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\0123 8 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0123 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0126 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0128 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1018;
}
);
leftKerningGroup = dagger;
note = dagger;
rightKerningGroup = dagger;
unicode = 2020;
},
{
glyphname = daggerdbl;
lastChange = "2022-05-11 04:40:55 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"401 256 LINE",
"401 -160 LINE",
"639 -162 LINE",
"639 256 LINE",
"979 256 LINE",
"979 453 LINE",
"639 453 LINE",
"639 815 LINE",
"979 815 LINE",
"979 1012 LINE",
"639 1012 LINE",
"639 1430 LINE",
"401 1427 LINE",
"401 1012 LINE",
"61 1012 LINE",
"61 815 LINE",
"401 815 LINE",
"401 453 LINE",
"61 453 LINE",
"61 256 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01212 13 1 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0127 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01215 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01217 \012MDRP[10000]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0127 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0127 23 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\01213 8 14 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\0125 8 2 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01213 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0125 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0128 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0122 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01210 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\01214 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01218 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1040;
}
);
leftKerningGroup = daggerdbl;
note = daggerdbl;
rightKerningGroup = daggerdbl;
unicode = 2021;
},
{
glyphname = estimated;
lastChange = "2022-05-11 04:38:59 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"1121 0 OFFCURVE",
"1284 79 OFFCURVE",
"1470 284 CURVE",
"1324 284 LINE",
"1211 157 OFFCURVE",
"1025 56 OFFCURVE",
"826 56 CURVE SMOOTH",
"529 56 OFFCURVE",
"330 236 OFFCURVE",
"330 310 CURVE SMOOTH",
"330 661 LINE SMOOTH",
"330 697 OFFCURVE",
"343 699 OFFCURVE",
"362 699 CURVE SMOOTH",
"1613 699 LINE",
"1592 1176 OFFCURVE",
"1291 1437 OFFCURVE",
"826 1437 CURVE SMOOTH",
"366 1437 OFFCURVE",
"40 1148 OFFCURVE",
"40 717 CURVE SMOOTH",
"40 280 OFFCURVE",
"366 0 OFFCURVE",
"826 0 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"339 743 OFFCURVE",
"330 749 OFFCURVE",
"330 761 CURVE SMOOTH",
"330 1136 LINE SMOOTH",
"330 1199 OFFCURVE",
"542 1387 OFFCURVE",
"824 1387 CURVE SMOOTH",
"1048 1387 OFFCURVE",
"1320 1234 OFFCURVE",
"1320 1121 CURVE SMOOTH",
"1320 776 LINE SMOOTH",
"1320 751 OFFCURVE",
"1316 743 OFFCURVE",
"1286 743 CURVE SMOOTH",
"362 743 LINE SMOOTH"
);
}
);
width = 1653;
}
);
leftKerningGroup = estimated;
leftMetricsKey = "=40";
rightKerningGroup = estimated;
rightMetricsKey = "=|";
unicode = 212E;
},
{
glyphname = dieresiscomb;
lastChange = "2022-05-11 05:27:09 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{412, 1055}";
},
{
name = top;
position = "{412, 1456}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"731 1235 OFFCURVE",
"761 1262 OFFCURVE",
"761 1373 CURVE SMOOTH",
"761 1486 OFFCURVE",
"732 1510 OFFCURVE",
"623 1510 CURVE SMOOTH",
"513 1510 OFFCURVE",
"486 1485 OFFCURVE",
"486 1373 CURVE",
"486 1263 OFFCURVE",
"514 1235 OFFCURVE",
"623 1235 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"308 1235 OFFCURVE",
"338 1262 OFFCURVE",
"338 1373 CURVE SMOOTH",
"338 1486 OFFCURVE",
"309 1510 OFFCURVE",
"200 1510 CURVE SMOOTH",
"90 1510 OFFCURVE",
"63 1485 OFFCURVE",
"63 1373 CURVE",
"63 1263 OFFCURVE",
"91 1235 OFFCURVE",
"200 1235 CURVE SMOOTH"
);
}
);
width = 868;
}
);
leftKerningGroup = dieresis;
note = dieresis;
rightKerningGroup = dieresis;
unicode = 0308;
},
{
glyphname = dotaccentcomb;
lastChange = "2022-05-11 05:02:17 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{198, 1055}";
},
{
name = top;
position = "{198, 1477}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"306 1235 OFFCURVE",
"334 1263 OFFCURVE",
"334 1370 CURVE SMOOTH",
"334 1479 OFFCURVE",
"306 1508 OFFCURVE",
"199 1508 CURVE SMOOTH",
"90 1508 OFFCURVE",
"61 1479 OFFCURVE",
"61 1370 CURVE SMOOTH",
"61 1263 OFFCURVE",
"89 1235 OFFCURVE",
"199 1235 CURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01215 15 5 4 \012CALL[ ]	/* CallFunction */\012NPUSHB[ ]	/* 11 values pushed */\0129 5 25 5 41 5 57 5 73 5 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01215 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01221 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 4 values pushed */\01210 9 0 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 395;
}
);
leftKerningGroup = dotaccent;
note = dotaccent;
rightKerningGroup = dotaccent;
unicode = 0307;
},
{
glyphname = gravecomb;
lastChange = "2022-05-11 04:47:25 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{327, 1055}";
},
{
name = top;
position = "{327, 1642}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"592 1274 LINE",
"199 1642 LINE",
"189 1636 OFFCURVE",
"178.333 1628.667 OFFCURVE",
"167 1620 CURVE SMOOTH",
"148.333 1605.333 OFFCURVE",
"122.667 1583.333 OFFCURVE",
"100 1554 CURVE SMOOTH",
"74.667 1523.333 OFFCURVE",
"62 1500.667 OFFCURVE",
"62 1478 CURVE SMOOTH",
"62 1444.667 OFFCURVE",
"90.667 1413.333 OFFCURVE",
"156 1364 CURVE SMOOTH",
"194.345 1334.504 OFFCURVE",
"280.521 1282.665 OFFCURVE",
"350 1238 CURVE SMOOTH",
"394 1210.667 OFFCURVE",
"441.333 1181.667 OFFCURVE",
"492 1151 CURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01219 15 10 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01219 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01222 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 4 values pushed */\01218 9 0 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 653;
}
);
leftKerningGroup = grave;
note = grave;
rightKerningGroup = grave;
unicode = 0300;
},
{
glyphname = acutecomb;
lastChange = "2022-05-11 05:03:57 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{335, 1055}";
},
{
name = top;
position = "{335, 1661}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"216 1214 OFFCURVE",
"265 1246 OFFCURVE",
"311 1276 CURVE SMOOTH",
"371 1315 OFFCURVE",
"488 1393 OFFCURVE",
"512 1410 CURVE SMOOTH",
"546 1435 OFFCURVE",
"571 1456 OFFCURVE",
"586 1473 CURVE SMOOTH",
"601 1490 OFFCURVE",
"608 1506 OFFCURVE",
"608 1523 CURVE SMOOTH",
"608 1546 OFFCURVE",
"594 1570 OFFCURVE",
"569 1601 CURVE SMOOTH",
"540 1636 OFFCURVE",
"517 1657 OFFCURVE",
"498 1672 CURVE SMOOTH",
"487 1680 OFFCURVE",
"478 1686 OFFCURVE",
"469 1691 CURVE",
"61 1308 LINE",
"164 1181 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */\0129 0 3 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0129 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01221 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 4 values pushed */\0121 9 19 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 672;
}
);
leftKerningGroup = acute;
note = acute;
rightKerningGroup = acute;
unicode = 0301;
},
{
glyphname = hungarumlautcomb;
lastChange = "2022-05-11 05:04:00 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{520, 1055}";
},
{
name = top;
position = "{520, 1708}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"245 1220 OFFCURVE",
"281 1263 OFFCURVE",
"314 1304 CURVE SMOOTH",
"371 1374 OFFCURVE",
"420 1433 OFFCURVE",
"459 1484 CURVE SMOOTH",
"502 1535 OFFCURVE",
"522 1570 OFFCURVE",
"522 1599 CURVE SMOOTH",
"522 1630 OFFCURVE",
"500 1654 OFFCURVE",
"457 1681 CURVE SMOOTH",
"418 1705 OFFCURVE",
"386 1720 OFFCURVE",
"363 1728 CURVE SMOOTH",
"350 1733 OFFCURVE",
"337 1736 OFFCURVE",
"326 1738 CURVE",
"61 1267 LINE",
"207 1175 LINE"
);
},
{
closed = 1;
nodes = (
"721 1214 OFFCURVE",
"753 1249 OFFCURVE",
"782 1282 CURVE SMOOTH",
"809 1312 OFFCURVE",
"892 1409 OFFCURVE",
"915 1439 CURVE SMOOTH",
"959 1491 OFFCURVE",
"978 1527 OFFCURVE",
"978 1555 CURVE SMOOTH",
"978 1586 OFFCURVE",
"956 1609 OFFCURVE",
"913 1636 CURVE SMOOTH",
"874 1660 OFFCURVE",
"842 1675 OFFCURVE",
"819 1683 CURVE SMOOTH",
"806 1688 OFFCURVE",
"793 1691 OFFCURVE",
"782 1693 CURVE",
"543 1269 LINE",
"688 1177 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 3 values pushed */\0121 19 3 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1040;
}
);
leftKerningGroup = hungarumlaut;
note = hungarumlaut;
rightKerningGroup = hungarumlaut;
unicode = 030B;
},
{
glyphname = circumflexcomb;
lastChange = "2022-05-11 05:04:06 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{434, 1055}";
},
{
name = top;
position = "{434, 1595}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"434 1517 LINE",
"704 1190 LINE",
"817 1264 LINE",
"664 1540 LINE SMOOTH",
"606 1646 OFFCURVE",
"550 1675 OFFCURVE",
"434 1675 CURVE SMOOTH",
"316 1675 OFFCURVE",
"263 1646 OFFCURVE",
"205 1540 CURVE SMOOTH",
"51 1264 LINE",
"164 1190 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 4 values pushed */\0126 9 13 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 868;
}
);
leftKerningGroup = circumflex;
note = circumflex;
rightKerningGroup = circumflex;
unicode = 0302;
},
{
glyphname = caroncomb;
lastChange = "2022-05-11 05:04:08 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{434, 1055}";
},
{
name = top;
position = "{434, 1659}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"550 1194 OFFCURVE",
"606 1223 OFFCURVE",
"664 1329 CURVE SMOOTH",
"817 1605 LINE",
"704 1679 LINE",
"434 1351 LINE",
"164 1679 LINE",
"51 1605 LINE",
"205 1329 LINE SMOOTH",
"263 1223 OFFCURVE",
"316 1194 OFFCURVE",
"434 1194 CURVE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 4 values pushed */\0127 9 0 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 868;
}
);
leftKerningGroup = caron;
note = caron;
rightKerningGroup = caron;
unicode = 030C;
},
{
glyphname = brevecomb;
lastChange = "2022-05-11 05:03:50 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{405, 1055}";
},
{
name = top;
position = "{405, 1530}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"522 1226 OFFCURVE",
"607 1256 OFFCURVE",
"664 1309 CURVE SMOOTH",
"720 1362 OFFCURVE",
"748 1438 OFFCURVE",
"748 1530 CURVE SMOOTH",
"748 1546 OFFCURVE",
"747 1563 OFFCURVE",
"745 1580 CURVE",
"627 1580 LINE",
"589 1439 OFFCURVE",
"535 1406 OFFCURVE",
"406 1406 CURVE SMOOTH",
"277 1406 OFFCURVE",
"220 1441 OFFCURVE",
"184 1580 CURVE",
"63 1580 LINE",
"62 1565 OFFCURVE",
"61 1551 OFFCURVE",
"61 1536 CURVE SMOOTH",
"61 1443 OFFCURVE",
"89 1365 OFFCURVE",
"146 1311 CURVE SMOOTH",
"202 1257 OFFCURVE",
"289 1226 OFFCURVE",
"406 1226 CURVE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 4 values pushed */\01214 4 0 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 811;
}
);
leftKerningGroup = breve;
note = breve;
rightKerningGroup = breve;
unicode = 0306;
},
{
glyphname = ringcomb;
lastChange = "2022-05-11 05:03:37 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{313, 1055}";
},
{
name = top;
position = "{313, 1651}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"386 1205 OFFCURVE",
"450 1216 OFFCURVE",
"495 1252 CURVE SMOOTH",
"539 1288 OFFCURVE",
"565 1348 OFFCURVE",
"565 1447 CURVE SMOOTH",
"565 1547 OFFCURVE",
"537 1608 OFFCURVE",
"492 1644 CURVE SMOOTH",
"447 1680 OFFCURVE",
"384 1691 OFFCURVE",
"313 1691 CURVE SMOOTH",
"242 1691 OFFCURVE",
"179 1680 OFFCURVE",
"134 1644 CURVE SMOOTH",
"89 1608 OFFCURVE",
"61 1547 OFFCURVE",
"61 1447 CURVE SMOOTH",
"61 1348 OFFCURVE",
"88 1288 OFFCURVE",
"133 1252 CURVE SMOOTH",
"177 1216 OFFCURVE",
"241 1205 OFFCURVE",
"313 1205 CURVE"
);
},
{
closed = 1;
nodes = (
"242 1336 OFFCURVE",
"223 1363 OFFCURVE",
"223 1447 CURVE SMOOTH",
"223 1531 OFFCURVE",
"242 1558 OFFCURVE",
"313 1558 CURVE SMOOTH",
"386 1558 OFFCURVE",
"406 1531 OFFCURVE",
"406 1447 CURVE SMOOTH",
"406 1363 OFFCURVE",
"386 1336 OFFCURVE",
"313 1336 CURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01240 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01240 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHB[ ]	/* 11 values pushed */\0129 25 25 25 41 25 57 25 73 25 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01225 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01215 14 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0125 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01235 14 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0126 35 22 35 38 35 54 35 70 35 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01215 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01241 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 4 values pushed */\01220 7 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01210 7 30 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 627;
}
);
leftKerningGroup = ring;
note = ring;
rightKerningGroup = ring;
unicode = 030A;
},
{
glyphname = tildecomb;
lastChange = "2022-05-11 05:03:15 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{469, 1055}";
},
{
name = top;
position = "{469, 1479}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"178 1250 OFFCURVE",
"188 1265 OFFCURVE",
"200 1278 CURVE SMOOTH",
"221 1301 OFFCURVE",
"253 1323 OFFCURVE",
"297 1326 CURVE SMOOTH",
"390 1329 OFFCURVE",
"506 1209 OFFCURVE",
"635 1214 CURVE SMOOTH",
"768 1219 OFFCURVE",
"865 1330 OFFCURVE",
"877 1429 CURVE",
"768 1498 LINE",
"759 1481 OFFCURVE",
"748 1466 OFFCURVE",
"736 1453 CURVE SMOOTH",
"715 1430 OFFCURVE",
"684 1409 OFFCURVE",
"641 1406 CURVE SMOOTH",
"593 1404 OFFCURVE",
"534 1436 OFFCURVE",
"489 1463 CURVE SMOOTH",
"439 1492 OFFCURVE",
"369 1521 OFFCURVE",
"303 1519 CURVE SMOOTH",
"167 1514 OFFCURVE",
"73 1403 OFFCURVE",
"61 1304 CURVE",
"170 1234 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 4 values pushed */\01212 8 23 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\0125 8 28 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 938;
}
);
leftKerningGroup = tilde;
note = tilde;
rightKerningGroup = tilde;
unicode = 0303;
},
{
glyphname = macroncomb;
lastChange = "2022-05-11 05:03:25 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{414, 1055}";
},
{
name = top;
position = "{414, 1415}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"766 1235 LINE",
"766 1431 LINE",
"61 1431 LINE",
"61 1235 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 4 values pushed */\0121 8 2 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 827;
}
);
leftKerningGroup = macron;
note = macron;
rightKerningGroup = macron;
unicode = 0304;
},
{
glyphname = hookabovecomb;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{306, 1055}";
},
{
name = top;
position = "{306, 1622}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"230 1194 LINE",
"461 1194 OFFCURVE",
"550 1277 OFFCURVE",
"550 1381 CURVE SMOOTH",
"550 1396 OFFCURVE",
"548 1411 OFFCURVE",
"545 1430 CURVE SMOOTH",
"515 1577 OFFCURVE",
"433 1622 OFFCURVE",
"260 1622 CURVE SMOOTH",
"211 1622 OFFCURVE",
"161 1614 OFFCURVE",
"124 1603 CURVE SMOOTH",
"102 1597 OFFCURVE",
"81 1590 OFFCURVE",
"61 1583 CURVE",
"96 1450 LINE",
"107 1453 OFFCURVE",
"120 1455 OFFCURVE",
"135 1458 CURVE SMOOTH",
"160 1462 OFFCURVE",
"197 1465 OFFCURVE",
"244 1465 CURVE SMOOTH",
"312 1465 OFFCURVE",
"345 1454 OFFCURVE",
"356 1403 CURVE",
"362 1356 OFFCURVE",
"329 1332 OFFCURVE",
"230 1332 CURVE"
);
}
);
width = 1200;
}
);
leftKerningGroup = hookabovecomb;
rightKerningGroup = hookabovecomb;
unicode = 0309;
},
{
glyphname = dblgravecomb;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{520, 1427}";
},
{
name = top;
position = "{520, 2088}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"978 1617 LINE",
"713 2088 LINE",
"702 2086 OFFCURVE",
"689 2082 OFFCURVE",
"676 2078 CURVE SMOOTH",
"653 2070 OFFCURVE",
"621 2055 OFFCURVE",
"582 2031 CURVE SMOOTH",
"539 2004 OFFCURVE",
"517 1979 OFFCURVE",
"517 1949 CURVE SMOOTH",
"517 1919 OFFCURVE",
"537 1884 OFFCURVE",
"580 1834 CURVE SMOOTH",
"619 1782 OFFCURVE",
"668 1724 OFFCURVE",
"725 1654 CURVE SMOOTH",
"758 1613 OFFCURVE",
"794 1570 OFFCURVE",
"832 1525 CURVE"
);
},
{
closed = 1;
nodes = (
"496 1619 LINE",
"257 2043 LINE",
"246 2041 OFFCURVE",
"233 2037 OFFCURVE",
"220 2033 CURVE SMOOTH",
"197 2025 OFFCURVE",
"165 2010 OFFCURVE",
"126 1986 CURVE SMOOTH",
"83 1959 OFFCURVE",
"61 1935 OFFCURVE",
"61 1905 CURVE SMOOTH",
"61 1877 OFFCURVE",
"80 1841 OFFCURVE",
"124 1789 CURVE SMOOTH",
"147 1759 OFFCURVE",
"230 1662 OFFCURVE",
"257 1632 CURVE SMOOTH",
"286 1598 OFFCURVE",
"318 1563 OFFCURVE",
"351 1527 CURVE"
);
}
);
width = 1040;
}
);
leftKerningGroup = dblgravecomb;
rightKerningGroup = dblgravecomb;
unicode = 030F;
},
{
glyphname = breveinvertedcomb;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{405, 1427}";
},
{
name = top;
position = "{405, 1885}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"289 1885 OFFCURVE",
"202 1854 OFFCURVE",
"146 1800 CURVE SMOOTH",
"89 1746 OFFCURVE",
"61 1668 OFFCURVE",
"61 1575 CURVE SMOOTH",
"61 1560 OFFCURVE",
"62 1546 OFFCURVE",
"63 1531 CURVE",
"184 1531 LINE",
"220 1670 OFFCURVE",
"277 1705 OFFCURVE",
"406 1705 CURVE SMOOTH",
"535 1705 OFFCURVE",
"589 1672 OFFCURVE",
"627 1531 CURVE",
"745 1531 LINE",
"747 1548 OFFCURVE",
"748 1565 OFFCURVE",
"748 1581 CURVE SMOOTH",
"748 1673 OFFCURVE",
"720 1749 OFFCURVE",
"664 1802 CURVE SMOOTH",
"607 1855 OFFCURVE",
"522 1885 OFFCURVE",
"406 1885 CURVE"
);
}
);
width = 811;
}
);
leftKerningGroup = breveinvertedcomb;
rightKerningGroup = breveinvertedcomb;
unicode = 0311;
},
{
glyphname = commaturnedabovecomb;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{257, 1055}";
},
{
name = top;
position = "{257, 1694}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"386 1369 OFFCURVE",
"358 1402 OFFCURVE",
"290 1411 CURVE",
"293 1457 OFFCURVE",
"340 1573 OFFCURVE",
"388 1639 CURVE",
"311 1694 LINE",
"278 1674 OFFCURVE",
"231 1616 OFFCURVE",
"193 1543 CURVE SMOOTH",
"156 1470 OFFCURVE",
"126 1380 OFFCURVE",
"126 1335 CURVE SMOOTH",
"126 1219 OFFCURVE",
"144 1156 OFFCURVE",
"257 1156 CURVE SMOOTH",
"359 1156 OFFCURVE",
"386 1184 OFFCURVE",
"386 1287 CURVE"
);
}
);
width = 1200;
}
);
leftKerningGroup = commaturnedabovecomb;
rightKerningGroup = commaturnedabovecomb;
unicode = 0312;
},
{
glyphname = horncomb;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
anchors = (
{
name = _topright;
position = "{978, 1055}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"465 877 LINE",
"713 894 OFFCURVE",
"810 936 OFFCURVE",
"875 1000 CURVE SMOOTH",
"940 1063 OFFCURVE",
"977 1159 OFFCURVE",
"977 1367 CURVE",
"740 1367 LINE",
"740 1214 OFFCURVE",
"712 1152 OFFCURVE",
"656 1116 CURVE SMOOTH",
"600 1079 OFFCURVE",
"515 1064 OFFCURVE",
"400 1055 CURVE"
);
}
);
width = 1200;
}
);
leftKerningGroup = horncomb;
rightKerningGroup = horncomb;
unicode = 031B;
},
{
glyphname = dotbelowcomb;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
anchors = (
{
name = _bottom;
position = "{198, 0}";
},
{
name = bottom;
position = "{198, -385}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"306 -385 OFFCURVE",
"334 -357 OFFCURVE",
"334 -250 CURVE SMOOTH",
"334 -141 OFFCURVE",
"306 -112 OFFCURVE",
"199 -112 CURVE SMOOTH",
"90 -112 OFFCURVE",
"61 -141 OFFCURVE",
"61 -250 CURVE SMOOTH",
"61 -357 OFFCURVE",
"89 -385 OFFCURVE",
"199 -385 CURVE"
);
}
);
width = 395;
}
);
leftKerningGroup = dotbelowcomb;
rightKerningGroup = dotbelowcomb;
unicode = 0323;
},
{
glyphname = commaaccentcomb;
lastChange = "2022-05-11 04:47:25 +0000";
layers = (
{
anchors = (
{
name = _bottom;
position = "{232, 0}";
},
{
name = bottom;
position = "{232, -500}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"93 -445 LINE",
"215 -500 LINE",
"229.667 -476 OFFCURVE",
"244.667 -451.333 OFFCURVE",
"260 -426 CURVE SMOOTH",
"285.333 -383.333 OFFCURVE",
"316.333 -327 OFFCURVE",
"339 -279 CURVE SMOOTH",
"359 -235 OFFCURVE",
"370 -203 OFFCURVE",
"370 -179 CURVE SMOOTH",
"370 -144.333 OFFCURVE",
"347 -126.333 OFFCURVE",
"295 -109 CURVE SMOOTH",
"265.667 -99.667 OFFCURVE",
"239.667 -95.667 OFFCURVE",
"221 -93 CURVE SMOOTH",
"209.667 -91.667 OFFCURVE",
"199.333 -91 OFFCURVE",
"190 -91 CURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\0128 15 17 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0128 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01220 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01216 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01216 19 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 438;
}
);
leftKerningGroup = commaaccentcomb;
note = commaaccent;
rightKerningGroup = commaaccentcomb;
unicode = 0326;
},
{
glyphname = cedillacomb;
lastChange = "2022-05-11 04:47:25 +0000";
layers = (
{
anchors = (
{
name = _bottom;
position = "{306, 0}";
},
{
name = bottom;
position = "{306, -485}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"147 -205 LINE",
"159.667 -203.667 OFFCURVE",
"172.333 -202 OFFCURVE",
"185 -200 CURVE SMOOTH",
"207.667 -197.333 OFFCURVE",
"233.333 -195 OFFCURVE",
"256 -195 CURVE SMOOTH",
"328.667 -195 OFFCURVE",
"362 -218.667 OFFCURVE",
"356 -266 CURVE",
"345.333 -316.667 OFFCURVE",
"312 -328 OFFCURVE",
"244 -328 CURVE SMOOTH",
"197.333 -328 OFFCURVE",
"160.333 -325 OFFCURVE",
"135 -321 CURVE SMOOTH",
"119.667 -318.333 OFFCURVE",
"106.667 -315.667 OFFCURVE",
"96 -313 CURVE",
"61 -446 LINE",
"81 -453.333 OFFCURVE",
"102 -460 OFFCURVE",
"124 -466 CURVE SMOOTH",
"161.333 -476.667 OFFCURVE",
"210.667 -485 OFFCURVE",
"260 -485 CURVE SMOOTH",
"432.827 -485 OFFCURVE",
"514.577 -439.583 OFFCURVE",
"545 -293 CURVE SMOOTH",
"547.667 -274.333 OFFCURVE",
"550 -258.667 OFFCURVE",
"550 -244 CURVE SMOOTH",
"550 -140.301 OFFCURVE",
"476.65 -83.862 OFFCURVE",
"379 -92 CURVE",
"406 0 LINE",
"201 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\0126 15 19 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\0120 19 6 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 3 values pushed */\0121 19 6 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01228 16 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 3 values pushed */\01235 19 6 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01238 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01214 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01214 19 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\01236 8 30 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\0121 30 36 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01214 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01225 7 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 25 23 25 39 25 55 25 71 25 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 612;
}
);
leftKerningGroup = cedilla;
note = cedilla;
rightKerningGroup = cedilla;
unicode = 0327;
},
{
glyphname = ogonekcomb;
lastChange = "2022-05-11 04:59:50 +0000";
layers = (
{
anchors = (
{
name = _ogonek;
position = "{455, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"61 -423.272 OFFCURVE",
"169.244 -500 OFFCURVE",
"313 -500 CURVE SMOOTH",
"351.667 -500 OFFCURVE",
"384.333 -495.333 OFFCURVE",
"411 -490 CURVE SMOOTH",
"425.667 -487.333 OFFCURVE",
"439.667 -483.667 OFFCURVE",
"453 -479 CURVE",
"453 -311 LINE",
"446.333 -312.333 OFFCURVE",
"439.333 -313.333 OFFCURVE",
"432 -314 CURVE SMOOTH",
"418.667 -316 OFFCURVE",
"402.333 -317 OFFCURVE",
"383 -317 CURVE SMOOTH",
"315 -317 OFFCURVE",
"283 -281 OFFCURVE",
"283 -225 CURVE SMOOTH",
"283 -157 OFFCURVE",
"329.667 -80 OFFCURVE",
"455 0 CURVE",
"291 82 LINE",
"247.667 52 OFFCURVE",
"209.333 18.333 OFFCURVE",
"176 -19 CURVE SMOOTH",
"116.257 -84.175 OFFCURVE",
"61 -177.675 OFFCURVE",
"61 -279 CURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01211 10 0 4 \012CALL[ ]	/* CallFunction */\012NPUSHB[ ]	/* 11 values pushed */\0126 11 22 11 38 11 54 11 70 11 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0128 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0128 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01221 19 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01224 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01224 19 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01221 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01214 4 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 14 23 14 39 14 55 14 71 14 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 516;
}
);
leftKerningGroup = ogonek;
note = ogonek;
rightKerningGroup = ogonek;
unicode = 0328;
},
{
glyphname = circumflexbelowcomb;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
anchors = (
{
name = _bottom;
position = "{429, 0}";
},
{
name = bottom;
position = "{429, -492}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"434 -245 LINE",
"644 -492 LINE",
"757 -418 LINE",
"664 -222 LINE SMOOTH",
"612 -113 OFFCURVE",
"550 -87 OFFCURVE",
"434 -87 CURVE SMOOTH",
"316 -87 OFFCURVE",
"262 -114 OFFCURVE",
"205 -222 CURVE SMOOTH",
"101 -418 LINE",
"214 -492 LINE"
);
}
);
width = 868;
}
);
leftKerningGroup = circumflexbelowcomb;
rightKerningGroup = circumflexbelowcomb;
unicode = 032D;
},
{
glyphname = brevebelowcomb;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
anchors = (
{
name = _bottom;
position = "{405, 0}";
},
{
name = bottom;
position = "{405, -450}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"522 -450 OFFCURVE",
"607 -420 OFFCURVE",
"664 -367 CURVE SMOOTH",
"720 -314 OFFCURVE",
"748 -238 OFFCURVE",
"748 -146 CURVE SMOOTH",
"748 -130 OFFCURVE",
"747 -113 OFFCURVE",
"745 -96 CURVE",
"627 -96 LINE",
"589 -237 OFFCURVE",
"535 -270 OFFCURVE",
"406 -270 CURVE SMOOTH",
"277 -270 OFFCURVE",
"220 -235 OFFCURVE",
"184 -96 CURVE",
"63 -96 LINE",
"62 -111 OFFCURVE",
"61 -125 OFFCURVE",
"61 -140 CURVE SMOOTH",
"61 -233 OFFCURVE",
"89 -311 OFFCURVE",
"146 -365 CURVE SMOOTH",
"202 -419 OFFCURVE",
"289 -450 OFFCURVE",
"406 -450 CURVE"
);
}
);
width = 811;
}
);
leftKerningGroup = brevebelowcomb;
rightKerningGroup = brevebelowcomb;
unicode = 032E;
},
{
glyphname = macronbelowcomb;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
anchors = (
{
name = _bottom;
position = "{414, 0}";
},
{
name = bottom;
position = "{414, -332}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"726 -332 LINE",
"726 -136 LINE",
"101 -136 LINE",
"101 -332 LINE"
);
}
);
width = 827;
}
);
leftKerningGroup = macronbelowcomb;
rightKerningGroup = macronbelowcomb;
unicode = 0331;
},
{
glyphname = dieresis;
lastChange = "2022-05-11 04:40:55 +0000";
layers = (
{
components = (
{
name = period;
transform = "{0.90002, 0, 0, 0.90002, -30, 1093}";
},
{
name = period;
transform = "{0.90002, 0, 0, 0.90002, 393, 1093}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 868;
}
);
leftKerningGroup = dieresis;
note = dieresis;
rightKerningGroup = dieresis;
unicode = 00A8;
},
{
glyphname = dotaccent;
lastChange = "2022-05-11 04:40:55 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"306.16 1204 OFFCURVE",
"334 1231.734 OFFCURVE",
"334 1339 CURVE SMOOTH",
"334 1448.2 OFFCURVE",
"305.952 1477 OFFCURVE",
"199 1477 CURVE SMOOTH",
"89.654 1477 OFFCURVE",
"61 1448.346 OFFCURVE",
"61 1339 CURVE SMOOTH",
"61 1231.574 OFFCURVE",
"89.44 1204 OFFCURVE",
"199 1204 CURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01215 15 5 4 \012CALL[ ]	/* CallFunction */\012NPUSHB[ ]	/* 11 values pushed */\0129 5 25 5 41 5 57 5 73 5 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01215 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01221 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 4 values pushed */\01210 9 0 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 395;
}
);
leftKerningGroup = dotaccent;
note = dotaccent;
rightKerningGroup = dotaccent;
unicode = 02D9;
},
{
glyphname = grave;
lastChange = "2022-05-11 04:40:55 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"592 1274 LINE",
"199 1642 LINE",
"189 1636 OFFCURVE",
"178.333 1628.667 OFFCURVE",
"167 1620 CURVE SMOOTH",
"148.333 1605.333 OFFCURVE",
"122.667 1583.333 OFFCURVE",
"100 1554 CURVE SMOOTH",
"74.667 1523.333 OFFCURVE",
"62 1500.667 OFFCURVE",
"62 1478 CURVE SMOOTH",
"62 1444.667 OFFCURVE",
"90.667 1413.333 OFFCURVE",
"156 1364 CURVE SMOOTH",
"194.345 1334.504 OFFCURVE",
"280.521 1282.665 OFFCURVE",
"350 1238 CURVE SMOOTH",
"394 1210.667 OFFCURVE",
"441.333 1181.667 OFFCURVE",
"492 1151 CURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01219 15 10 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01219 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01222 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 4 values pushed */\01218 9 0 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 653;
}
);
leftKerningGroup = grave;
note = grave;
rightKerningGroup = grave;
unicode = 0060;
},
{
glyphname = acute;
lastChange = "2022-05-11 04:40:55 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"216 1184.333 OFFCURVE",
"265 1216 OFFCURVE",
"311 1246 CURVE SMOOTH",
"370.515 1284.992 OFFCURVE",
"487.501 1362.5 OFFCURVE",
"512 1380 CURVE SMOOTH",
"546 1404.667 OFFCURVE",
"570.5 1425.5 OFFCURVE",
"585.5 1442.5 CURVE SMOOTH",
"600.5 1459.5 OFFCURVE",
"608 1476.333 OFFCURVE",
"608 1493 CURVE SMOOTH",
"608 1515.667 OFFCURVE",
"594.333 1540.333 OFFCURVE",
"569 1571 CURVE SMOOTH",
"539.667 1605.667 OFFCURVE",
"516.667 1627.333 OFFCURVE",
"498 1642 CURVE SMOOTH",
"487.333 1650 OFFCURVE",
"477.667 1656.333 OFFCURVE",
"469 1661 CURVE",
"61 1278 LINE",
"164 1151 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */\0129 0 3 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0129 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01221 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 4 values pushed */\0121 9 19 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 672;
}
);
leftKerningGroup = acute;
note = acute;
rightKerningGroup = acute;
unicode = 00B4;
},
{
glyphname = hungarumlaut;
lastChange = "2022-05-11 04:40:55 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"245 1190.333 OFFCURVE",
"280.667 1233.333 OFFCURVE",
"314 1274 CURVE SMOOTH",
"370.8 1344.324 OFFCURVE",
"419.525 1402.682 OFFCURVE",
"459 1454 CURVE SMOOTH",
"501.667 1504.667 OFFCURVE",
"522 1539.667 OFFCURVE",
"522 1569 CURVE SMOOTH",
"522 1599.667 OFFCURVE",
"499.667 1624.333 OFFCURVE",
"457 1651 CURVE SMOOTH",
"418.333 1675 OFFCURVE",
"385.667 1690 OFFCURVE",
"363 1698 CURVE SMOOTH",
"349.667 1702.667 OFFCURVE",
"337.333 1706 OFFCURVE",
"326 1708 CURVE",
"61 1237 LINE",
"207 1145 LINE"
);
},
{
closed = 1;
nodes = (
"721.333 1183.667 OFFCURVE",
"752.667 1218.667 OFFCURVE",
"782 1252 CURVE SMOOTH",
"809.433 1282.321 OFFCURVE",
"891.798 1378.837 OFFCURVE",
"915 1409 CURVE SMOOTH",
"959 1461 OFFCURVE",
"978 1497 OFFCURVE",
"978 1525 CURVE SMOOTH",
"978 1555.667 OFFCURVE",
"955.667 1579.333 OFFCURVE",
"913 1606 CURVE SMOOTH",
"874.333 1630 OFFCURVE",
"841.667 1645 OFFCURVE",
"819 1653 CURVE SMOOTH",
"805.667 1657.667 OFFCURVE",
"793.333 1661 OFFCURVE",
"782 1663 CURVE",
"543 1239 LINE",
"688 1147 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 3 values pushed */\0121 19 3 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1040;
}
);
leftKerningGroup = hungarumlaut;
note = hungarumlaut;
rightKerningGroup = hungarumlaut;
unicode = 02DD;
},
{
glyphname = circumflex;
lastChange = "2022-05-11 04:40:55 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"434 1437 LINE",
"704 1110 LINE",
"817 1184 LINE",
"664 1460 LINE SMOOTH",
"605.882 1565.668 OFFCURVE",
"550.463 1595 OFFCURVE",
"434 1595 CURVE SMOOTH",
"316.388 1595 OFFCURVE",
"263.118 1565.668 OFFCURVE",
"205 1460 CURVE SMOOTH",
"51 1184 LINE",
"164 1110 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 4 values pushed */\0126 9 13 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 868;
}
);
leftKerningGroup = circumflex;
note = circumflex;
rightKerningGroup = circumflex;
unicode = 02C6;
},
{
glyphname = caron;
lastChange = "2022-05-11 04:40:55 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"550.463 1174 OFFCURVE",
"605.882 1203.332 OFFCURVE",
"664 1309 CURVE SMOOTH",
"817 1585 LINE",
"704 1659 LINE",
"434 1331 LINE",
"164 1659 LINE",
"51 1585 LINE",
"205 1309 LINE SMOOTH",
"263.118 1203.332 OFFCURVE",
"316.388 1174 OFFCURVE",
"434 1174 CURVE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 4 values pushed */\0127 9 0 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 868;
}
);
leftKerningGroup = caron;
note = caron;
rightKerningGroup = caron;
unicode = 02C7;
},
{
glyphname = breve;
lastChange = "2022-05-11 04:40:55 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"522 1176 OFFCURVE",
"606.833 1205.667 OFFCURVE",
"663.5 1259 CURVE SMOOTH",
"720.167 1312.333 OFFCURVE",
"748 1388 OFFCURVE",
"748 1480 CURVE SMOOTH",
"748 1496 OFFCURVE",
"747 1512.667 OFFCURVE",
"745 1530 CURVE",
"627 1530 LINE",
"588.624 1389.286 OFFCURVE",
"534.595 1356 OFFCURVE",
"406 1356 CURVE SMOOTH",
"277.234 1356 OFFCURVE",
"219.932 1391.405 OFFCURVE",
"184 1530 CURVE",
"63 1530 LINE",
"61.667 1515.333 OFFCURVE",
"61 1500.667 OFFCURVE",
"61 1486 CURVE SMOOTH",
"61 1392.667 OFFCURVE",
"88.833 1314.5 OFFCURVE",
"145.5 1260.5 CURVE SMOOTH",
"202.167 1206.5 OFFCURVE",
"288.667 1176 OFFCURVE",
"406 1176 CURVE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 4 values pushed */\01214 4 0 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 811;
}
);
leftKerningGroup = breve;
note = breve;
rightKerningGroup = breve;
unicode = 02D8;
},
{
glyphname = ring;
lastChange = "2022-05-11 04:40:55 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"386.333 1165 OFFCURVE",
"449.833 1176 OFFCURVE",
"494.5 1212 CURVE SMOOTH",
"539.167 1248 OFFCURVE",
"565 1308.333 OFFCURVE",
"565 1407 CURVE SMOOTH",
"565 1507 OFFCURVE",
"537.333 1568 OFFCURVE",
"492 1604 CURVE SMOOTH",
"446.667 1640 OFFCURVE",
"383.667 1651 OFFCURVE",
"313 1651 CURVE SMOOTH",
"242.333 1651 OFFCURVE",
"179.333 1640 OFFCURVE",
"134 1604 CURVE SMOOTH",
"88.667 1568 OFFCURVE",
"61 1507 OFFCURVE",
"61 1407 CURVE SMOOTH",
"61 1308.333 OFFCURVE",
"87.833 1248 OFFCURVE",
"132.5 1212 CURVE SMOOTH",
"177.167 1176 OFFCURVE",
"241 1165 OFFCURVE",
"313 1165 CURVE"
);
},
{
closed = 1;
nodes = (
"242.499 1296 OFFCURVE",
"223 1323.483 OFFCURVE",
"223 1407 CURVE SMOOTH",
"223 1490.95 OFFCURVE",
"242.134 1518 OFFCURVE",
"313 1518 CURVE SMOOTH",
"386.213 1518 OFFCURVE",
"406 1491.043 OFFCURVE",
"406 1407 CURVE SMOOTH",
"406 1323.395 OFFCURVE",
"385.849 1296 OFFCURVE",
"313 1296 CURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01240 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01240 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHB[ ]	/* 11 values pushed */\0129 25 25 25 41 25 57 25 73 25 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01225 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01215 14 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0125 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01235 14 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0126 35 22 35 38 35 54 35 70 35 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01215 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01241 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 4 values pushed */\01220 7 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01210 7 30 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 627;
}
);
leftKerningGroup = ring;
note = ring;
rightKerningGroup = ring;
unicode = 02DA;
},
{
glyphname = tilde;
lastChange = "2022-05-11 04:40:55 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"178 1210 OFFCURVE",
"188 1224.667 OFFCURVE",
"200 1238 CURVE SMOOTH",
"221.333 1260.667 OFFCURVE",
"253 1283.333 OFFCURVE",
"297 1286 CURVE SMOOTH",
"389.674 1288.808 OFFCURVE",
"505.923 1169.219 OFFCURVE",
"635 1174 CURVE SMOOTH",
"767.952 1178.924 OFFCURVE",
"865.016 1290.132 OFFCURVE",
"877 1389 CURVE",
"768 1458 LINE",
"758.667 1440.667 OFFCURVE",
"748 1425.667 OFFCURVE",
"736 1413 CURVE SMOOTH",
"714.667 1390.333 OFFCURVE",
"683.667 1368.667 OFFCURVE",
"641 1366 CURVE SMOOTH",
"593.377 1364.168 OFFCURVE",
"534.467 1395.613 OFFCURVE",
"488.5 1422.5 CURVE SMOOTH",
"438.542 1451.721 OFFCURVE",
"368.674 1480.775 OFFCURVE",
"303 1479 CURVE SMOOTH",
"166.959 1474.053 OFFCURVE",
"73.024 1363.195 OFFCURVE",
"61 1264 CURVE",
"170 1194 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 4 values pushed */\01212 8 23 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\0125 8 28 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 938;
}
);
leftKerningGroup = tilde;
note = tilde;
rightKerningGroup = tilde;
unicode = 02DC;
},
{
glyphname = macron;
lastChange = "2022-05-11 04:40:55 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"766 1219 LINE",
"766 1415 LINE",
"61 1415 LINE",
"61 1219 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 4 values pushed */\0121 8 2 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 827;
}
);
leftKerningGroup = macron;
note = macron;
rightKerningGroup = macron;
unicode = 00AF;
},
{
glyphname = cedilla;
lastChange = "2022-05-11 04:40:55 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"147 -205 LINE",
"159.667 -203.667 OFFCURVE",
"172.333 -202 OFFCURVE",
"185 -200 CURVE SMOOTH",
"207.667 -197.333 OFFCURVE",
"233.333 -195 OFFCURVE",
"256 -195 CURVE SMOOTH",
"328.667 -195 OFFCURVE",
"362 -218.667 OFFCURVE",
"356 -266 CURVE",
"345.333 -316.667 OFFCURVE",
"312 -328 OFFCURVE",
"244 -328 CURVE SMOOTH",
"197.333 -328 OFFCURVE",
"160.333 -325 OFFCURVE",
"135 -321 CURVE SMOOTH",
"119.667 -318.333 OFFCURVE",
"106.667 -315.667 OFFCURVE",
"96 -313 CURVE",
"61 -446 LINE",
"81 -453.333 OFFCURVE",
"102 -460 OFFCURVE",
"124 -466 CURVE SMOOTH",
"161.333 -476.667 OFFCURVE",
"210.667 -485 OFFCURVE",
"260 -485 CURVE SMOOTH",
"432.827 -485 OFFCURVE",
"514.577 -439.583 OFFCURVE",
"545 -293 CURVE SMOOTH",
"547.667 -274.333 OFFCURVE",
"550 -258.667 OFFCURVE",
"550 -244 CURVE SMOOTH",
"550 -140.301 OFFCURVE",
"476.65 -83.862 OFFCURVE",
"379 -92 CURVE",
"406 0 LINE",
"201 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\0126 15 19 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\0120 19 6 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 3 values pushed */\0121 19 6 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01228 16 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 3 values pushed */\01235 19 6 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01238 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01214 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01214 19 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\01236 8 30 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\0121 30 36 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01214 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01225 7 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 25 23 25 39 25 55 25 71 25 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 612;
}
);
leftKerningGroup = cedilla;
note = cedilla;
rightKerningGroup = cedilla;
unicode = 00B8;
},
{
glyphname = ogonek;
lastChange = "2022-05-11 04:40:55 +0000";
layers = (
{
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"61 -423.272 OFFCURVE",
"169.244 -500 OFFCURVE",
"313 -500 CURVE SMOOTH",
"351.667 -500 OFFCURVE",
"384.333 -495.333 OFFCURVE",
"411 -490 CURVE SMOOTH",
"425.667 -487.333 OFFCURVE",
"439.667 -483.667 OFFCURVE",
"453 -479 CURVE",
"453 -311 LINE",
"446.333 -312.333 OFFCURVE",
"439.333 -313.333 OFFCURVE",
"432 -314 CURVE SMOOTH",
"418.667 -316 OFFCURVE",
"402.333 -317 OFFCURVE",
"383 -317 CURVE SMOOTH",
"315 -317 OFFCURVE",
"283 -281 OFFCURVE",
"283 -225 CURVE SMOOTH",
"283 -157 OFFCURVE",
"329.667 -80 OFFCURVE",
"455 0 CURVE",
"291 82 LINE",
"247.667 52 OFFCURVE",
"209.333 18.333 OFFCURVE",
"176 -19 CURVE SMOOTH",
"116.257 -84.175 OFFCURVE",
"61 -177.675 OFFCURVE",
"61 -279 CURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01211 10 0 4 \012CALL[ ]	/* CallFunction */\012NPUSHB[ ]	/* 11 values pushed */\0126 11 22 11 38 11 54 11 70 11 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0128 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0128 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01221 19 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01224 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01224 19 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01221 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01214 4 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 14 23 14 39 14 55 14 71 14 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 516;
}
);
leftKerningGroup = ogonek;
note = ogonek;
rightKerningGroup = ogonek;
unicode = 02DB;
},
{
glyphname = dieresiscomb.case;
lastChange = "2022-05-11 04:57:23 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{412, 1427}";
},
{
name = top;
position = "{412, 1803}";
}
);
components = (
{
name = period;
transform = "{0.90002, 0, 0, 0.90002, -30, 1541}";
},
{
name = period;
transform = "{0.90002, 0, 0, 0.90002, 393, 1541}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
width = 868;
}
);
leftKerningGroup = dieresis;
note = dieresis;
rightKerningGroup = dieresis;
},
{
glyphname = dotaccentcomb.case;
lastChange = "2022-05-11 04:57:17 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{198, 1427}";
},
{
name = top;
position = "{198, 1804}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"306 1531 OFFCURVE",
"334 1559 OFFCURVE",
"334 1666 CURVE SMOOTH",
"334 1775 OFFCURVE",
"306 1804 OFFCURVE",
"199 1804 CURVE SMOOTH",
"90 1804 OFFCURVE",
"61 1775 OFFCURVE",
"61 1666 CURVE SMOOTH",
"61 1559 OFFCURVE",
"89 1531 OFFCURVE",
"199 1531 CURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01215 15 5 4 \012CALL[ ]	/* CallFunction */\012NPUSHB[ ]	/* 11 values pushed */\0129 5 25 5 41 5 57 5 73 5 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01215 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01221 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 4 values pushed */\01210 9 0 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 395;
}
);
leftKerningGroup = dotaccent;
note = dotaccent;
rightKerningGroup = dotaccent;
},
{
glyphname = gravecomb.case;
lastChange = "2022-05-11 04:57:37 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{327, 1427}";
},
{
name = top;
position = "{327, 2022}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"592 1654 LINE",
"199 2022 LINE",
"189 2016 OFFCURVE",
"178 2009 OFFCURVE",
"167 2000 CURVE SMOOTH",
"148 1985 OFFCURVE",
"123 1963 OFFCURVE",
"100 1934 CURVE SMOOTH",
"75 1903 OFFCURVE",
"62 1881 OFFCURVE",
"62 1858 CURVE SMOOTH",
"62 1825 OFFCURVE",
"91 1793 OFFCURVE",
"156 1744 CURVE SMOOTH",
"194 1715 OFFCURVE",
"281 1663 OFFCURVE",
"350 1618 CURVE SMOOTH",
"394 1591 OFFCURVE",
"441 1562 OFFCURVE",
"492 1531 CURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01219 15 10 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01219 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01222 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 4 values pushed */\01218 9 0 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 653;
}
);
leftKerningGroup = grave;
note = grave;
rightKerningGroup = grave;
},
{
glyphname = acutecomb.case;
lastChange = "2022-05-11 04:57:45 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{335, 1427}";
},
{
name = top;
position = "{335, 2041}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"216 1564 OFFCURVE",
"265 1596 OFFCURVE",
"311 1626 CURVE SMOOTH",
"371 1665 OFFCURVE",
"488 1743 OFFCURVE",
"512 1760 CURVE SMOOTH",
"546 1785 OFFCURVE",
"571 1806 OFFCURVE",
"586 1823 CURVE SMOOTH",
"601 1840 OFFCURVE",
"608 1856 OFFCURVE",
"608 1873 CURVE SMOOTH",
"608 1896 OFFCURVE",
"594 1920 OFFCURVE",
"569 1951 CURVE SMOOTH",
"540 1986 OFFCURVE",
"517 2007 OFFCURVE",
"498 2022 CURVE SMOOTH",
"487 2030 OFFCURVE",
"478 2036 OFFCURVE",
"469 2041 CURVE",
"61 1658 LINE",
"164 1531 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 3 values pushed */\0129 0 3 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0129 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01221 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 4 values pushed */\0121 9 19 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 672;
}
);
leftKerningGroup = acute;
note = acute;
rightKerningGroup = acute;
},
{
glyphname = hungarumlautcomb.case;
lastChange = "2022-05-11 04:57:54 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{520, 1427}";
},
{
name = top;
position = "{520, 2088}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"245 1570 OFFCURVE",
"281 1613 OFFCURVE",
"314 1654 CURVE SMOOTH",
"371 1724 OFFCURVE",
"420 1782 OFFCURVE",
"459 1834 CURVE SMOOTH",
"502 1884 OFFCURVE",
"522 1919 OFFCURVE",
"522 1949 CURVE SMOOTH",
"522 1979 OFFCURVE",
"500 2004 OFFCURVE",
"457 2031 CURVE SMOOTH",
"418 2055 OFFCURVE",
"386 2070 OFFCURVE",
"363 2078 CURVE SMOOTH",
"350 2082 OFFCURVE",
"337 2086 OFFCURVE",
"326 2088 CURVE",
"61 1617 LINE",
"207 1525 LINE"
);
},
{
closed = 1;
nodes = (
"721 1563 OFFCURVE",
"753 1598 OFFCURVE",
"782 1632 CURVE SMOOTH",
"809 1662 OFFCURVE",
"892 1759 OFFCURVE",
"915 1789 CURVE SMOOTH",
"959 1841 OFFCURVE",
"978 1877 OFFCURVE",
"978 1905 CURVE SMOOTH",
"978 1935 OFFCURVE",
"956 1959 OFFCURVE",
"913 1986 CURVE SMOOTH",
"874 2010 OFFCURVE",
"842 2025 OFFCURVE",
"819 2033 CURVE SMOOTH",
"806 2037 OFFCURVE",
"793 2041 OFFCURVE",
"782 2043 CURVE",
"543 1619 LINE",
"688 1527 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 3 values pushed */\0121 19 3 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1040;
}
);
leftKerningGroup = hungarumlaut;
note = hungarumlaut;
rightKerningGroup = hungarumlaut;
},
{
glyphname = circumflexcomb.case;
lastChange = "2022-05-11 04:58:07 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{434, 1427}";
},
{
name = top;
position = "{434, 2013}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"434 1855 LINE",
"704 1528 LINE",
"817 1602 LINE",
"664 1878 LINE SMOOTH",
"606 1983 OFFCURVE",
"550 2013 OFFCURVE",
"434 2013 CURVE SMOOTH",
"316 2013 OFFCURVE",
"264 1983 OFFCURVE",
"205 1878 CURVE SMOOTH",
"51 1602 LINE",
"164 1528 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 4 values pushed */\0126 9 13 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 868;
}
);
leftKerningGroup = circumflex;
note = circumflex;
rightKerningGroup = circumflex;
},
{
glyphname = caroncomb.case;
lastChange = "2022-05-11 05:15:53 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{434, 1427}";
},
{
name = top;
position = "{434, 2016}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"550 1531 OFFCURVE",
"606 1560 OFFCURVE",
"664 1666 CURVE SMOOTH",
"817 1942 LINE",
"704 2016 LINE",
"434 1688 LINE",
"164 2016 LINE",
"51 1942 LINE",
"205 1666 LINE SMOOTH",
"263 1560 OFFCURVE",
"316 1531 OFFCURVE",
"434 1531 CURVE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 4 values pushed */\0127 9 0 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 868;
}
);
leftKerningGroup = caron;
note = caron;
rightKerningGroup = caron;
},
{
glyphname = brevecomb.case;
lastChange = "2022-05-11 04:58:21 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{405, 1427}";
},
{
name = top;
position = "{405, 1885}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"522 1531 OFFCURVE",
"607 1561 OFFCURVE",
"664 1614 CURVE SMOOTH",
"720 1667 OFFCURVE",
"748 1743 OFFCURVE",
"748 1835 CURVE SMOOTH",
"748 1851 OFFCURVE",
"747 1868 OFFCURVE",
"745 1885 CURVE",
"627 1885 LINE",
"589 1744 OFFCURVE",
"535 1711 OFFCURVE",
"406 1711 CURVE SMOOTH",
"277 1711 OFFCURVE",
"220 1746 OFFCURVE",
"184 1885 CURVE",
"63 1885 LINE",
"62 1870 OFFCURVE",
"61 1856 OFFCURVE",
"61 1841 CURVE SMOOTH",
"61 1748 OFFCURVE",
"89 1670 OFFCURVE",
"146 1616 CURVE SMOOTH",
"202 1562 OFFCURVE",
"289 1531 OFFCURVE",
"406 1531 CURVE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 4 values pushed */\01214 4 0 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 811;
}
);
leftKerningGroup = breve;
note = breve;
rightKerningGroup = breve;
},
{
glyphname = ringcomb.case;
lastChange = "2022-05-11 04:58:33 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{313, 1427}";
},
{
name = top;
position = "{313, 2017}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"386 1531 OFFCURVE",
"450 1542 OFFCURVE",
"495 1578 CURVE SMOOTH",
"539 1614 OFFCURVE",
"565 1674 OFFCURVE",
"565 1773 CURVE SMOOTH",
"565 1873 OFFCURVE",
"537 1934 OFFCURVE",
"492 1970 CURVE SMOOTH",
"447 2006 OFFCURVE",
"384 2017 OFFCURVE",
"313 2017 CURVE SMOOTH",
"242 2017 OFFCURVE",
"179 2006 OFFCURVE",
"134 1970 CURVE SMOOTH",
"89 1934 OFFCURVE",
"61 1873 OFFCURVE",
"61 1773 CURVE SMOOTH",
"61 1674 OFFCURVE",
"88 1614 OFFCURVE",
"133 1578 CURVE SMOOTH",
"177 1542 OFFCURVE",
"241 1531 OFFCURVE",
"313 1531 CURVE"
);
},
{
closed = 1;
nodes = (
"242 1662 OFFCURVE",
"223 1689 OFFCURVE",
"223 1773 CURVE SMOOTH",
"223 1857 OFFCURVE",
"242 1884 OFFCURVE",
"313 1884 CURVE SMOOTH",
"386 1884 OFFCURVE",
"406 1857 OFFCURVE",
"406 1773 CURVE SMOOTH",
"406 1689 OFFCURVE",
"386 1662 OFFCURVE",
"313 1662 CURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 1 value pushed */\01240 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01240 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHB[ ]	/* 11 values pushed */\0129 25 25 25 41 25 57 25 73 25 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01225 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01215 14 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 1 value pushed */\0125 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01235 14 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0126 35 22 35 38 35 54 35 70 35 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHB[ ]	/* 1 value pushed */\01215 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01241 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 4 values pushed */\01220 7 0 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\01210 7 30 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 627;
}
);
leftKerningGroup = ring;
note = ring;
rightKerningGroup = ring;
},
{
glyphname = tildecomb.case;
lastChange = "2022-05-11 05:36:27 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{469, 1427}";
},
{
name = top;
position = "{469, 1836}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"178 1597 OFFCURVE",
"188 1612 OFFCURVE",
"200 1625 CURVE SMOOTH",
"221 1648 OFFCURVE",
"253 1670 OFFCURVE",
"297 1673 CURVE SMOOTH",
"390 1676 OFFCURVE",
"506 1556 OFFCURVE",
"635 1561 CURVE SMOOTH",
"768 1566 OFFCURVE",
"865 1677 OFFCURVE",
"877 1776 CURVE",
"768 1845 LINE",
"759 1828 OFFCURVE",
"748 1813 OFFCURVE",
"736 1800 CURVE SMOOTH",
"715 1777 OFFCURVE",
"684 1756 OFFCURVE",
"641 1753 CURVE SMOOTH",
"593 1751 OFFCURVE",
"534 1783 OFFCURVE",
"489 1810 CURVE SMOOTH",
"439 1839 OFFCURVE",
"369 1868 OFFCURVE",
"303 1866 CURVE SMOOTH",
"167 1861 OFFCURVE",
"73 1750 OFFCURVE",
"61 1651 CURVE",
"170 1581 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 4 values pushed */\01212 8 23 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 4 values pushed */\0125 8 28 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 938;
}
);
leftKerningGroup = tilde;
note = tilde;
rightKerningGroup = tilde;
},
{
glyphname = macroncomb.case;
lastChange = "2022-05-11 05:38:02 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{414, 1427}";
},
{
name = top;
position = "{414, 1767}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"766 1571 LINE",
"766 1767 LINE",
"61 1767 LINE",
"61 1571 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 4 values pushed */\0121 8 2 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 827;
}
);
leftKerningGroup = macron;
note = macron;
rightKerningGroup = macron;
},
{
glyphname = hookabovecomb.case;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{306, 1427}";
},
{
name = top;
position = "{306, 1994}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"230 1566 LINE",
"461 1566 OFFCURVE",
"550 1649 OFFCURVE",
"550 1753 CURVE SMOOTH",
"550 1768 OFFCURVE",
"548 1783 OFFCURVE",
"545 1802 CURVE SMOOTH",
"515 1949 OFFCURVE",
"433 1994 OFFCURVE",
"260 1994 CURVE SMOOTH",
"211 1994 OFFCURVE",
"161 1986 OFFCURVE",
"124 1975 CURVE SMOOTH",
"102 1969 OFFCURVE",
"81 1962 OFFCURVE",
"61 1955 CURVE",
"96 1822 LINE",
"107 1825 OFFCURVE",
"120 1827 OFFCURVE",
"135 1830 CURVE SMOOTH",
"160 1834 OFFCURVE",
"197 1837 OFFCURVE",
"244 1837 CURVE SMOOTH",
"312 1837 OFFCURVE",
"345 1826 OFFCURVE",
"356 1775 CURVE",
"362 1728 OFFCURVE",
"329 1704 OFFCURVE",
"230 1704 CURVE"
);
}
);
width = 1200;
}
);
leftKerningGroup = hookabovecomb.case;
rightKerningGroup = hookabovecomb.case;
},
{
glyphname = dblgravecomb.case;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{520, 1427}";
},
{
name = top;
position = "{520, 2088}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"978 1617 LINE",
"713 2088 LINE",
"702 2086 OFFCURVE",
"689 2082 OFFCURVE",
"676 2078 CURVE SMOOTH",
"653 2070 OFFCURVE",
"621 2055 OFFCURVE",
"582 2031 CURVE SMOOTH",
"539 2004 OFFCURVE",
"517 1979 OFFCURVE",
"517 1949 CURVE SMOOTH",
"517 1919 OFFCURVE",
"537 1884 OFFCURVE",
"580 1834 CURVE SMOOTH",
"619 1782 OFFCURVE",
"668 1724 OFFCURVE",
"725 1654 CURVE SMOOTH",
"758 1613 OFFCURVE",
"794 1570 OFFCURVE",
"832 1525 CURVE"
);
},
{
closed = 1;
nodes = (
"496 1619 LINE",
"257 2043 LINE",
"246 2041 OFFCURVE",
"233 2037 OFFCURVE",
"220 2033 CURVE SMOOTH",
"197 2025 OFFCURVE",
"165 2010 OFFCURVE",
"126 1986 CURVE SMOOTH",
"83 1959 OFFCURVE",
"61 1935 OFFCURVE",
"61 1905 CURVE SMOOTH",
"61 1877 OFFCURVE",
"80 1841 OFFCURVE",
"124 1789 CURVE SMOOTH",
"147 1759 OFFCURVE",
"230 1662 OFFCURVE",
"257 1632 CURVE SMOOTH",
"286 1598 OFFCURVE",
"318 1563 OFFCURVE",
"351 1527 CURVE"
);
}
);
width = 1040;
}
);
leftKerningGroup = dblgravecomb.case;
rightKerningGroup = dblgravecomb.case;
},
{
glyphname = breveinvertedcomb.case;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{405, 1427}";
},
{
name = top;
position = "{405, 1885}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"289 1885 OFFCURVE",
"202 1854 OFFCURVE",
"146 1800 CURVE SMOOTH",
"89 1746 OFFCURVE",
"61 1668 OFFCURVE",
"61 1575 CURVE SMOOTH",
"61 1560 OFFCURVE",
"62 1546 OFFCURVE",
"63 1531 CURVE",
"184 1531 LINE",
"220 1670 OFFCURVE",
"277 1705 OFFCURVE",
"406 1705 CURVE SMOOTH",
"535 1705 OFFCURVE",
"589 1672 OFFCURVE",
"627 1531 CURVE",
"745 1531 LINE",
"747 1548 OFFCURVE",
"748 1565 OFFCURVE",
"748 1581 CURVE SMOOTH",
"748 1673 OFFCURVE",
"720 1749 OFFCURVE",
"664 1802 CURVE SMOOTH",
"607 1855 OFFCURVE",
"522 1885 OFFCURVE",
"406 1885 CURVE"
);
}
);
width = 811;
}
);
leftKerningGroup = breveinvertedcomb.case;
rightKerningGroup = breveinvertedcomb.case;
},
{
glyphname = commaturnedabovecomb.case;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{257, 1427}";
},
{
name = top;
position = "{257, 2066}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"386 1741 OFFCURVE",
"358 1774 OFFCURVE",
"290 1783 CURVE",
"293 1829 OFFCURVE",
"340 1945 OFFCURVE",
"388 2011 CURVE",
"311 2066 LINE",
"278 2046 OFFCURVE",
"231 1988 OFFCURVE",
"193 1915 CURVE SMOOTH",
"156 1842 OFFCURVE",
"126 1752 OFFCURVE",
"126 1707 CURVE SMOOTH",
"126 1591 OFFCURVE",
"144 1528 OFFCURVE",
"257 1528 CURVE SMOOTH",
"359 1528 OFFCURVE",
"386 1556 OFFCURVE",
"386 1659 CURVE"
);
}
);
width = 512;
}
);
leftKerningGroup = commaturnedabovecomb.case;
rightKerningGroup = commaturnedabovecomb.case;
},
{
glyphname = horncomb.case;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
anchors = (
{
name = _topright;
position = "{978, 1427}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"465 1249 LINE",
"713 1266 OFFCURVE",
"810 1308 OFFCURVE",
"875 1372 CURVE SMOOTH",
"940 1435 OFFCURVE",
"977 1531 OFFCURVE",
"977 1739 CURVE",
"740 1739 LINE",
"740 1586 OFFCURVE",
"712 1524 OFFCURVE",
"656 1488 CURVE SMOOTH",
"600 1451 OFFCURVE",
"515 1436 OFFCURVE",
"400 1427 CURVE"
);
}
);
width = 1200;
}
);
leftKerningGroup = horncomb.case;
rightKerningGroup = horncomb.case;
},
{
glyphname = dotbelowcomb.case;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
anchors = (
{
name = _bottom;
position = "{198, 0}";
},
{
name = bottom;
position = "{198, -385}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"306 -385 OFFCURVE",
"334 -357 OFFCURVE",
"334 -250 CURVE SMOOTH",
"334 -141 OFFCURVE",
"306 -112 OFFCURVE",
"199 -112 CURVE SMOOTH",
"90 -112 OFFCURVE",
"61 -141 OFFCURVE",
"61 -250 CURVE SMOOTH",
"61 -357 OFFCURVE",
"89 -385 OFFCURVE",
"199 -385 CURVE"
);
}
);
width = 395;
}
);
leftKerningGroup = dotbelowcomb.case;
rightKerningGroup = dotbelowcomb.case;
},
{
glyphname = dieresisbelowcomb.case;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
anchors = (
{
name = _bottom;
position = "{412, 0}";
},
{
name = bottom;
position = "{412, -376}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"485.702 -347.7 OFFCURVE",
"513.603 -375.6 OFFCURVE",
"622.505 -375.6 CURVE SMOOTH",
"731.408 -375.6 OFFCURVE",
"761.108 -348.6 OFFCURVE",
"761.108 -237.897 CURVE SMOOTH",
"761.108 -125.395 OFFCURVE",
"732.308 -101.094 OFFCURVE",
"622.505 -101.094 CURVE SMOOTH",
"512.703 -101.094 OFFCURVE",
"485.702 -126.295 OFFCURVE",
"485.702 -237.897 CURVE"
);
},
{
closed = 1;
nodes = (
"62.702 -347.7 OFFCURVE",
"90.603 -375.6 OFFCURVE",
"199.505 -375.6 CURVE SMOOTH",
"308.408 -375.6 OFFCURVE",
"338.108 -348.6 OFFCURVE",
"338.108 -237.897 CURVE SMOOTH",
"338.108 -125.395 OFFCURVE",
"309.308 -101.094 OFFCURVE",
"199.505 -101.094 CURVE SMOOTH",
"89.703 -101.094 OFFCURVE",
"62.702 -126.295 OFFCURVE",
"62.702 -237.897 CURVE"
);
}
);
width = 868;
}
);
leftKerningGroup = dieresisbelowcomb.case;
rightKerningGroup = dieresisbelowcomb.case;
},
{
glyphname = commaaccentcomb.case;
lastChange = "2022-05-11 04:47:25 +0000";
layers = (
{
anchors = (
{
name = _bottom;
position = "{232, 0}";
},
{
name = bottom;
position = "{232, -500}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"93 -445 LINE",
"215 -500 LINE",
"229.667 -476 OFFCURVE",
"244.667 -451.333 OFFCURVE",
"260 -426 CURVE SMOOTH",
"285.333 -383.333 OFFCURVE",
"316.333 -327 OFFCURVE",
"339 -279 CURVE SMOOTH",
"359 -235 OFFCURVE",
"370 -203 OFFCURVE",
"370 -179 CURVE SMOOTH",
"370 -144.333 OFFCURVE",
"347 -126.333 OFFCURVE",
"295 -109 CURVE SMOOTH",
"265.667 -99.667 OFFCURVE",
"239.667 -95.667 OFFCURVE",
"221 -93 CURVE SMOOTH",
"209.667 -91.667 OFFCURVE",
"199.333 -91 OFFCURVE",
"190 -91 CURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\0128 15 17 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0128 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01220 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01216 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01216 19 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 438;
}
);
leftKerningGroup = commaaccentcomb;
note = commaaccent;
rightKerningGroup = commaaccentcomb;
},
{
glyphname = cedillacomb.case;
lastChange = "2022-05-11 04:47:25 +0000";
layers = (
{
anchors = (
{
name = _bottom;
position = "{306, 0}";
},
{
name = bottom;
position = "{306, -485}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"147 -205 LINE",
"159.667 -203.667 OFFCURVE",
"172.333 -202 OFFCURVE",
"185 -200 CURVE SMOOTH",
"207.667 -197.333 OFFCURVE",
"233.333 -195 OFFCURVE",
"256 -195 CURVE SMOOTH",
"328.667 -195 OFFCURVE",
"362 -218.667 OFFCURVE",
"356 -266 CURVE",
"345.333 -316.667 OFFCURVE",
"312 -328 OFFCURVE",
"244 -328 CURVE SMOOTH",
"197.333 -328 OFFCURVE",
"160.333 -325 OFFCURVE",
"135 -321 CURVE SMOOTH",
"119.667 -318.333 OFFCURVE",
"106.667 -315.667 OFFCURVE",
"96 -313 CURVE",
"61 -446 LINE",
"81 -453.333 OFFCURVE",
"102 -460 OFFCURVE",
"124 -466 CURVE SMOOTH",
"161.333 -476.667 OFFCURVE",
"210.667 -485 OFFCURVE",
"260 -485 CURVE SMOOTH",
"432.827 -485 OFFCURVE",
"514.577 -439.583 OFFCURVE",
"545 -293 CURVE SMOOTH",
"547.667 -274.333 OFFCURVE",
"550 -258.667 OFFCURVE",
"550 -244 CURVE SMOOTH",
"550 -140.301 OFFCURVE",
"476.65 -83.862 OFFCURVE",
"379 -92 CURVE",
"406 0 LINE",
"201 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\0126 15 19 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\0120 19 6 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 3 values pushed */\0121 19 6 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01228 16 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHB[ ]	/* 3 values pushed */\01235 19 6 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 1 value pushed */\01238 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01214 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01214 19 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\01236 8 30 4 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\0121 30 36 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHB[ ]	/* 1 value pushed */\01214 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01225 7 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 25 23 25 39 25 55 25 71 25 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 612;
}
);
leftKerningGroup = cedilla;
note = cedilla;
rightKerningGroup = cedilla;
},
{
glyphname = ogonekcomb.case;
lastChange = "2022-05-11 04:59:44 +0000";
layers = (
{
anchors = (
{
name = _ogonek;
position = "{453, 0}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"61 -423.272 OFFCURVE",
"169.244 -500 OFFCURVE",
"313 -500 CURVE SMOOTH",
"351.667 -500 OFFCURVE",
"384.333 -495.333 OFFCURVE",
"411 -490 CURVE SMOOTH",
"425.667 -487.333 OFFCURVE",
"439.667 -483.667 OFFCURVE",
"453 -479 CURVE",
"453 -311 LINE",
"446.333 -312.333 OFFCURVE",
"439.333 -313.333 OFFCURVE",
"432 -314 CURVE SMOOTH",
"418.667 -316 OFFCURVE",
"402.333 -317 OFFCURVE",
"383 -317 CURVE SMOOTH",
"315 -317 OFFCURVE",
"283 -281 OFFCURVE",
"283 -225 CURVE SMOOTH",
"283 -157 OFFCURVE",
"329.667 -80 OFFCURVE",
"455 0 CURVE",
"291 82 LINE",
"247.667 52 OFFCURVE",
"209.333 18.333 OFFCURVE",
"176 -19 CURVE SMOOTH",
"116.257 -84.175 OFFCURVE",
"61 -177.675 OFFCURVE",
"61 -279 CURVE"
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */\01211 10 0 4 \012CALL[ ]	/* CallFunction */\012NPUSHB[ ]	/* 11 values pushed */\0126 11 22 11 38 11 54 11 70 11 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0128 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0128 17 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01221 19 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01224 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01224 19 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01221 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHB[ ]	/* 2 values pushed */\01214 4 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHB[ ]	/* 11 values pushed */\0127 14 23 14 39 14 55 14 71 14 5 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 516;
}
);
leftKerningGroup = ogonek;
note = ogonek;
rightKerningGroup = ogonek;
},
{
glyphname = brevebelowcomb.case;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
anchors = (
{
name = _bottom;
position = "{405, 0}";
},
{
name = bottom;
position = "{405, -450}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"522 -450 OFFCURVE",
"607 -420 OFFCURVE",
"664 -367 CURVE SMOOTH",
"720 -314 OFFCURVE",
"748 -238 OFFCURVE",
"748 -146 CURVE SMOOTH",
"748 -130 OFFCURVE",
"747 -113 OFFCURVE",
"745 -96 CURVE",
"627 -96 LINE",
"589 -237 OFFCURVE",
"535 -270 OFFCURVE",
"406 -270 CURVE SMOOTH",
"277 -270 OFFCURVE",
"220 -235 OFFCURVE",
"184 -96 CURVE",
"63 -96 LINE",
"62 -111 OFFCURVE",
"61 -125 OFFCURVE",
"61 -140 CURVE SMOOTH",
"61 -233 OFFCURVE",
"89 -311 OFFCURVE",
"146 -365 CURVE SMOOTH",
"202 -419 OFFCURVE",
"289 -450 OFFCURVE",
"406 -450 CURVE"
);
}
);
width = 811;
}
);
leftKerningGroup = brevebelowcomb.case;
rightKerningGroup = brevebelowcomb.case;
},
{
glyphname = macronbelowcomb.case;
lastChange = "2022-05-11 05:37:28 +0000";
layers = (
{
anchors = (
{
name = _bottom;
position = "{414, 0}";
},
{
name = bottom;
position = "{414, -332}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"726 -332 LINE",
"726 -136 LINE",
"101 -136 LINE",
"101 -332 LINE"
);
}
);
width = 827;
}
);
leftKerningGroup = macronbelowcomb.case;
rightKerningGroup = macronbelowcomb.case;
},
{
glyphname = brevecomb_acutecomb;
lastChange = "2022-05-11 06:11:50 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{405, 1055}";
},
{
name = top;
position = "{405, 2136}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"522 1226 OFFCURVE",
"607 1256 OFFCURVE",
"664 1309 CURVE SMOOTH",
"720 1362 OFFCURVE",
"748 1438 OFFCURVE",
"748 1530 CURVE SMOOTH",
"748 1546 OFFCURVE",
"747 1563 OFFCURVE",
"745 1580 CURVE",
"627 1580 LINE",
"589 1439 OFFCURVE",
"535 1406 OFFCURVE",
"406 1406 CURVE SMOOTH",
"277 1406 OFFCURVE",
"220 1441 OFFCURVE",
"184 1580 CURVE",
"63 1580 LINE",
"62 1565 OFFCURVE",
"61 1551 OFFCURVE",
"61 1536 CURVE SMOOTH",
"61 1443 OFFCURVE",
"89 1365 OFFCURVE",
"146 1311 CURVE SMOOTH",
"202 1257 OFFCURVE",
"289 1226 OFFCURVE",
"406 1226 CURVE"
);
},
{
closed = 1;
nodes = (
"286 1689 OFFCURVE",
"335 1721 OFFCURVE",
"381 1751 CURVE SMOOTH",
"441 1790 OFFCURVE",
"558 1868 OFFCURVE",
"582 1885 CURVE SMOOTH",
"616 1910 OFFCURVE",
"641 1931 OFFCURVE",
"656 1948 CURVE SMOOTH",
"671 1965 OFFCURVE",
"678 1981 OFFCURVE",
"678 1998 CURVE SMOOTH",
"678 2021 OFFCURVE",
"664 2045 OFFCURVE",
"639 2076 CURVE SMOOTH",
"610 2111 OFFCURVE",
"587 2132 OFFCURVE",
"568 2147 CURVE SMOOTH",
"557 2155 OFFCURVE",
"548 2161 OFFCURVE",
"539 2166 CURVE",
"131 1783 LINE",
"234 1656 LINE"
);
}
);
width = 811;
}
);
leftKerningGroup = brevecomb;
rightKerningGroup = breve;
},
{
glyphname = brevecomb_gravecomb;
lastChange = "2022-05-11 06:11:50 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{405, 1055}";
},
{
name = top;
position = "{405, 2117}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"522 1226 OFFCURVE",
"607 1256 OFFCURVE",
"664 1309 CURVE SMOOTH",
"720 1362 OFFCURVE",
"748 1438 OFFCURVE",
"748 1530 CURVE SMOOTH",
"748 1546 OFFCURVE",
"747 1563 OFFCURVE",
"745 1580 CURVE",
"627 1580 LINE",
"589 1439 OFFCURVE",
"535 1406 OFFCURVE",
"406 1406 CURVE SMOOTH",
"277 1406 OFFCURVE",
"220 1441 OFFCURVE",
"184 1580 CURVE",
"63 1580 LINE",
"62 1565 OFFCURVE",
"61 1551 OFFCURVE",
"61 1536 CURVE SMOOTH",
"61 1443 OFFCURVE",
"89 1365 OFFCURVE",
"146 1311 CURVE SMOOTH",
"202 1257 OFFCURVE",
"289 1226 OFFCURVE",
"406 1226 CURVE"
);
},
{
closed = 1;
nodes = (
"670 1749 LINE",
"277 2117 LINE",
"267 2111 OFFCURVE",
"256 2104 OFFCURVE",
"245 2095 CURVE SMOOTH",
"226 2080 OFFCURVE",
"201 2058 OFFCURVE",
"178 2029 CURVE SMOOTH",
"153 1998 OFFCURVE",
"140 1976 OFFCURVE",
"140 1953 CURVE SMOOTH",
"140 1920 OFFCURVE",
"169 1888 OFFCURVE",
"234 1839 CURVE SMOOTH",
"272 1810 OFFCURVE",
"359 1758 OFFCURVE",
"428 1713 CURVE SMOOTH",
"472 1686 OFFCURVE",
"519 1657 OFFCURVE",
"570 1626 CURVE"
);
}
);
width = 811;
}
);
leftKerningGroup = brevecomb;
rightKerningGroup = breve;
},
{
glyphname = brevecomb_hookabovecomb;
lastChange = "2022-05-11 06:11:50 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{405, 1055}";
},
{
name = top;
position = "{405, 2096.975}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"522 1226 OFFCURVE",
"607 1256 OFFCURVE",
"664 1309 CURVE SMOOTH",
"720 1362 OFFCURVE",
"748 1438 OFFCURVE",
"748 1530 CURVE SMOOTH",
"748 1546 OFFCURVE",
"747 1563 OFFCURVE",
"745 1580 CURVE",
"627 1580 LINE",
"589 1439 OFFCURVE",
"535 1406 OFFCURVE",
"406 1406 CURVE SMOOTH",
"277 1406 OFFCURVE",
"220 1441 OFFCURVE",
"184 1580 CURVE",
"63 1580 LINE",
"62 1565 OFFCURVE",
"61 1551 OFFCURVE",
"61 1536 CURVE SMOOTH",
"61 1443 OFFCURVE",
"89 1365 OFFCURVE",
"146 1311 CURVE SMOOTH",
"202 1257 OFFCURVE",
"289 1226 OFFCURVE",
"406 1226 CURVE"
);
},
{
closed = 1;
nodes = (
"329 1669 LINE",
"560 1669 OFFCURVE",
"649 1752 OFFCURVE",
"649 1856 CURVE SMOOTH",
"649 1871 OFFCURVE",
"647 1886 OFFCURVE",
"644 1905 CURVE SMOOTH",
"614 2052 OFFCURVE",
"532 2097 OFFCURVE",
"359 2097 CURVE SMOOTH",
"310 2097 OFFCURVE",
"260 2089 OFFCURVE",
"223 2078 CURVE SMOOTH",
"201 2072 OFFCURVE",
"180 2065 OFFCURVE",
"160 2058 CURVE",
"195 1925 LINE",
"206 1928 OFFCURVE",
"219 1930 OFFCURVE",
"234 1933 CURVE SMOOTH",
"259 1937 OFFCURVE",
"296 1940 OFFCURVE",
"343 1940 CURVE SMOOTH",
"411 1940 OFFCURVE",
"444 1929 OFFCURVE",
"455 1878 CURVE",
"461 1831 OFFCURVE",
"428 1807 OFFCURVE",
"329 1807 CURVE"
);
}
);
width = 811;
}
);
leftKerningGroup = brevecomb;
rightKerningGroup = breve;
},
{
glyphname = brevecomb_tildecomb;
lastChange = "2022-05-11 06:11:50 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{405, 1055}";
},
{
name = top;
position = "{405, 1954}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"522 1226 OFFCURVE",
"607 1256 OFFCURVE",
"664 1309 CURVE SMOOTH",
"720 1362 OFFCURVE",
"748 1438 OFFCURVE",
"748 1530 CURVE SMOOTH",
"748 1546 OFFCURVE",
"747 1563 OFFCURVE",
"745 1580 CURVE",
"627 1580 LINE",
"589 1439 OFFCURVE",
"535 1406 OFFCURVE",
"406 1406 CURVE SMOOTH",
"277 1406 OFFCURVE",
"220 1441 OFFCURVE",
"184 1580 CURVE",
"63 1580 LINE",
"62 1565 OFFCURVE",
"61 1551 OFFCURVE",
"61 1536 CURVE SMOOTH",
"61 1443 OFFCURVE",
"89 1365 OFFCURVE",
"146 1311 CURVE SMOOTH",
"202 1257 OFFCURVE",
"289 1226 OFFCURVE",
"406 1226 CURVE"
);
},
{
closed = 1;
nodes = (
"114 1725 OFFCURVE",
"124 1740 OFFCURVE",
"136 1753 CURVE SMOOTH",
"157 1776 OFFCURVE",
"189 1798 OFFCURVE",
"233 1801 CURVE SMOOTH",
"326 1804 OFFCURVE",
"442 1684 OFFCURVE",
"571 1689 CURVE SMOOTH",
"704 1694 OFFCURVE",
"801 1805 OFFCURVE",
"813 1904 CURVE",
"704 1973 LINE",
"695 1956 OFFCURVE",
"684 1941 OFFCURVE",
"672 1928 CURVE SMOOTH",
"651 1905 OFFCURVE",
"620 1884 OFFCURVE",
"577 1881 CURVE SMOOTH",
"529 1879 OFFCURVE",
"470 1911 OFFCURVE",
"425 1938 CURVE SMOOTH",
"375 1967 OFFCURVE",
"305 1996 OFFCURVE",
"239 1994 CURVE SMOOTH",
"103 1989 OFFCURVE",
"9 1878 OFFCURVE",
"-3 1779 CURVE",
"106 1709 LINE"
);
}
);
width = 811;
}
);
leftKerningGroup = brevecomb;
rightKerningGroup = breve;
},
{
glyphname = circumflexcomb_acutecomb;
lastChange = "2022-05-11 06:11:50 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{434, 1055}";
},
{
name = top;
position = "{434, 2201}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"434 1517 LINE",
"704 1190 LINE",
"817 1264 LINE",
"664 1540 LINE SMOOTH",
"606 1646 OFFCURVE",
"550 1675 OFFCURVE",
"434 1675 CURVE SMOOTH",
"316 1675 OFFCURVE",
"263 1646 OFFCURVE",
"205 1540 CURVE SMOOTH",
"51 1264 LINE",
"164 1190 LINE"
);
},
{
closed = 1;
nodes = (
"315 1754 OFFCURVE",
"364 1786 OFFCURVE",
"410 1816 CURVE SMOOTH",
"470 1855 OFFCURVE",
"587 1933 OFFCURVE",
"611 1950 CURVE SMOOTH",
"645 1975 OFFCURVE",
"670 1996 OFFCURVE",
"685 2013 CURVE SMOOTH",
"700 2030 OFFCURVE",
"707 2046 OFFCURVE",
"707 2063 CURVE SMOOTH",
"707 2086 OFFCURVE",
"693 2110 OFFCURVE",
"668 2141 CURVE SMOOTH",
"639 2176 OFFCURVE",
"616 2197 OFFCURVE",
"597 2212 CURVE SMOOTH",
"586 2220 OFFCURVE",
"577 2226 OFFCURVE",
"568 2231 CURVE",
"160 1848 LINE",
"263 1721 LINE"
);
}
);
width = 868;
}
);
leftKerningGroup = circumflexcomb;
rightKerningGroup = circumflex;
},
{
glyphname = circumflexcomb_gravecomb;
lastChange = "2022-05-11 06:11:50 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{434, 1055}";
},
{
name = top;
position = "{434, 2182}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"434 1517 LINE",
"704 1190 LINE",
"817 1264 LINE",
"664 1540 LINE SMOOTH",
"606 1646 OFFCURVE",
"550 1675 OFFCURVE",
"434 1675 CURVE SMOOTH",
"316 1675 OFFCURVE",
"263 1646 OFFCURVE",
"205 1540 CURVE SMOOTH",
"51 1264 LINE",
"164 1190 LINE"
);
},
{
closed = 1;
nodes = (
"699 1814 LINE",
"306 2182 LINE",
"296 2176 OFFCURVE",
"285 2169 OFFCURVE",
"274 2160 CURVE SMOOTH",
"255 2145 OFFCURVE",
"230 2123 OFFCURVE",
"207 2094 CURVE SMOOTH",
"182 2063 OFFCURVE",
"169 2041 OFFCURVE",
"169 2018 CURVE SMOOTH",
"169 1985 OFFCURVE",
"198 1953 OFFCURVE",
"263 1904 CURVE SMOOTH",
"301 1875 OFFCURVE",
"388 1823 OFFCURVE",
"457 1778 CURVE SMOOTH",
"501 1751 OFFCURVE",
"548 1722 OFFCURVE",
"599 1691 CURVE"
);
}
);
width = 868;
}
);
leftKerningGroup = circumflexcomb;
rightKerningGroup = circumflex;
},
{
glyphname = circumflexcomb_hookabovecomb;
lastChange = "2022-05-11 06:11:50 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{434, 1055}";
},
{
name = top;
position = "{434, 2161.975}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"434 1517 LINE",
"704 1190 LINE",
"817 1264 LINE",
"664 1540 LINE SMOOTH",
"606 1646 OFFCURVE",
"550 1675 OFFCURVE",
"434 1675 CURVE SMOOTH",
"316 1675 OFFCURVE",
"263 1646 OFFCURVE",
"205 1540 CURVE SMOOTH",
"51 1264 LINE",
"164 1190 LINE"
);
},
{
closed = 1;
nodes = (
"358 1734 LINE",
"589 1734 OFFCURVE",
"678 1817 OFFCURVE",
"678 1921 CURVE SMOOTH",
"678 1936 OFFCURVE",
"676 1951 OFFCURVE",
"673 1970 CURVE SMOOTH",
"643 2117 OFFCURVE",
"561 2162 OFFCURVE",
"388 2162 CURVE SMOOTH",
"339 2162 OFFCURVE",
"289 2154 OFFCURVE",
"252 2143 CURVE SMOOTH",
"230 2137 OFFCURVE",
"209 2130 OFFCURVE",
"189 2123 CURVE",
"224 1990 LINE",
"235 1993 OFFCURVE",
"248 1995 OFFCURVE",
"263 1998 CURVE SMOOTH",
"288 2002 OFFCURVE",
"325 2005 OFFCURVE",
"372 2005 CURVE SMOOTH",
"440 2005 OFFCURVE",
"473 1994 OFFCURVE",
"484 1943 CURVE",
"490 1896 OFFCURVE",
"457 1872 OFFCURVE",
"358 1872 CURVE"
);
}
);
width = 868;
}
);
leftKerningGroup = circumflexcomb;
rightKerningGroup = circumflex;
},
{
glyphname = circumflexcomb_tildecomb;
lastChange = "2022-05-11 06:11:50 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{434, 1055}";
},
{
name = top;
position = "{434, 2019}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"434 1517 LINE",
"704 1190 LINE",
"817 1264 LINE",
"664 1540 LINE SMOOTH",
"606 1646 OFFCURVE",
"550 1675 OFFCURVE",
"434 1675 CURVE SMOOTH",
"316 1675 OFFCURVE",
"263 1646 OFFCURVE",
"205 1540 CURVE SMOOTH",
"51 1264 LINE",
"164 1190 LINE"
);
},
{
closed = 1;
nodes = (
"143 1790 OFFCURVE",
"153 1805 OFFCURVE",
"165 1818 CURVE SMOOTH",
"186 1841 OFFCURVE",
"218 1863 OFFCURVE",
"262 1866 CURVE SMOOTH",
"355 1869 OFFCURVE",
"471 1749 OFFCURVE",
"600 1754 CURVE SMOOTH",
"733 1759 OFFCURVE",
"830 1870 OFFCURVE",
"842 1969 CURVE",
"733 2038 LINE",
"724 2021 OFFCURVE",
"713 2006 OFFCURVE",
"701 1993 CURVE SMOOTH",
"680 1970 OFFCURVE",
"649 1949 OFFCURVE",
"606 1946 CURVE SMOOTH",
"558 1944 OFFCURVE",
"499 1976 OFFCURVE",
"454 2003 CURVE SMOOTH",
"404 2032 OFFCURVE",
"334 2061 OFFCURVE",
"268 2059 CURVE SMOOTH",
"132 2054 OFFCURVE",
"38 1943 OFFCURVE",
"26 1844 CURVE",
"135 1774 LINE"
);
}
);
width = 868;
}
);
leftKerningGroup = circumflexcomb;
rightKerningGroup = circumflex;
},
{
glyphname = brevecomb_acutecomb.case;
lastChange = "2022-05-11 06:11:20 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{405, 1055}";
},
{
name = top;
position = "{405, 2136}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"522 1226 OFFCURVE",
"607 1256 OFFCURVE",
"664 1309 CURVE SMOOTH",
"720 1362 OFFCURVE",
"748 1438 OFFCURVE",
"748 1530 CURVE SMOOTH",
"748 1546 OFFCURVE",
"747 1563 OFFCURVE",
"745 1580 CURVE",
"627 1580 LINE",
"589 1439 OFFCURVE",
"535 1406 OFFCURVE",
"406 1406 CURVE SMOOTH",
"277 1406 OFFCURVE",
"220 1441 OFFCURVE",
"184 1580 CURVE",
"63 1580 LINE",
"62 1565 OFFCURVE",
"61 1551 OFFCURVE",
"61 1536 CURVE SMOOTH",
"61 1443 OFFCURVE",
"89 1365 OFFCURVE",
"146 1311 CURVE SMOOTH",
"202 1257 OFFCURVE",
"289 1226 OFFCURVE",
"406 1226 CURVE"
);
},
{
closed = 1;
nodes = (
"286 1689 OFFCURVE",
"335 1721 OFFCURVE",
"381 1751 CURVE SMOOTH",
"441 1790 OFFCURVE",
"558 1868 OFFCURVE",
"582 1885 CURVE SMOOTH",
"616 1910 OFFCURVE",
"641 1931 OFFCURVE",
"656 1948 CURVE SMOOTH",
"671 1965 OFFCURVE",
"678 1981 OFFCURVE",
"678 1998 CURVE SMOOTH",
"678 2021 OFFCURVE",
"664 2045 OFFCURVE",
"639 2076 CURVE SMOOTH",
"610 2111 OFFCURVE",
"587 2132 OFFCURVE",
"568 2147 CURVE SMOOTH",
"557 2155 OFFCURVE",
"548 2161 OFFCURVE",
"539 2166 CURVE",
"131 1783 LINE",
"234 1656 LINE"
);
}
);
width = 811;
}
);
leftKerningGroup = brevecomb;
rightKerningGroup = breve;
},
{
glyphname = brevecomb_gravecomb.case;
lastChange = "2022-05-11 06:11:20 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{405, 1055}";
},
{
name = top;
position = "{405, 2117}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"522 1226 OFFCURVE",
"607 1256 OFFCURVE",
"664 1309 CURVE SMOOTH",
"720 1362 OFFCURVE",
"748 1438 OFFCURVE",
"748 1530 CURVE SMOOTH",
"748 1546 OFFCURVE",
"747 1563 OFFCURVE",
"745 1580 CURVE",
"627 1580 LINE",
"589 1439 OFFCURVE",
"535 1406 OFFCURVE",
"406 1406 CURVE SMOOTH",
"277 1406 OFFCURVE",
"220 1441 OFFCURVE",
"184 1580 CURVE",
"63 1580 LINE",
"62 1565 OFFCURVE",
"61 1551 OFFCURVE",
"61 1536 CURVE SMOOTH",
"61 1443 OFFCURVE",
"89 1365 OFFCURVE",
"146 1311 CURVE SMOOTH",
"202 1257 OFFCURVE",
"289 1226 OFFCURVE",
"406 1226 CURVE"
);
},
{
closed = 1;
nodes = (
"670 1749 LINE",
"277 2117 LINE",
"267 2111 OFFCURVE",
"256 2104 OFFCURVE",
"245 2095 CURVE SMOOTH",
"226 2080 OFFCURVE",
"201 2058 OFFCURVE",
"178 2029 CURVE SMOOTH",
"153 1998 OFFCURVE",
"140 1976 OFFCURVE",
"140 1953 CURVE SMOOTH",
"140 1920 OFFCURVE",
"169 1888 OFFCURVE",
"234 1839 CURVE SMOOTH",
"272 1810 OFFCURVE",
"359 1758 OFFCURVE",
"428 1713 CURVE SMOOTH",
"472 1686 OFFCURVE",
"519 1657 OFFCURVE",
"570 1626 CURVE"
);
}
);
width = 811;
}
);
leftKerningGroup = brevecomb;
rightKerningGroup = breve;
},
{
glyphname = brevecomb_hookabovecomb.case;
lastChange = "2022-05-11 06:11:20 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{405, 1055}";
},
{
name = top;
position = "{405, 2096.975}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"522 1226 OFFCURVE",
"607 1256 OFFCURVE",
"664 1309 CURVE SMOOTH",
"720 1362 OFFCURVE",
"748 1438 OFFCURVE",
"748 1530 CURVE SMOOTH",
"748 1546 OFFCURVE",
"747 1563 OFFCURVE",
"745 1580 CURVE",
"627 1580 LINE",
"589 1439 OFFCURVE",
"535 1406 OFFCURVE",
"406 1406 CURVE SMOOTH",
"277 1406 OFFCURVE",
"220 1441 OFFCURVE",
"184 1580 CURVE",
"63 1580 LINE",
"62 1565 OFFCURVE",
"61 1551 OFFCURVE",
"61 1536 CURVE SMOOTH",
"61 1443 OFFCURVE",
"89 1365 OFFCURVE",
"146 1311 CURVE SMOOTH",
"202 1257 OFFCURVE",
"289 1226 OFFCURVE",
"406 1226 CURVE"
);
},
{
closed = 1;
nodes = (
"329 1669 LINE",
"560 1669 OFFCURVE",
"649 1752 OFFCURVE",
"649 1856 CURVE SMOOTH",
"649 1871 OFFCURVE",
"647 1886 OFFCURVE",
"644 1905 CURVE SMOOTH",
"614 2052 OFFCURVE",
"532 2097 OFFCURVE",
"359 2097 CURVE SMOOTH",
"310 2097 OFFCURVE",
"260 2089 OFFCURVE",
"223 2078 CURVE SMOOTH",
"201 2072 OFFCURVE",
"180 2065 OFFCURVE",
"160 2058 CURVE",
"195 1925 LINE",
"206 1928 OFFCURVE",
"219 1930 OFFCURVE",
"234 1933 CURVE SMOOTH",
"259 1937 OFFCURVE",
"296 1940 OFFCURVE",
"343 1940 CURVE SMOOTH",
"411 1940 OFFCURVE",
"444 1929 OFFCURVE",
"455 1878 CURVE",
"461 1831 OFFCURVE",
"428 1807 OFFCURVE",
"329 1807 CURVE"
);
}
);
width = 811;
}
);
leftKerningGroup = brevecomb;
rightKerningGroup = breve;
},
{
glyphname = brevecomb_tildecomb.case;
lastChange = "2022-05-11 06:11:20 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{405, 1055}";
},
{
name = top;
position = "{405, 1954}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"522 1226 OFFCURVE",
"607 1256 OFFCURVE",
"664 1309 CURVE SMOOTH",
"720 1362 OFFCURVE",
"748 1438 OFFCURVE",
"748 1530 CURVE SMOOTH",
"748 1546 OFFCURVE",
"747 1563 OFFCURVE",
"745 1580 CURVE",
"627 1580 LINE",
"589 1439 OFFCURVE",
"535 1406 OFFCURVE",
"406 1406 CURVE SMOOTH",
"277 1406 OFFCURVE",
"220 1441 OFFCURVE",
"184 1580 CURVE",
"63 1580 LINE",
"62 1565 OFFCURVE",
"61 1551 OFFCURVE",
"61 1536 CURVE SMOOTH",
"61 1443 OFFCURVE",
"89 1365 OFFCURVE",
"146 1311 CURVE SMOOTH",
"202 1257 OFFCURVE",
"289 1226 OFFCURVE",
"406 1226 CURVE"
);
},
{
closed = 1;
nodes = (
"114 1725 OFFCURVE",
"124 1740 OFFCURVE",
"136 1753 CURVE SMOOTH",
"157 1776 OFFCURVE",
"189 1798 OFFCURVE",
"233 1801 CURVE SMOOTH",
"326 1804 OFFCURVE",
"442 1684 OFFCURVE",
"571 1689 CURVE SMOOTH",
"704 1694 OFFCURVE",
"801 1805 OFFCURVE",
"813 1904 CURVE",
"704 1973 LINE",
"695 1956 OFFCURVE",
"684 1941 OFFCURVE",
"672 1928 CURVE SMOOTH",
"651 1905 OFFCURVE",
"620 1884 OFFCURVE",
"577 1881 CURVE SMOOTH",
"529 1879 OFFCURVE",
"470 1911 OFFCURVE",
"425 1938 CURVE SMOOTH",
"375 1967 OFFCURVE",
"305 1996 OFFCURVE",
"239 1994 CURVE SMOOTH",
"103 1989 OFFCURVE",
"9 1878 OFFCURVE",
"-3 1779 CURVE",
"106 1709 LINE"
);
}
);
width = 811;
}
);
leftKerningGroup = brevecomb;
rightKerningGroup = breve;
},
{
glyphname = circumflexcomb_acutecomb.case;
lastChange = "2022-05-11 06:11:20 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{434, 1055}";
},
{
name = top;
position = "{434, 2201}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"434 1517 LINE",
"704 1190 LINE",
"817 1264 LINE",
"664 1540 LINE SMOOTH",
"606 1646 OFFCURVE",
"550 1675 OFFCURVE",
"434 1675 CURVE SMOOTH",
"316 1675 OFFCURVE",
"263 1646 OFFCURVE",
"205 1540 CURVE SMOOTH",
"51 1264 LINE",
"164 1190 LINE"
);
},
{
closed = 1;
nodes = (
"315 1754 OFFCURVE",
"364 1786 OFFCURVE",
"410 1816 CURVE SMOOTH",
"470 1855 OFFCURVE",
"587 1933 OFFCURVE",
"611 1950 CURVE SMOOTH",
"645 1975 OFFCURVE",
"670 1996 OFFCURVE",
"685 2013 CURVE SMOOTH",
"700 2030 OFFCURVE",
"707 2046 OFFCURVE",
"707 2063 CURVE SMOOTH",
"707 2086 OFFCURVE",
"693 2110 OFFCURVE",
"668 2141 CURVE SMOOTH",
"639 2176 OFFCURVE",
"616 2197 OFFCURVE",
"597 2212 CURVE SMOOTH",
"586 2220 OFFCURVE",
"577 2226 OFFCURVE",
"568 2231 CURVE",
"160 1848 LINE",
"263 1721 LINE"
);
}
);
width = 868;
}
);
leftKerningGroup = circumflexcomb;
rightKerningGroup = circumflex;
},
{
glyphname = circumflexcomb_gravecomb.case;
lastChange = "2022-05-11 06:11:20 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{434, 1055}";
},
{
name = top;
position = "{434, 2182}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"434 1517 LINE",
"704 1190 LINE",
"817 1264 LINE",
"664 1540 LINE SMOOTH",
"606 1646 OFFCURVE",
"550 1675 OFFCURVE",
"434 1675 CURVE SMOOTH",
"316 1675 OFFCURVE",
"263 1646 OFFCURVE",
"205 1540 CURVE SMOOTH",
"51 1264 LINE",
"164 1190 LINE"
);
},
{
closed = 1;
nodes = (
"699 1814 LINE",
"306 2182 LINE",
"296 2176 OFFCURVE",
"285 2169 OFFCURVE",
"274 2160 CURVE SMOOTH",
"255 2145 OFFCURVE",
"230 2123 OFFCURVE",
"207 2094 CURVE SMOOTH",
"182 2063 OFFCURVE",
"169 2041 OFFCURVE",
"169 2018 CURVE SMOOTH",
"169 1985 OFFCURVE",
"198 1953 OFFCURVE",
"263 1904 CURVE SMOOTH",
"301 1875 OFFCURVE",
"388 1823 OFFCURVE",
"457 1778 CURVE SMOOTH",
"501 1751 OFFCURVE",
"548 1722 OFFCURVE",
"599 1691 CURVE"
);
}
);
width = 868;
}
);
leftKerningGroup = circumflexcomb;
rightKerningGroup = circumflex;
},
{
glyphname = circumflexcomb_hookabovecomb.case;
lastChange = "2022-05-11 06:11:20 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{434, 1055}";
},
{
name = top;
position = "{434, 2161.975}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"434 1517 LINE",
"704 1190 LINE",
"817 1264 LINE",
"664 1540 LINE SMOOTH",
"606 1646 OFFCURVE",
"550 1675 OFFCURVE",
"434 1675 CURVE SMOOTH",
"316 1675 OFFCURVE",
"263 1646 OFFCURVE",
"205 1540 CURVE SMOOTH",
"51 1264 LINE",
"164 1190 LINE"
);
},
{
closed = 1;
nodes = (
"358 1734 LINE",
"589 1734 OFFCURVE",
"678 1817 OFFCURVE",
"678 1921 CURVE SMOOTH",
"678 1936 OFFCURVE",
"676 1951 OFFCURVE",
"673 1970 CURVE SMOOTH",
"643 2117 OFFCURVE",
"561 2162 OFFCURVE",
"388 2162 CURVE SMOOTH",
"339 2162 OFFCURVE",
"289 2154 OFFCURVE",
"252 2143 CURVE SMOOTH",
"230 2137 OFFCURVE",
"209 2130 OFFCURVE",
"189 2123 CURVE",
"224 1990 LINE",
"235 1993 OFFCURVE",
"248 1995 OFFCURVE",
"263 1998 CURVE SMOOTH",
"288 2002 OFFCURVE",
"325 2005 OFFCURVE",
"372 2005 CURVE SMOOTH",
"440 2005 OFFCURVE",
"473 1994 OFFCURVE",
"484 1943 CURVE",
"490 1896 OFFCURVE",
"457 1872 OFFCURVE",
"358 1872 CURVE"
);
}
);
width = 868;
}
);
leftKerningGroup = circumflexcomb;
rightKerningGroup = circumflex;
},
{
glyphname = circumflexcomb_tildecomb.case;
lastChange = "2022-05-11 06:11:20 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{434, 1055}";
},
{
name = top;
position = "{434, 2019}";
}
);
layerId = "410E5E1C-5FD0-457E-A79B-7BF13808BDAC";
paths = (
{
closed = 1;
nodes = (
"434 1517 LINE",
"704 1190 LINE",
"817 1264 LINE",
"664 1540 LINE SMOOTH",
"606 1646 OFFCURVE",
"550 1675 OFFCURVE",
"434 1675 CURVE SMOOTH",
"316 1675 OFFCURVE",
"263 1646 OFFCURVE",
"205 1540 CURVE SMOOTH",
"51 1264 LINE",
"164 1190 LINE"
);
},
{
closed = 1;
nodes = (
"143 1790 OFFCURVE",
"153 1805 OFFCURVE",
"165 1818 CURVE SMOOTH",
"186 1841 OFFCURVE",
"218 1863 OFFCURVE",
"262 1866 CURVE SMOOTH",
"355 1869 OFFCURVE",
"471 1749 OFFCURVE",
"600 1754 CURVE SMOOTH",
"733 1759 OFFCURVE",
"830 1870 OFFCURVE",
"842 1969 CURVE",
"733 2038 LINE",
"724 2021 OFFCURVE",
"713 2006 OFFCURVE",
"701 1993 CURVE SMOOTH",
"680 1970 OFFCURVE",
"649 1949 OFFCURVE",
"606 1946 CURVE SMOOTH",
"558 1944 OFFCURVE",
"499 1976 OFFCURVE",
"454 2003 CURVE SMOOTH",
"404 2032 OFFCURVE",
"334 2061 OFFCURVE",
"268 2059 CURVE SMOOTH",
"132 2054 OFFCURVE",
"38 1943 OFFCURVE",
"26 1844 CURVE",
"135 1774 LINE"
);
}
);
width = 868;
}
);
leftKerningGroup = circumflexcomb;
rightKerningGroup = circumflex;
}
);
instances = (
{
interpolationWeight = 237;
instanceInterpolations = {
"410E5E1C-5FD0-457E-A79B-7BF13808BDAC" = 1;
};
name = Regular;
weightClass = Normal;
}
);
manufacturer = "Szymon Celej";
manufacturerURL = www.sorkintype.com;
unitsPerEm = 2048;
versionMajor = 1;
versionMinor = 2;
}
